- name: 'CIS Control 1: Inventory and Control of Hardware Assets'
  number: "1"
  description: Actively manage (inventory, track, and correct) all hardware devices on the network so that only authorized devices are given access, and unauthorized and unmanaged devices are found and prevented from gaining access.
  why: |-
    Attackers, who can be located anywhere in the world, are continuously scanning the address space of target organizations, waiting for new and possibly unprotected systems to be attached to the network. They are particularly interested in devices which come and go off of the enterprise’s network such as laptops or Bring-Your-Own-Device (BYOD) which might be out of synchronization with security updates or might already be compromised. Attacks can take advantage of new hardware that is installed on the network one evening but not configured and patched with appropriate security updates until the following day. Even devices that are not visible from the Internet can be used by attackers who have already gained internal access and are hunting for internal pivot points or victims. Additional systems that connect to the enterprise’s network (e.g., demonstration systems, temporary test systems, guest networks) should also be managed carefully and/or isolated in order to prevent adversarial access from affecting the security of enterprise operations.

    Large, complex enterprises understandably struggle with the challenge of managing intricate, fast-changing environments. But attackers have shown the ability, patience, and willingness to “inventory and control” our assets at very large scale in order to support their opportunities.

    Managed control of all devices also plays a critical role in planning and executing system backup, incident response, and recovery.
  subcontrols:
  - name: '1.1: Utilize an Active Discovery Tool'
    number: "1.1"
    description: Utilize an active discovery tool to identify devices connected to the organization’s network and update the hardware asset inventory.
    header:
      assetType: Devices
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The hardware asset inventory
    - name: The asset discovery tool(s) used by the organization
    - name: The most recent scan results from the asset discovery tool(s)
    - name: Configuration information for the asset discovery tool(s)
    - name: Approved configuration(s) to all tools to interface with the hardware asset inventory
    operations:
    - name: Create a list of the assets discovered by the tools by enumerating the assets from the scans provided in I3, and creating a union of those enumerations (this list of discovered assets will be M1).
    - name: Use M1 and I1 to generate the list of assets that are on the Hardware Asset Inventory but were not discovered by any of the tools (this list will be M2).
    - name: Using the information in I4, check the configuration information of each tool against the appropriate approved configuration from I5 to verify that the tool is capable of interfacing with the hardware asset inventory to make automatic updates. Create a list of those tools that are compliant (M3), and a list of those that are not (M4).
    measures:
    - M1 = List of discovered assets
    - M2 = List of undiscovered assets
    - M3 = List of compliant tools
    - M4 = List of non-compliant tools
    - M5 = Count of discovered assets (count of M1)
    - M6 = Count of compliant tools (count of M3)
    - M7 = Total count of hardware assets (count of Input 1)
    - M8 = Total count of asset discovery tools (count of Input 2)
    metrics:
    - name: Notes
      metric: ' If M8 is 0, then this Sub-Control receives a failing score and the other metrics don''t apply.'
      calculation: :code:``
    - name: Asset Discovery Coverage
      metric: ' Asset Discovery Coverage'
      calculation: :code:`M5 / M7`
    - name: Tool Compliance Ratio
      metric: ' Tool Compliance Ratio'
      calculation: :code:`M6 / M8`
  - name: '1.2: Use a Passive Asset Discovery Tool'
    number: "1.2"
    description: Utilize a passive discovery tool to identify devices connected to the organization’s network and automatically update the organization’s hardware asset inventory.
    header:
      assetType: Devices
      securityFunction: Identify
      implementationGroups:
      - "3"
    dependencies:
    - '12.1: Maintain an Inventory of Network Boundaries'
    inputs:
    - name: The list of the organization's networks
    - name: The list of passive asset discovery tools in use by the organization. For each, include the location of the tool's configuration information and which networks it covers.
    - name: Approved configuration(s) for each passive asset discovery tool. Configurations should include the settings necessary for the tool to be able to update the organization's hardware asset inventory.
    operations:
    - name: For each passive asset discovery tool provided in Input 2, check the tool's configuration against the appropriate approved configuration from Input 3.
    - name: "\tCreate a list of those tools that are properly configured (M1)"
    - name: "\tCreate a list of those tools that are improperly configured (M2) noting the deviations from proper configuration"
    - name: For each of the organization's networks provided in Input 1, check Input 2 and M1 to ensure that at least one properly configured passive asset discovery tool covers that network.
    - name: "\tCreate a list of the organization's networks that have coverage from at least one properly configured passive asset discovery tool (M3)"
    - name: "\tCreate a list of the organization's networks that do not have coverage from any properly configured passive asset discovery tools (M4)"
    measures:
    - M1 = List of properly configured passive asset discovery tools (compliant tool list)
    - M2 = List of improperly configured passive asset discovery tools (non-compliant tool list)
    - M3 = List of organization's networks with coverage from at least one properly configured passive asset discovery tool (compliant network list)
    - M4 = List of organization's networks that do not have coverage from any properly configured passive asset discovery tool (non-compliant network list)
    - M5 = Count of networks with coverage from at least one properly configured passive asset discovery tool (count of M3)
    - M6 = Total count of the organization's networks (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of the organization''s networks with coverage from at least one properly configured passive asset discovery tool to the total number of networks'
      calculation: :code:`M5 / M6`
  - name: '1.3: Use DHCP Logging to Update Asset Inventory'
    number: "1.3"
    description: Use Dynamic Host Configuration Protocol (DHCP) logging on all DHCP servers or IP address management tools to update the organization’s hardware asset inventory.
    header:
      assetType: Devices
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    inputs:
    - name: The list of DHCP servers
    - name: The list of CMDB servers (i.e. asset inventory systems)
    operations:
    - name: For each DHCP server, check whether DHCP logging is enabled
    - name: For each CMDB server, check whether DHCP logs are used to update IP addresses
    measures:
    - M1 = Count of DHCP servers (using Input 1)
    - M2 = List of DHCP servers with logging enabled
    - M3 = Count of M2
    - M4 = Count of CMDB servers (using Input 2)
    - M5 = List of CMDB servers configured to use DHCP logs to update IP addresses
    - M6 = Count of M5
    - M7 = List of devices in the DHCP server logs that are not included in the CMDB servers
    - M8 = Count of M7
    - M9 = List of devices in the DHCP server logs that are included in the CMDB servers
    - M10 = Count of M9
    metrics:
    - name: Notes
      metric: ' M5 > 0 indicates a non up-to-date asset inventory'
      calculation: :code:``
    - name: DHCP Logging Quality
      metric: ' Ratio of appropriately configured DHCP logging enabled to known DHCP servers'
      calculation: :code:`M3 / M1`
    - name: CMDB Configuration Quality
      metric: ' Ratio of appropriately configured CMDB servers using DHCP logging to update IP addresses'
      calculation: :code:`M6 / M4`
  - name: '1.4: Maintain Detailed Asset Inventory'
    number: "1.4"
    description: Maintain an accurate and up-to-date inventory of all technology assets with the potential to store or process information. This inventory shall include all assets, whether connected to the organization’s network or not.
    header:
      assetType: Devices
      securityFunction: Identify
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: 'Endpoint Inventory: The organization''s current inventory list (the "to be checked" list).'
    - name: A "ground truth" inventory list to compare with input 1.  This list would be enhanced by manual verification, but a tool-generated or aggregated list could be substituted here.  This should be an aggregation of the devices detected over a period of time, preferably not from a single scan.
    - name: A write-up of the procedure for adding or removing assets to or from the inventory - only for manual review.
    operations:
    - name: '* If Input 1 is not provided, this sub-control is measured at a 0 (complete fail).'
    - name: '* If Input 2 is not provided, no true accuracy measurement can be made for this sub-control.'
    - name: '* Calculate the intersection of Input 1 and Input 2, noting items in the inventory and not in "ground truth" and items in "ground truth" not in the inventory.'
    measures:
    - M1 = List of items in the intersection of Input 1 and Input 2
    - M2 = Count of items in M1
    - M3 = List of items in Input 2
    - M4 = Count of items in M3
    - M5 = List of items in the inventory and not in "ground truth"
    - M6 = Count of items in M5
    - M7 = List of items not in the inventory and in "ground truth"
    - M8 = Count of items in M7
    metrics:
    - name: Accuracy Score
      metric: ' What percentage of the "ground truth" inventory is accounted for in the organization''s current asset inventory?'
      calculation: :code:`M2 / M4`
    - name: Procedure Review
      metric: ' Second, manual review/rating of the inventory procedures, to include adding and removing assets, and the time allowable or expected, after acquisition or disposal of assets.'
      calculation: :code:``
  - name: '1.5: Maintain Asset Inventory Information'
    number: "1.5"
    description: Ensure that the hardware asset inventory records the network address, hardware address, machine name, data asset owner, and department for each asset and whether the hardware asset has been approved to connect to the network.
    header:
      assetType: Devices
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    inputs:
    - name: Detailed endpoint inventory
    operations:
    - name: 'For each endpoint, identify detailed information, such as:'
    - name: "\t* Network Address"
    - name: "\t* Hardware Address (applies to virtual endpoints)"
    - name: "\t* Machine name"
    - name: "\t* Data asset owner"
    - name: "\t* Assigned department"
    - name: Identify endpoints with all detailed information identified
    - name: For each endpoint, identify network connection approval
    measures:
    - M1 = List of endpoints in inventory
    - M2 = Count of M1
    - M3 = List of endpoints with network connection approval
    - M4 = Count of M3
    - M5 = List of endpoints with all detailed information
    - M6 = Count of M5
    metrics:
    - name: Endpoint Inventory Quality
      metric: ' The ratio of endpoints with all detailed information to the total number of inventoried endpoints'
      calculation: :code:`M6 / M2`
    - name: Endpoint Inventory Authorization Quality
      metric: ' The ratio of endpoints with approval to connect to the network'
      calculation: :code:`M4 / M2`
  - name: '1.6: Address Unauthorized Assets'
    number: "1.6"
    description: Ensure that unauthorized assets are either removed from the network, quarantined or the inventory is updated in a timely manner.
    header:
      assetType: Devices
      securityFunction: Respond
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    inputs:
    - name: A list of discovered assets not currently present in the asset inventory ("unauthorized" assets).
    - name: 'Endpoint Inventory: Current hardware inventory (sub-control 1.4)'
    - name: An organizationally defined time frame for "timely" (recommend 24 hours or better)
    - name: (Optional) Measurement results would be more useful if the disposition of the items (removed, added to inventory, quarantined, etc.) was provided to be verified, but this is not absolutely necessary.
    operations:
    - name: 'If the optional disposition list is provided, the checks would be tailored to those dispositions.  For the following, assume no disposition list is available:'
    - name: ""
    - name: At the time frame specified by Input 3, for each unauthorized asset (Input 1), check to see if the asset is present in the updated asset inventory (Input 2), keeping track of unauthorized items
    - name: For those Input 1 items that are not in Input 2, scan the network to determine if the item is still reachable on the network.
    measures:
    - M1 = List of items not in the inventory
    - M2 = Count of items in M1
    - M3 = List of items not reachable
    - M4 = Count of items in M3
    - M5 = List of items not in the inventory or that are unreachable
    - M6 = Count of items in M5
    - M7 = List of items in the inventory
    - M8 = Count of items in M7
    - M9 = The number of items from Input 1 **NOT** passing either Operation 1 or Operation 2
    - M10 = The total number of items in Input 1
    metrics:
    - name: Unauthorized Asset Remediation
      metric: ' The ratio of unaccounted for, unauthorized assets, to the total assets in the asset inventory. If the value of M6 is 0, there are no unauthorized assets that remain unaccounted for. In this case, the value of the metric is 1.'
      calculation: :code:`(M8 - M6) / M8`
  - name: '1.7: Deploy Port Level Access Control'
    number: "1.7"
    description: Utilize port level access control, following 802.1x standards, to control which devices can authenticate to the network. The authentication system shall be tied into the hardware asset inventory data to ensure only authorized devices can connect to the network.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: List of 802.1x authenticators
    - name: List of 802.1x authentication servers (i.e. RADIUS/Diameter servers)
    - name: List of CMDB servers
    operations:
    - name: For each 802.1x authenticator, ensure proper configuration
    - name: For each 802.1x authentication server, ensure proper configuration, including connection to at least one CMDB server
    measures:
    - 'M1 = Boolean: 802.1x authenticators are in use'
    - 'M2 = Boolean: 802.1x authentication servers are in use'
    - M3 = List of inappropriately configured 802.1x authenticators
    - M4 = Count of M3
    - M5 = List of appropriately configured 802.1x authenticators
    - M6 = Count of M5
    - M7 = List of inappropriately configured 802.1x authentication servers
    - M8 = Count of M7
    - M9 = List of appropriately configured 802.1x authentication servers
    - M10 = Count of M9
    - M11 = Count of 802.1x authentication servers (from Input 2)
    - M12 = Count of 802.1x authenticators (from Input 1)
    metrics:
    - name: 802.1x Deployment
      metric: ' Is 802.1x deployed?'
      calculation: :code:`M1 AND M2`
    - name: Authenticator Coverage
      metric: ' Ratio of improperly configured 802.1x authenticators to total number of 802.1x authenticators'
      calculation: :code:`M4 / M12`
    - name: Authentication Server Coverage
      metric: ' Ratio of improperly configured 802.1x authentication servers to total number of 802.1x authentication servers'
      calculation: :code:`M8 / M11`
  - name: '1.8: Utilize Client Certificates to Authenticate Hardware Assets'
    number: "1.8"
    description: Use client certificates to authenticate hardware assets connecting to the organization’s trusted network.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    operations:
    - name: Enumerate hardware devices (physical and virtual) from the endpoint inventory
    - name: For each hardware device, examine device client authentication certificate configuration noting appropriate and inappropriate configurations
    measures:
    - M1 = List of hardware devices (operation 1)
    - M2 = List of appropriately configured hardware devices (operation 2)
    - M3 = List of inappropriately configured hardware devices (operation 2)
    - M4 = Count of hardware devices (count of M1)
    - M5 = Count of appropriately configured hardware devices (count of M2)
    - M6 = Count of inappropriately configured hardware devices (count of M3)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured hardware devices to the number of hardware devices'
      calculation: :code:`M5 / M4`
- name: 'CIS Control 2: Inventory and Control of Software Assets'
  number: "2"
  description: Actively manage (inventory, track, and correct) all software on the network so that only authorized software is installed and can execute, and that all unauthorized and unmanaged software is found and prevented from installation or execution.
  why: |-
    Attackers continuously scan target organizations looking for vulnerable versions of software that can be remotely exploited. Some attackers also distribute hostile web pages, document files, media files, and other content via their own web pages or otherwise trustworthy third-party sites. When unsuspecting victims access this content with a vulnerable browser or other client-side program, attackers compromise their machines, often installing backdoor programs and bots that give the attacker long-term control of the system. Some sophisticated attackers may use zero-day exploits, which take advantage of previously unknown vulnerabilities for which no patch has yet been released by the software vendor. Without proper knowledge or control of the software deployed in an organization, defenders cannot properly secure their assets.

    Poorly controlled machines are more likely to be either running software that is unneeded for business purposes (introducing potential security flaws), or running malware introduced by an attacker after a system is compromised. Once a single machine has been exploited, attackers often use it as a staging point for collecting sensitive information from the compromised system and from other systems connected to it. In addition, compromised machines are used as a launching point for movement throughout the network and partnering networks. In this way, attackers may quickly turn one compromised machine into many. Organizations that do not have complete software inventories are unable to find systems running vulnerable or malicious software to mitigate problems or root out attackers.

    Managed control of all software also plays a critical role in planning and executing system backup, incident response, and recovery.
  subcontrols:
  - name: '2.1: Maintain Inventory of Authorized Software'
    number: "2.1"
    description: Maintain an up-to-date list of all authorized software that is required in the enterprise for any business purpose on any business system.
    header:
      assetType: Applications
      securityFunction: Identify
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: 'Authorized Software List: The authorized software list (containing a timestamp indicating both last updated and last verified values).'
    - name: An organizationally defined acceptable timeframe for "up-to-date" (recommend at least monthly)
    operations:
    - name: Test for the presence of the list; A TRUE/FALSE value (M1)
    - name: (Optional) If specific attributes of the software are deemed required, test for those (vendor, product name, version, business case, etc.)
    - name: Compare the timestamp of Input 1 against the current date to determine if the most recent update/verification is within the timeframe specified by Input 2; A TRUE/FALSE value (M2).
    measures:
    - M1 = TRUE if authorized software list is present and in the proper format, FALSE otherwise
    - M2 = TRUE if the most recent update/verification is within the "up-to-date" threshold; FALSE otherwise
    - ""
    metrics:
    - name: Update Quality
      metric: ' Is the authorized software list present and up-to-date?'
      calculation: :code:`M1 AND M2`
  - name: '2.2: Ensure Software is Supported by Vendor'
    number: "2.2"
    description: Ensure that only software applications or operating systems currently supported and receiving vendor updates are added to the organization’s authorized software inventory.  Unsupported software should be tagged as unsupported in the inventory system.
    header:
      assetType: Applications
      securityFunction: Identify
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: 'Authorized Software List: The authorized software list with a notation of "supported" or "unsupported" for each entry (sub-control 2.1)'
    - name: Access to an authoritative source of information indicating supported/unsupported details by product.
    operations:
    - name: For each entry in Input 1, perform a lookup in Input 2 to verify.
    - name: For each entry in Input 1 labeled "supported", perform a lookup in Input 2.  From these lookups, note the list of authorized software labeled "supported" but are actually not supported based on the authoritative source lookup.
    - name: For each entry in Input 1 labeled "unsupported", perform a lookup in Input 2.  From these lookups, note the list of authorized software labeled "unsupported" but are actually supported based on the authoritative source lookup.
    measures:
    - M1 = List of items in the authorized software list that are unsupported (combination of Operation 1 and those initially marked as unsupported in Input 1)
    - M2 = Count of M1
    - M3 = List of authorized software
    - M4 = Count of M3
    - M5 = List of items in the authorized software list that are mislabeled as supported
    - M6 = Count of M5
    - M7 = List of items in the authorized software list that are mislabeled as unsupported
    - M8 = Count of M7
    - 'M9 = # of items in Input 1 that are unsupported (combination of Operation 1 results and those initially marked as unsupported in Input 1)'
    - 'M10 = Total # of authorized software (from Input 1)'
    - M11 = The number of items from Input 1 labeled "supported" but are actually not supported (from Operation 2)
    - M12 = The number of items from Input 1 labeled "unsupported" but are actually supported (from Operation 3)
    metrics:
    - name: Percentage of Unsupported Software in Use
      metric: ' What percentage of authorized software in use is unsupported?'
      calculation: :code:`(M4 - M2) / M4`
    - name: Rate of False Positives
      metric: ' What percentage of software listed as supported is actually not supported?'
      calculation: :code:`(M4 - M5) / M4`
    - name: Rate of False Negatives
      metric: ' What percentage of software listed as unsupported is actually supported?'
      calculation: :code:`(M4 - M8) / M4`
  - name: '2.3: Utilize Software Inventory Tools'
    number: "2.3"
    description: Utilize software inventory tools throughout the organization to automate the documentation of all software on business systems.
    header:
      assetType: Applications
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    inputs:
    - name: Endpoint inventory
    - name: List of software inventory tools
    operations:
    - name: For each software inventory, count covered endpoints and calculate the aggregate (becomes M2)
    - name: Count number of endpoints loadable with software (becomes M3)
    measures:
    - M1 = Count of software inventory tools (from Input 2)
    - M2 = List of endpoints covered by software inventory tools
    - M3 = Count of M2
    - M4 = List of endpoints not covered by software inventory tools
    - M5 = Count of M4
    - M6 = List of endpoints loadable with software
    - M7 = Count of M6
    - M8 = List of endpoints not loadable with software
    - M9 = Count of M8
    - ""
    metrics:
    - name: Software Inventory Tool Usage
      metric: ' Are software inventory tools used?'
      calculation: :code:`(M1 == 0) OR (M1 == 1)`
    - name: Inventory Tool Coverage
      metric: ' The ratio of endpoints covered by automated software inventory tools to the total number of applicable endpoints'
      calculation: :code:`M3 / M7`
  - name: '2.4: Track Software Inventory Information'
    number: "2.4"
    description: The software inventory system should track the name, version, publisher, and install date for all software, including operating systems authorized by the organization.
    header:
      assetType: Applications
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.3: Utilize Software Inventory Tools'
    inputs:
    - name: Detailed software inventory
    operations:
    - name: 'For each entry in the software inventory, including operating systems, identify detailed information such as:'
    - name: "\t* Software name (market name)"
    - name: "\t* Software version (market version)"
    - name: "\t* Software publisher"
    - name: "\t* Installation date (timestamp)"
    - name: For each entry in the software inventory, including operating systems, identify authorization state
    - name: Identify software with all detailed information identified
    measures:
    - M1 = Count of entries in software inventory (from Input 1)
    - M2 = List of entries authorized for installation
    - M3 = Count of M2
    - M4 = List of entries not authorized for installation
    - M5 = Count of M4
    - M6 = List of entries with all detailed information
    - M7 = Count of M6
    - M8 = List of entries without all detailed information
    - M9 = Count of M8
    metrics:
    - name: Inventory Quality
      metric: ' The ratio of entries with all detailed information to the total number of entries'
      calculation: :code:`M7 / M1`
    - name: Inventory Authorization Quality
      metric: ' The ratio of entries authorized to be installed to the total number of entries'
      calculation: :code:`M3 / M1`
  - name: '2.5: Integrate Software and Hardware Asset Inventories'
    number: "2.5"
    description: The software inventory system should be tied into the hardware asset inventory so all devices and associated software are tracked from a single location.
    header:
      assetType: Applications
      securityFunction: Identify
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    operations:
    - name: Enumerate software inventory systems from the endpoint inventory
    - name: Enumerate hardware inventory systems from the endpoint inventory
    - name: For each software inventory system, examine its configuration to ensure that it is tied to at least one hardware inventory system, noting appropriately and inappropriately configured software inventory systems
    measures:
    - M1 = List of software inventory systems
    - M2 = List of hardware inventory systems
    - M3 = List of appropriately configured software inventory systems
    - M4 = List of inappropriately configured software inventory systems
    - M5 = Count of software inventory systems (count of M1)
    - M6 = Count of hardware inventory systems (count of M2)
    - M7 = Count of appropriately configured software inventory systems (count of M3)
    - M8 = Count of inappropriately configured software inventory systems (count of M4)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured software inventory systems to the number of software inventory systems'
      calculation: :code:`M7 / M5`
  - name: '2.6: Address Unapproved Software'
    number: "2.6"
    description: Ensure that unauthorized software is either removed or the inventory is updated in a timely manner.
    header:
      assetType: Applications
      securityFunction: Respond
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '2.1: Maintain Inventory of Authorzied Software'
    inputs:
    - name: 'Authorized Software List\ :sub:`i`\ : The previous list of authorized software'
    - name: An organizationally defined allowable time frame for resolution of discovered unauthorized software (recommend at least monthly)
    - name: 'Software-capable Endpoints: The list of endpoints to be checked (derived from hardware inventory; see sub-control 1.4)'
    - name: 'Authorized Software List\ :sub:`i+1`\ : The updated authorized software list, following the time frame defined by Input 2'
    - name: The "scanning threshold"; the time period between scan 1 and scan 2
    operations:
    - name: For each endpoint in Input 3, scan the installed software present on that endpoint.
    - name: Compare the installed software list for each endpoint (M1) to the authorized software list (Input 1) to generate the unauthorized software list for that endpoint (M2).
    - name: Wait the "scanning threshold" time period (Input 5) and re-scan the endpoints specified by Input 3.
    - name: For each software on the M2 list, determine if that software is still present in the Operation 3 scan.
    - name: For those that are still present, check Input 4 to determine if the software is now present on the updated authorized software list (Input 4).  Software that remains installed on the machine, but does not appear on the updated authorized software list is added to the unaddressed software list for that endpoint (M3).
    measures:
    - M1 = The list of software installed on a given endpoint, per Operation 1.
    - M2 = The list of unauthorized software installed on a given endpoint, identified by comparing M1 to Input 1.
    - M3 = The list of unaddressed software installed on a given endpoint, identified by follow-up scan.
    - M4 = The number of items in M2 (# of unauthorized software per endpoint).
    - M5 = The number of items in M3 (# of unaddressed software per endpoint).
    metrics:
    - name: Unauthorized Software (Per Endpoint)
      metric: ' Ensure unauthorized software installations are addressed'
      calculation: :code:`(M4 - M5) / M4`
    - name: Unauthorized Software (Organizational)
      metric: ' The organizational metric is calculated by averaging the results of the "per endpoint" metric above.'
      calculation: :code:``
  - name: '2.7: Utilize Application Whitelisting'
    number: "2.7"
    description: Utilize application whitelisting technology on all assets to ensure that only authorized software executes and all unauthorized software is blocked from executing on assets.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized software
    operations:
    - name: Enumerate endpoints capable of leveraging whitelisting technology (e.g. some network and other devices may not enable third-party software installation or otherwise have constrained environments precluding the use of whitelisting software)
    - name: For each eligible endpoint (operation 1), examine the software inventory for whitelisting applications related to that endpoint, noting endpoints with and without whitelisting capabilities
    - name: For each endpoint with whitelisting capabilities, examine the whitelisting software's configuration to ensure only authorized software is considered executable and that attempts to execute unauthorized software is blocked, noting appropriately and inappropriately configured software
    measures:
    - M1 = List of endpoints capable of leveraging whitelisting technology
    - M2 = List of endpoints with whitelisting capabilities installed
    - M3 = List of endpoints without whitelisting capabilities installed
    - M4 = List of endpoints with appropriately configured whitelisting capabilities
    - M5 = List of endpoints with inappropriately configured whitelisting capabilities
    - M6 = Count of endpoints capable of leveraging whitelisting technology (count of M1)
    - M7 = Count of endpoints with whitelisting capabilities installed (count of M2)
    - M8 = The number of endpoints without whitelisting capabilities installed (count of M3)
    - M9 = Count of endpoints with appropriately configured whitelisting capabilities (count of M4)
    - M10 = Count of endpoints with inappropriately configured whitelisting capabilities (count of M5)
    - ""
    metrics:
    - name: Whitelisting Installation Coverage
      metric: ' The ratio of endpoints with whitelisting capabilities installed to the number of whitelisting-eligible endpoints'
      calculation: :code:`M7 / M6`
    - name: Whitelisting Configuration Coverage
      metric: ' The ratio of endpoints with appropriately configured whitelisting capabilities to the number of endpoints with whitelisting capabilities'
      calculation: :code:`M9 /  M7`
  - name: '2.8: Implement Application Whitelisting of Libraries'
    number: "2.8"
    description: The organization’s application whitelisting software must ensure that only authorized software libraries (such as *.dll, *.ocx, *.so, etc.) are allowed to load into a system process.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.7: Utilize Application Whitelisting'
    inputs:
    - name: The list of authorized software
    - name: The list of authorized software libraries
    operations:
    - name: Enumerate all instances of whitelisting software from the software inventory
    - name: For each instance of whitelisting software, examine its configuration to ensure that it is configured to allow process loading of authorized libraries found in the authorized software library list, noting appropriately and inappropriately configured whitelisting software
    measures:
    - M1 = List of all instances of whitelisting software found in the software inventory
    - M2 = List of appropriately configured whitelisting software instances
    - M3 = List of inappropriately configured whitelisting software instances
    - M4 = Count of all instances of whitelisting software found in the software inventory (count of M1)
    - M5 = Count of appropriately configured whitelisting software instances (count of M2)
    - M6 = Count of inappropriately configured whitelisting software instances (count of M3)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured whitelisting software instances to the total number of whitelisting software instances in the enterprise'
      calculation: :code:`M5 / M4`
  - name: '2.9: Implement Application Whitelisting of Scripts'
    number: "2.9"
    description: The organization’s application whitelisting software must ensure that only authorized, digitally signed scripts (such as *.ps1,*.py, macros, etc.) are allowed to run on a system.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.7: Utilize Application Whitelisting'
    inputs:
    - name: The list of authorized software
    - name: The list of authorized scripts
    operations:
    - name: Enumerate all instances of whitelisting software from the software inventory
    - name: For each instance of whitelisting software, examine its configuration to ensure that it is configured to allow execution of authorized and signed scripts, noting appropriately and inappropriately configured whitelisting software
    measures:
    - M1 = List of all instances of whitelisting software found in the software inventory
    - M2 = List of appropriately configured whitelisting software instances
    - M3 = List of inappropriately configured whitelisting software instances
    - M4 = Count of all instances of whitelisting software found in the software inventory (count of M1)
    - M5 = Count of appropriately configured whitelisting software instances (count of M2)
    - M6 = Count of inappropriately configured whitelisting software instances (count of M3)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured whitelisting software instances to the total number of whitelisting software instances in the enterprise'
      calculation: :code:`M5 / M4`
  - name: '2.10: Physically or Logically Segregate High Risk Applications'
    number: "2.10"
    description: Physically or logically segregated systems should be used to isolate and run software that is required for business operations but incurs higher risk for the organization.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: List of approved high-risk applications (subset of Approved Software List). For each, include the mechanisms used to provide separation.
    - name: Approved configuration(s) for each separation mechanism listed in Input 1
    operations:
    - name: For each application in Input 1, compare the configurations of the associated separation mechanisms to the appropriate approved configuration(s) from Input 2.
    - name: "\tCreate a list of applications that are adequately separated noting which configuration(s) were checked (M1)"
    - name: "\tCreate a list of applications that are not adequately separated noting which configurations were checked and any deviations"
    measures:
    - M1 = List of high-risk applications that are properly segregated (compliant list)
    - M2 = List of high-risk applications that are not properly segregated (non-compliant list)
    - M3 = Count of high-risk applications that are properly segregated (count of M1)
    - M4 = The total number of approved high-risk applications (count of Input 1)
    metrics:
    - name: High Risk Software Separation
      metric: ' The ratio of properly separated high-risk applications to the total number of high-risk applications'
      calculation: :code:`M3 / M4`
- name: 'CIS Control 3: Continuous Vulnerability Management'
  number: "3"
  description: Continuously acquire, assess, and take action on new information in order to identify vulnerabilities, remediate, and minimize the window of opportunity for attackers.
  why: |-
    Cyber defenders must operate in a constant stream of new information: software updates, patches, security advisories, threat bulletins, etc. Understanding and managing vulnerabilities has become a continuous activity, requiring significant time, attention, and resources.

    Attackers have access to the same information and can take advantage of gaps between the appearance of new knowledge and remediation. For example, when researchers report new vulnerabilities, a race starts among all parties, including: attackers (to “weaponize,” deploy an attack, exploit), vendors (to develop, deploy patches or signatures and updates), and defenders (to assess risk, regression-test patches, install).

    Organizations that do not scan for vulnerabilities and proactively address discovered flaws face a significant likelihood of having their computer systems compromised. Defenders face particular challenges in scaling remediation across an entire enterprise, and prioritizing actions with conflicting priorities, and sometimes uncertain side effects.
  subcontrols:
  - name: '3.1: Run Automated Vulnerability Scanning Tools'
    number: "3.1"
    description: Utilize an up-to-date Security Content Automation Protocol (SCAP) compliant vulnerability scanning tool to automatically scan all systems on the network on a weekly or more frequent basis to identify all potential vulnerabilities on the organization’s systems.
    header:
      assetType: Applications
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '2.3: Utilize Software Inventory Tools'
    inputs:
    - name: List of endpoints
    - name: List of vulnerability scanning tools
    - name: List of SCAP-validated vulnerability scanning tools
    - name: Most recent scan results for each vulnerability scanning tool
    operations:
    - name: For each vulnerability scanning tool, enumerate the set of covered endpoints
    - name: Union the set of covered endpoints
    - name: For each vulnerability scanning tool, inspect tool configuration for at least weekly scans
    - name: For each vulnerability scanning tool, inspect tool results/logs for at least weekly scans
    measures:
    - M1 = List of endpoints covered by vulnerability scanning tools
    - M2 = Count of M1
    - M3 = Count of endpoints (from Input 1)
    - M4 = List of vulnerability scanning tools configured to scan at least weekly
    - M5 = Count of M4
    - M6 = List of vulnerability scanning tools not configured to scan at least weekly
    - M7 = Count of M6
    - M8 = List of vulnerability scanning results having occurred in at least the past week
    - M9 = Count of M8
    - M10 = List of vulnerability scanning results having not occurred in at least the past week
    - M11 = Count of M10
    - M12 = Count of SCAP-validated vulnerability scanning tools (from Input 2)
    - M13 = Count of vulnerability scanning tools (from Input 3)
    metrics:
    - name: Vulnerability Scanning Coverage
      metric: ' The ratio of endpoints covered by at least one vulnerability scanning tool to the total number of endpoints'
      calculation: :code:`M2 / M3`
    - name: Vulnerability Scanner Configuration Quality
      metric: ' The ratio of correctly configured vulnerability scanners to the total number of vulnerability scanners'
      calculation: :code:`M5 / M13`
    - name: Vulnerability Scan Timeliness
      metric: ' The ratio of scanners having actually scanned in at least the past week to the total number of vulnerability scanners'
      calculation: :code:`M9 / M13`
    - name: SCAP-Validated Vulnerability Scanner Coverage
      metric: ' The ratio of SCAP-validated scanners to the total number of vulnerability scanners'
      calculation: :code:`M12 / M13`
  - name: '3.2: Perform Authenticated Vulnerability Scanning'
    number: "3.2"
    description: Perform authenticated vulnerability scanning with agents running locally on each system or with remote scanners that are configured with elevated rights on the system being tested.
    header:
      assetType: Applications
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: List of deployed vulnerability scanning tools
    - name: List of authenticated vulnerability scanners
    - name: Time threshold for last use of vulnerability scanner
    operations:
    - name: For each deployed vulnerability scanner, check whether it is in the list of authenticated vulnerability scanners, noting those that are and those that are not
    - name: For each deployed vulnerability scanner, verify that it has been used within time threshold
    - name: For each authorized vulnerability scanner
    - name: "\tEnumerate endpoints covered"
    - name: "\tCheck configuration for authenticated scanning on each endpoint"
    - name: Aggregate number of endpoints covered (becomes M5)
    - name: Aggregate correct configuration (becomes M6)
    measures:
    - M1 = Count of deployed vulnerability scanning tools (from Input 1)
    - M2 = List of unauthenticated vulnerability scanning tools
    - M3 = Count of M2
    - M4 = List of authenticated vulnerability scanning tools
    - M5 = Count of M4
    - M6 = List of vulnerability scanning tools recently used
    - M7 = Count of M6
    - M8 = List of vulnerability scanning tools not recently used
    - M9 = Count of M8
    - M10 = List of endpoints covered by at least one authenticated vulnerability scanner
    - M11 = Count of M10
    - M12 = List of endpoints scanned in an authenticated manner
    - M13 = Count of M12
    - M14 = List of endpoints not scanned in an authenticated manner
    - M15 = Count of M14
    metrics:
    - name: Authenticated Vulnerability Scanning Tool Coverage
      metric: ' Percentage of authenticated vulnerability scanning tools (100% is desired)'
      calculation: :code:`(M1 - M5) / M1`
    - name: Recently Used Vulnerability Scanning Tools
      metric: ' Percentage of vulnerability scanning tools recently used'
      calculation: :code:`(M1 - M7) / M1`
    - name: Coverage
      metric: ' Authenticated scanning coverage'
      calculation: :code:`M13 / M11`
  - name: '3.3: Protect Dedicated Assessment Accounts'
    number: "3.3"
    description: Use a dedicated account for authenticated vulnerability scans, which should not be used for any other administrative activities and should be tied to specific machines at specific IP addresses.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    inputs:
    - name: List of vulnerability scanning accounts
    - name: List of vulnerability scanning machines
    operations:
    - name: For each vulnerability scanning account, ensure account configuration to log in only to one or more of the vulnerability scanning machines
    measures:
    - M1 = Total number of vulnerability scanning accounts (from Input 1)
    - M2 = List of vulnerability scanning accounts configured to log in only to one or more of the vulnerability scanning machines
    - M3 = Count of M2
    - M4 = List of vulnerability scanning account configured to log in to any machine other than one of the vulnerability scanning machines
    - M5 = Count of M4
    metrics:
    - name: Misconfigured Account Ratio
      metric: ' Ratio of misconfigured vulnerability scanning accounts to the total number of vulnerability scanning accounts'
      calculation: :code:`(M1 - M3) / M1`
  - name: '3.4: Deploy Automated Operating System Patch Management Tools'
    number: "3.4"
    description: Deploy automated software update tools in order to ensure that the operating systems are running the most recent security updates provided by the software vendor.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The required OS auto-update configuration (this could vary by organization, by product, by security tool, etc.). It could be 1 setting or multiple settings. It would need to be determined if partial settings are creditable, potential weighting of settings, any dependencies, etc. Such logic should all be part of Input 1.
    - name: 'The list of required updates (this could be pulled from the vendor''s website, or could be an organization''s selected subset of updates). *Optional Field*: If time metrics are desired, this list would also need a date when each update on the list was released by the vendor.'
    - name: The list of endpoints to be checked.
    - name: '*Optional*: If time metrics are desired, the allowable time frame for installation of an update after its release (recommend at least 30 days)'
    operations:
    - name: For each endpoint in Input 3, compare that endpoint's auto-update configuration to that provided in Input 1 and generate a score based on the logic provided by Input 1 (M1).
    - name: For each endpoint in Input 3, retrieve a list of installed OS updates (M2) and compare that endpoint's installed updates to the required updates provided by Input 2.  The list of matching updates is M3.
    - name: (Optional) If timing metrics are desired, for each endpoint, also determine the elapsed time between the update release date provided in Input 2 and the install date for each of the corresponding updates on the endpoint; this information could be added as another field attached to each update entry in M3.
    measures:
    - M1 = Endpoint-specific auto-update configuration score as determined in Operation 1.
    - M2 = Endpoint-specific list of installed updates as determined in Operation 2.
    - M3 = Endpoint-specific list of required updates that are installed, as determined in Operation 2.
    - M4 = The number of required OS updates per Input 2.
    - M5 = The number of required OS updates that are installed on the endpoint, per M3.
    metrics:
    - name: Update Effectiveness (Per Endpoint)
      metric: ' For a given endpoint, calculate the ratio of installed OS updates to the total number of OS updates required.'
      calculation: If M4 = 0, this indicates the endpoint requires no OS updates. Otherwise, this metric is calculated as :code:`M5 / M4`
    - name: Update Effectiveness (Organizational)
      metric: ' The organizational metric is calculated by averaging the results of the "per endpoint" metric above.'
      calculation: :code:``
  - name: '3.5: Deploy Automated Software Patch Management Tools'
    number: "3.5"
    description: Deploy automated software update tools in order to ensure that third-party software on all systems is running the most recent security updates provided by the software vendor.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: From the authorized software list (ASL; sub-control 2.1), information on the current authorized version.
    - name: Access to an authoritative source of information indicating version details by product.
    - name: A list of approved exceptions, noting any reasons that an authorized software package does not match the latest version.
    operations:
    - name: For each software in Input 1, list the software products which do not match the latest version as described by Input 2.
    - name: For each endpoint, obtain the current software load (the list of installed software).
    - name: For each endpoint, list the installed software that does not match the current authorized version from Input 1.
    - name: For each software product listed in Operation 3, list any that exist in the approved exceptions list (Input 3).
    measures:
    - M1 = List of authorized software products installed on the endpoint which are not at the latest version.
    - M2 = Count of M1
    - M3 = List of authorized software products installed on the endpoint.
    - M4 = Count of M3
    - M5 = List of authorized software products installed on the endpoint which are not at the latest version, but have approved exceptions.
    - M6 = Count of M5
    metrics:
    - name: Update Effectiveness (Per Endpoint)
      metric: ' For a given endpoint, calculate the ratio of installed software updates to the total number of required software updates.'
      calculation: If :code:`M2 == 0`, this indicates the endpoint requires no software updates. If :code:`(M2 - M5) == 0`, this indicates the endpoint requires software updates, but the out-of-date software has an approved exception. Otherwise, this metric is calculated as :code:`(M2 - M5) / M4`
    - name: Update Effectiveness (Organizational)
      metric: ' The organizational metric is calculated by averaging the results of the "per endpoint" metric above.'
      calculation: :code:``
  - name: '3.6: Compare Back-to-Back Vulnerability Scans'
    number: "3.6"
    description: Regularly compare the results from consecutive vulnerability scans to verify that vulnerabilities have been remediated in a timely manner.
    header:
      assetType: Applications
      securityFunction: Respond
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    - name: Previous vulnerability scan results for all covered endpoints
    - name: Current vulnerability scan results for all covered endpoints
    operations:
    - name: 'For each covered endpoint:'
    - name: "\tIntersection of previous scan results with current scan results (Assumption: this should result in the complete set of results from the previous scan and set aside the new vulnerability checks introduced in the current scan)"
    - name: "\tIdentify set of detected vulnerabilities from previous scan, based on intersection"
    - name: "\tIdentify set of detected vulnerabilities from current scan, based on intersection"
    - name: Count endpoints in the set of covered endpoints eligible for back-to-back comparisons
    measures:
    - M1 = Set of previously detected vulnerabilities
    - M2 = Set of currently detected vulnerabilities
    - M3 = Count of previously detected vulnerabilities
    - M4 = Count of currently detected vulnerabilities
    - M5 = List of covered endpoints with back-to-back comparisons
    - M6 = Count of M5
    - M7 = List of endpoints in inventory eligible for back-to-back comparisons
    - M8 = Count of M7
    metrics:
    - name: Unmitigated Vulnerabilities
      metric: ' Count of vulnerabilities previously discovered that are still discovered.'
      calculation: :code:`M3 - M4`
    - name: Coverage
      metric: ' Coverage of back-to-back comparisons against eligible endpoints'
      calculation: :code:`M6 / M8`
  - name: '3.7: Utilize a Risk-Rating Process'
    number: "3.7"
    description: Utilize a risk-rating process to prioritize the remediation of discovered vulnerabilities.
    header:
      assetType: Applications
      securityFunction: Respond
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: Security program vulnerability management policy
    operations:
    - name: Review vulnerability management policy for risk-rating process description
    - name: Review risk-rating process description to ensure risk-rating is used for prioritization
    measures:
    - M1 (Boolean) = Risk-rating process exists or does not exist
    - M2 (Boolean) = Risk-rating process is used for prioritization
    metrics:
    - name: Risk-Rating Process
      metric: ' Manual review: Does a risk-rating process exist and is it utilized for prioritization?'
      calculation: :code:`M1 AND M2`
- name: 'CIS Control 4: Controlled Use of Administrative Privileges'
  number: "4"
  description: |-
    The processes and tools used to track/control/prevent/correct the use, assignment, and
    configuration of administrative privileges on computers, networks, and applications.
  why: |-
    The misuse of administrative privileges is a primary method for attackers to spread inside a target
    enterprise. Two very common attacker techniques take advantage of uncontrolled administrative
    privileges. In the first, a workstation user running as a privileged user is fooled into opening a
    malicious email attachment, downloading and opening a file from a malicious website, or simply
    surfing to a website hosting attacker content that can automatically exploit browsers. The
    file or exploit contains executable code that runs on the victim’s machine either automatically
    or by tricking the user into executing the attacker’s content. If the victim user’s account has
    administrative privileges, the attacker can take over the victim’s machine completely and install
    keystroke loggers, sniffers, and remote control software to find administrative passwords and
    other sensitive data. Similar attacks occur with email. An administrator inadvertently opens an
    email that contains an infected attachment and this is used to obtain a pivot point within the
    network that is used to attack other systems.

    The second common technique used by attackers is elevation of privileges by guessing or cracking
    a password for an administrative user to gain access to a target machine. If administrative
    privileges are loosely and widely distributed, or identical to passwords used on less critical
    systems, the attacker has a much easier time gaining full control of systems, because there are
    many more accounts that can act as avenues for the attacker to compromise administrative
    privileges.
  subcontrols:
  - name: '4.1: Maintain Inventory of Administrative Accounts'
    number: "4.1"
    description: Use automated tools to inventory all administrative accounts, including domain and local accounts, to ensure that only authorized individuals have elevated privileges.
    header:
      assetType: Users
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: Inventory of authorized administrative accounts including which system the account is authorized for and which individual the account is associated with
    - name: Output from the automated tool(s) identifying the discovered administrative accounts accompanied by which system that account is on
    operations:
    - name: Generate a count of the administrative accounts in Inventory 1 (this count becomes M1). If this count is 0, skip the remaining Operation(s).
    - name: Check Input 2 - if there is at least 1 administrative account provided in Input 2, set M2 equal to 1 and continue on to the next Operation. If there are no administrative accounts provided in Input 2, set M2 equal to 0 and skip the remaining Operation(s).
    - name: Compare Input 1 and Input 2, creating a list accounts that are in Input 2 which are also found in Input 1 (this is the list of discovered authorized administrative accounts that becomes M3) and a list of accounts that are in Input 2 that are not found in Input 1 (this is the list of discovered unauthorized administrative accounts that becomes M4).
    measures:
    - M1 = Count of authorized administrative accounts in Input 1
    - M2 = A binary value, 1 if the automated tool(s) provided at least 1 administrative account (Input 2); 0 if the automated tool(s) did not provide any administrative accounts (Input 2)
    - M3 = List of discovered authorized administrative accounts
    - M4 = List of discovered unauthorized administrative accounts
    - M5 = Count of discovered authorized administrative accounts
    - M6 = Count of discovered unauthorized administrative accounts
    metrics:
    - name: Administrative Account Inventory
      metric: ' Ensure the administrative account inventory exists.  If :code:`M1 == 0`, this metric fails and the remaining metrics are not applicable.'
      calculation: :code:`M1`
    - name: Automated Tool Functioning
      metric: ' Ensure any automated tools are properly functioning.  If :code:`M2 == 0`, this metric fails and the remaining metrics are not applicable.'
      calculation: :code:`M2`
    - name: Tool Coverage
      metric: ' The ratio discovered administrative accounts to the inventoried administrative accounts.'
      calculation: :code:`M5 / M1`
    - name: Unauthorized Accounts
      metric: ' The ratio of discovered unauthorized administrative accounts to total discovered administrative accounts'
      calculation: :code:`M6 / (M5 + M6)`
  - name: '4.2: Change Default Passwords'
    number: "4.2"
    description: Before deploying any new asset, change all default passwords to have values consistent with administrative level accounts.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '2.4: Track Software Inventory Information'
    inputs:
    - name: The organization's inventory of endpoints which utilize credentials, either at the OS level or at the application software level (ideally software inventory from sub-control 2.4)
    - name: An authoritative source of known default passwords
    - name: The organization's defined password policy configuration
    operations:
    - name: For each endpoint in Input 1, enumerate the available logins, including hashed credentials (becomes M1)
    - name: For each endpoint in Input 1, generate password hashes for all relevant default passwords provided in Input 2 in accordance with the corresponding hashing procedures for the appropriate OS, application, etc. including any applicable salting
    - name: For each login, compare the password hash for that login to the default password hashes generated in the previous operation.  Create a list containing any logins that have hashes that match default password hashes, including the endpoint to which the login corresponds and the default password and hash that was matched (becomes M3)
    - name: For each endpoint, collect the applied password policy configuration (becomes M5)
    - name: For each endpoint, compare the password policy configuration to the organizationally defined password policy recommendations (including password length, complexity requirements, etc.), creating a list of endpoint password policies that adhere to organizational policy (becomes M7) and a list of endpoint password policies that deviate from the organizational policy (becomes M9) noting where the deviations occur.
    measures:
    - M1 = The list of available logins for endpoints which utilized credentialed accounts
    - M2 = The count of logins from all endpoints that use credentiale accouts (count of M1)
    - M3 = The list of enumerated logins with a password hash that matches a known default password hash
    - M4 = The count of logins with a password hash that matches a known default password hash (count of M3)
    - M5 = The list of the collected endpoint password policy configurations
    - M6 = The count of collected password policy configurations (count of M5)
    - M7 = The list of collected password policy configurations that do match organizationally defined recommendations
    - M8 = The count of compliant collected password policies (count of M7)
    - M9 = The list of collected password policy configurations that do not match organizationally defined recommendations
    metrics:
    - name: Default Password Usage
      metric: ' What percentage of credentials have been changed from the default value?'
      calculation: '| :code:`(M2 - M4) / M2`'
    - name: Password Policy Compliance
      metric: ' What percentage of collected password policies comply with the organization''s password policies?'
      calculation: '| If M6 = 0, then no endpoint password policy configurations were collected. Otherwise, the value of this metric is :code:`M8 / M6`'
  - name: '4.3: Ensure the Use of Dedicated Administrative Accounts'
    number: "4.3"
    description: Ensure that all users with administrative account access use a dedicated or secondary account for elevated activities. This account should only be used for administrative activities and not Internet browsing, email, or similar activities.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: The list of users defined as Administrators
    - name: The list of user accounts for the users defined in Input 1
    - name: The list of users NOT defined as Administrators
    - name: The list of user accounts for the users defined in Input 3
    - name: The list of all user accounts.
    - name: The list of all Administrative user accounts
    - name: The list of non-Administrative user accounts
    operations:
    - name: For each user defined in Input 1, collect the Administrative user account for that user from Input 6 and the non-Administrative user account from Input 7
    - name: For each user defined in Input 3, collect any Administrative user account for that user from Input 6 and the non-Administrative user account from Input 7
    measures:
    - M1 = The list of defined Administrative users
    - M2 = The count of M1
    - M3 = The list of users collected in Operation 1
    - M4 = The count of M3
    - M5 = The list of users collected in Operation 2
    - M6 = The count of M5
    - M7 = The number of users defined as Administrators
    - M8 = For each user, this measure describes the number of user accounts identified by Operation 1
    - M9 = For each user, this measure describes the number of user accounts identified by Operation 2
    - ""
    metrics:
    - name: Administrative User Accounts
      metric: ' This metric is intended to determine whether those users identified as Administrative-level have at least one Administrative-level and one non-Administrative level user account. The mapping performed by Operation 1 must show that, for each Administrative-level user, at least 1 Administrative-level user account and at least 1 non-Administrative-level user account are available.'
      calculation: :code:`M8 = M1`
    - name: Unauthorized User Accounts
      metric: ' This metric is intended to illustrate any non-Administrative-level users that have been assigned an Administrative-level user account.'
      calculation: If :code:`M6 < 1`
  - name: '4.4: Use Unique Passwords'
    number: "4.4"
    description: Where multi-factor authentication is not supported (such as local administrator, root, or service accounts), accounts will use passwords that are unique to that system.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: Password policy that includes requirement for unique passwords
    operations:
    - name: Verify that a password policy was provided and set M1 accordingly.
    - name: (Optional) Manually review the provided password policy. Determine if it includes a valid requirement for unique passwords and set M2 accordingly.
    measures:
    - M1 = Boolean value indicating whether a password policy was provided; 1 if policy provided, 0 if not
    - M2 = (From optional manual review) Binary value indicating whether the provided password policy includes a valid requirement for unique passwords; 1 if unique passwords required, 0 if not
    metrics:
    - name: Password Policy Existence
      metric: ' This metric indicates the existence of a password policy for the organization'
      calculation: :code:`M1 == 1`
    - name: Policy Review
      metric: ' (Optional Manual Review) Pass if the organization''s password policy includes a unique password requirement.'
      calculation: :code:``
  - name: '4.5: Use Multi-Factor Authentication for All Administrative Access'
    number: "4.5"
    description: Use multi-factor authentication and encrypted channels for all administrative account access.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.4: Track Software Inventory Information'
    - '4.1: Maintain Inventory of Administrative Accounts'
    inputs:
    - name: List of Administrative accounts in the organization along with corresponding authentication system for each
    - name: Approved Multi-Factor Authentication Configuration(s) - there may be multiple configurations based on the types of accounts and authentication systems involved
    - name: Approved Encrypted Channel Configuration(s) - there may be multiple configurations based on the types of accounts and authentication systems involved
    operations:
    - name: For each account in Input 1, check its configuration against the appropriate Multi-Factor Authentication configuration in Input 2. Create a list of compliant accounts (M1) and non-compliant accounts (M2)
    - name: For each account in Input 1, check its configuration against the appropriate Encrypted Channel configuration in Input 3. Create a list of compliant accounts (M3) and non-compliant accounts (M4)
    measures:
    - M1 = List of Administrative Accounts that are configured properly for Multi-Factor Authentication (Multi-Factor compliant list)
    - M2 = List of Administrative Accounts that are not configured properly for Multi-Factor Authentication (Multi-Factor non-compliant list)
    - M3 = List of Administrative Accounts that are configured properly to be accessed through encrypted channels (Encrypted Channel compliant list)
    - M4 = List of Administrative Accounts that are not configured properly to be accessed through encrypted channels (Encrypted Channel non-compliant list)
    - M5 = Count of Multi-Factor compliant Administrative Accounts (count of M1)
    - M6 = Count of Encrypted Channel compliant Administrative Accounts (count of M3)
    - M7 = Total count of Administrative Accounts (count of Input 1)
    metrics:
    - name: Multi-Factor Compliance
      metric: ' Calculate the ratio of administrative accounts configured to use multi-factor authentication to the total number of administrative accounts'
      calculation: :code:`M5 / M7`
    - name: Encrypted Channel Compliance
      metric: ' Calculate the ratio of administrative accounts configured to use encrypted channels to the total number of administrative accounts'
      calculation: :code:`M6 / M7`
  - name: '4.6: Use Dedicated Workstations For All Administrative Tasks'
    number: "4.6"
    description: Ensure administrators use a dedicated machine for all administrative tasks or tasks requiring administrative access. This machine will be segmented from the organization’s primary network and not be allowed Internet access.  This machine will not be used for reading email, composing documents, or browsing the Internet.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized software
    operations:
    - name: Enumerate the devices used for administrative purposes based on the endpoint inventory
    - name: Enumerate all software identified as administrative from the software inventory
    - name: 'For each identified device:'
    - name: "\tEnumerate the devices configured/managed by this device"
    - name: "\tExamine its configuration noting whether it is appropriately or inappropriately configured:"
    - name: "\t\tThe device has internet access"
    - name: "\t\tThe device can run unauthorized software"
    - name: "\t\tThe device can be reached by any device not in the enumeration identified above"
    measures:
    - M1 = List of devices used for administrative purposes
    - M2 = List of administrative software
    - M3 = List of appropriately configured devices
    - M4 = List of inappropriately configured devices
    - M5 = Count of devices used for administrative purposes (count of M1)
    - M6 = Count of administrative software (count of M2)
    - M7 = Count of appropriately configured devices (count of M3)
    - M8 = Count of inappropriately configured devices (count of M4)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured administrative devices to the total number of administrative devices'
      calculation: :code:`M7 / M5`
  - name: '4.7: Limit Access to Scripting Tools'
    number: "4.7"
    description: Limit access to scripting tools (such as Microsoft® PowerShell and Python) to only administrative or development users with the need to access those capabilities.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    - '5.1: Establish Secure Configurations'
    - '16.6: Maintain an Inventory of Accounts'
    inputs:
    - name: Inventory of Accounts including how/where access to scripting tools is restricted
    - name: List of accounts (administrative or developer accounts) with the need to access scripting tools, including which scripting tools are required for each account
    - name: Approved configuration(s) to restrict scripting tool access to only approved accounts
    - name: List of scripting tools to be checked
    - name: (Optional) List of scripting tools allowed in organization (subset of the Authorized Software List)
    operations:
    - name: For each account in Input 1, determine if the account has access to any of the scripting tools provided in Input 4 by comparing the appropriate approved configuration(s) from Input 3 to the configuration location(s) specified for that account in Input 1. Create a list of accounts that conform to the appropriate configuration(s) and policy for scripting tool access (M1) noting which configuration(s) they were checked against, and a list of accounts that do not conform to the appropriate configuration(s) and policy for scripting tool access (M2) noting the configuration(s) they were checked against and the deviations from those configurations. For each account on both lists, note which, if any, scripting tools that account has access to.
    - name: (Optional) Compare the scripting tools authorized for particular accounts identified in Input 2 to the authorized scripting tools provided in Input 5. Create a list of scripting tools that are authorized for particular accounts but are not authorized for use in the organization (M5).
    - name: (Optional) For each account authorized to access scripting tools in M2, verify that the account is an administrative or developer account. Create a list of accounts that are authorized for scripting tools but that are not administrative or developer accounts (M6).
    measures:
    - M1 = List of accounts that conform to the appropriate configuration(s) and policy for scripting tool access (compliant list)
    - M2 = List of accounts that do not conform to the appropriate configuration(s) and policy for scripting tool access (non-compliant list)
    - M3 = Count of accounts that are compliant with the scripting tool access policy (count of M1)
    - M4 = Total count of accounts (count of Input 1)
    - M5 (Optional) = List of scripting tools authorized for particular accounts but not authorized for use in the organization
    - M6 (Optional) = List of accounts that are authorized for scripting tools but that are not administrative or developer accounts
    metrics:
    - name: Coverage
      metric: ' Ratio of accounts that comply with the scripting tool access policy'
      calculation: :code:`M3 / M4`
  - name: '4.8: Log and Alert on Changes to Administrative Group Membership'
    number: "4.8"
    description: Configure systems to issue a log entry and alert when an account is added to or removed from any group assigned administrative privileges.
    header:
      assetType: Users
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: Endpoint inventory
    - name: Approved configuration(s) for logging of accounts being added to groups with administrative privileges
    - name: Approved configuration(s) for logging of accounts being removed from groups with administrative privileges
    - name: Approved configuration(s) for alerting when accounts are added to groups with administrative privileges
    - name: Approved configuration(s) for alerting when accounts are removed from groups with administrative privileges
    - name: '**Note**: there may be multiple configurations for Inputs 2 - 5 to account for various groups/types of endpoints.'
    operations:
    - name: For each endpoint in Input 1, select the appropriate approved configuration from Inputs 2 - 5 in turn for that endpoint and check to see if that endpoint's actual configuration complies with the approved configuration for each Input. Record this information as M1 - a list of endpoints annotated with whether that endpoint is compliant or non-compliant with the appropriate approved configuration from each of the four inputs (Input 2 - Input 5).
    - name: For each of the Inputs 2 - 5, generate a count of compliant endpoints from M1 and record these as M2, M3, M4, and M5 respectively
    - name: Count the number of endpoints that are compliant with all 4 inputs and record this as M6
    measures:
    - M1 = List of endpoints with each endpoint entry labeled with compliance or non-compliance for each of the 4 logging/alerting configurations from Inputs 2 - 5
    - M2 = Count of compliant endpoints based on Input 2 configurations
    - M3 = Count of compliant endpoints based on Input 3 configurations
    - M4 = Count of compliant endpoints based on Input 4 configurations
    - M5 = Count of compliant endpoints based on Input 5 configurations
    - M6 = Count of endpoints that are compliant with configurations from all 4 inputs
    - M7 = Count of endpoints from Input 1
    - M8 = List of compliant endpoints based on Input 2 configurations
    - M9 = List of non-compliant endpoints based on Input 2 configurations
    - M10 = List of compliant endpoints based on Input 3 configurations
    - M11 = List of non-compliant endpoints based on Input 3 configurations
    - M12 = List of compliant endpoints based on Input 4 configurations
    - M13 = List of non-compliant endpoints based on Input 4 configurations
    - M14 = List of compliant endpoints based on Input 5 configurations
    - M15 = List of non-compliant endpoints based on Input 5 configurations
    - M16 = Count of non-compliant endpoints based on Input 2 configurations
    - M16 = Count of non-compliant endpoints based on Input 3 configurations
    - M16 = Count of non-compliant endpoints based on Input 4 configurations
    - M16 = Count of non-compliant endpoints based on Input 5 configurations
    - ""
    metrics:
    - name: Logging of Accounts Added to Groups
      metric: ' The ratio of endpoints logging when accounts are added to groups to the total number of endpoints'
      calculation: :code:`M2 / M7`
    - name: Logging of Accounts Removed from Groups
      metric: ' The ratio of endpoints logging when accounts are removed from groups to the total number of endpoints'
      calculation: :code:`M3 / M7`
    - name: Alerting of Accounts Added to Groups
      metric: ' The ratio of endpoints alerting when accounts are added to groups to the total number of endpoints'
      calculation: :code:`M4 / M7`
    - name: Alerting of Accounts Removed from Groups
      metric: ' The ratio of endpoints alerting when accounts are removed from groups to the total number of endpoints'
      calculation: :code:`M5 / M7`
    - name: Combined Compliance
      metric: ' The ratio of endpoints both alerting and logging when accounts are both added and removed to the total number of endpoints'
      calculation: :code:`M6 / M7`
  - name: '4.9: Log and Alert on Unsuccessful Administrative Account Login'
    number: "4.9"
    description: Configure systems to issue a log entry and alert on unsuccessful logins to an administrative account.
    header:
      assetType: Users
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: Endpoint inventory
    - name: Approved configuration(s) for logging on unsuccessful login attempts to administrative accounts
    - name: Approved configuration(s) for alerting on unsuccessful login attempts to administrative accounts
    - name: '**Note**: there may be multiple configurations for Inputs 2 and 3 to account for various groups/types of endpoints.'
    operations:
    - name: For each endpoint in Input 1, select the appropriate approved configuration from Inputs 2 and 3 in turn for that endpoint and check to see if that endpoint's actual configuration complies with the approved configuration for each Input. Record this information as M1 - a list of endpoints annotated with whether that endpoint is compliant or non-compliant with the appropriate approved configuration from each of the two inputs (Input 2 and Input 3).
    - name: For Input 2, and for Input 3, generate a count of compliant endpoints from M1 and record these as M2 and M3 respectively.
    - name: Count the number of endpoints that are compliant with both inputs and record this as M4
    measures:
    - M1 = List of endpoints with each endpoint entry labeled with compliance or non-compliance for both Input 2 and Input 3
    - M2 = Count of compliant endpoints based on Input 2 configurations
    - M3 = Count of compliant endpoints based on Input 3 configurations
    - M4 = Count of endpoints that are compliant with configurations from both inputs
    - M5 = Total number of endpoints from Input 1
    - M6 = List of compliant endpoints based on Input 2 configurations
    - M7 = List of non-compliant endpoints based on Input 2 configurations
    - M8 = List of compliant endpoints based on Input 3 configurations
    - M9 = List of non-compliant endpoints based on Input 3 configurations
    - M10 = Count of non-compliant endpoints based on Input 2 configurations
    - M11 = Count of non-compliant endpoints based on Input 3 configurations
    - ""
    metrics:
    - name: Logging Unsuccessful Login Attempts
      metric: ' The ratio of endpoints logging when unsuccessful login attempts are made, to the total number of endpoints'
      calculation: :code:`M2 / M5`
    - name: Alerting Unsuccessful Login Attempts
      metric: ' The ratio of endpoints alerting when unsuccessful login attempts are made, to the total number of endpoints'
      calculation: :code:`M3 / M5`
    - name: Combined Compliance
      metric: ' The ratio of endpoints both alerting and logging unsuccessful login attempts are made, to the total number of endpoints'
      calculation: :code:`M4 / M5`
- name: 'CIS Control 5: Secure Configuration for Hardware and Software on Mobile Devices, Laptops, Workstations and Servers'
  number: "5"
  description: |-
    Establish, implement, and actively manage (track, report on, correct) the security configuration
    of mobile devices, laptops, servers, and workstations using a rigorous configuration
    management and change control process in order to prevent attackers from exploiting
    vulnerable services and settings.
  why: |-
    As delivered by manufacturers and resellers, the default configurations for operating systems
    and applications are normally geared towards ease-of-deployment and ease-of-use – not
    security. Basic controls, open services and ports, default accounts or passwords, older (vulnerable)
    protocols, and pre-installation of unneeded software can be exploitable in their default state.

    Developing configuration settings with good security properties is a complex task beyond the
    ability of individual users, requiring analysis of potentially hundreds or thousands of options
    in order to make good choices (the Procedures and Tools section below provides resources for
    secure configurations). Even if a strong initial configuration is developed and installed, it must be
    continually managed to avoid security “decay” as software is updated or patched, new security
    vulnerabilities are reported, and configurations are “tweaked” to allow the installation of new
    software or support new operational requirements. If not, attackers will find opportunities to
    exploit both network accessible services and client software.
  subcontrols:
  - name: '5.1: Establish Secure Configurations'
    number: "5.1"
    description: Maintain documented security configuration standards for all authorized operating systems and software.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: 'Authorized Software List: The list of authorized software (sub-control 2.1).'
    - name: 'Security Configuration Standards: The list of enterprise security configuration standards.'
    operations:
    - name: Perform a set calculation, computing the Intersection (M1) of Input 1 and Input 2
    measures:
    - M1 = The list of authorized software with associated enterprise security configuration standards
    - M2 = Count of M1
    - M3 = The list of authorized software without enterprise security configuration standards (the "left" side of the set calculation)
    - M4 = Count of M3
    - M5 = The list of enterprise security configuration standards without associated authorized software (the "right" side of the set calculation)
    - M6 = Count of M5
    - M7 = The list of authorized software
    - M8 = Count of M7
    metrics:
    - name: Security Configuration Standards Coverage
      metric: ' For what percentage of the total OS/Software in an enterprise, are security configuration standards documented and maintained?'
      calculation: :code:`(M8 - M4) / M8`
  - name: '5.2: Maintain Secure Images'
    number: "5.2"
    description: Maintain secure images or templates for all systems in the enterprise based on the organization’s approved configuration standards.  Any new system deployment or existing system that becomes compromised should be imaged using one of those images or templates.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '2.1: Maintain Inventory of Authorized Software'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The list of the organization's approved configuration standards, per implementation of sub-control 5.1
    - name: The inventory of systems
    - name: The mapping of systems in the inventory to any secure configurations that should be applied. This input assumes that multiple configurations could apply to a single system in the inventory.
    - name: The inventory of images
    operations:
    - name: For each system in the inventory, determine the list of systems which have had an image taken and the list of systems without a corresponding image.
    - name: For each system with a corresponding image, compare the image's configuration with the configuration standard(s) mapped to that system.
    measures:
    - M1 = Count of systems in the inventory (from Input 2)
    - M2 = Count of systems with a corresponding image taken
    - M3 = 1 if an image is configured according to the standards mapped to that system; 0 otherwise.
    - M4 = List of systems with a corresponding image taken
    - M5 = List of systems without a corresponding image taken
    metrics:
    - name: Image Coverage
      metric: ' The ratio of systems with a corresponding image taken to the total number of inventoried systems'
      calculation: :code:`M2 / M1`
    - name: Configuration Coverage
      metric: ' The ratio of all systems with a corresponding image taken to those configured according to the standards mapped to that system'
      calculation: :code:`(SUM from 1..M2 (M3)) / M2`
  - name: '5.3: Securely Store Master Images'
    number: "5.3"
    description: Store the master images and templates on securely configured servers, validated with integrity monitoring tools, to ensure that only authorized changes to the images are possible.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: The list of master images/templates
    - name: An available integrity monitoring tool
    - name: The inventory of master images mapped to the output of the integrity monitoring tool's identifying information (such as a hash).
    - name: A documented procedure detailing authorizations required for updates to the master images/templates
    operations:
    - name: Collect the list of master images/templates' integrity monitoring identifying information (i.e. for each master image, collect the hash).
    - name: Determine whether the update procedure documentation exists (M3)
    measures:
    - M1 = Count of master images/templates (from Input 3)
    - M2 = Count of master images/templates identified by integrity monitoring tools
    - M3 = 1 if the documented master image update procedure exists; 0 otherwise.
    - M4 = List of master images/templates identified by integrity monitoring tools
    - M5 = List of master images/templates unidentified by integrity monitoring tools
    - M6 = Count of master images/templates unidentified by integrity monitoring tools (M5)
    metrics:
    - name: Integrity Monitoring Coverage
      metric: ' The ratio of master images/templates identified by integrity monitoring tools, to the total number of images/templates.'
      calculation: :code:`M2 / M1`
    - name: Update Procedures
      metric: ' Determine if the documented master image update procedure exists'
      calculation: :code:`M3 == 1`
  - name: '5.4: Deploy System Configuration Management Tools'
    number: "5.4"
    description: Deploy system configuration management tools that will automatically enforce and redeploy configuration settings to systems at regularly scheduled intervals.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '2.4: Track Software Inventory Information'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The organization's configuration monitoring system
    - name: The list of endpoints
    - name: The inventory and mappings of secure configuration policy(ies) to the list of endpoints
    - name: The organization's approved configuration scanning interval (at least weekly)
    operations:
    - name: For each endpoint, obtain the configuration assessment results using Input 1.  Note this as M1(t).
    - name: Following the time period specified by Input 4, re-assess to obtain a comparative assessment result.  Note this as M1(t+1)
    measures:
    - M1(t) = (For each endpoint) Count of non-compliant recommendations resulting from Operation 1
    - M1(t+1) = (For each endpoint) Count of non-compliant recommendations resulting from Operation 2
    - M2 = (For each endpoint) Count of recommendations assessed
    - M3 = The number of endpoints
    - M4 = List of non-compliant endpoints resulting from Operation 1
    - M5 = List of non-compliant endpoints resulting from Operation 2
    metrics:
    - name: Initial Non-Compliance
      metric: ' The ratio of non-compliant recommendations at time "t", to the total recommendations assessed.'
      calculation: :code:`M1(t) / M2`
    - name: Subsequent Non-Compliance
      metric: ' The ratio of non-compliant recommendations at time "t+1" ()'
      calculation: :code:`M1(t+1) / M2`
    - name: Overall Compliance
      metric: ' What is the average overall compliance for all assessed endpoints at time "t"'
      calculation: :code:`(SUM from 1..M3 (M1(t) / M2)) / M3`
  - name: '5.5: Implement Automated Configuration Monitoring Systems'
    number: "5.5"
    description: Utilize a Security Content Automation Protocol (SCAP) compliant configuration monitoring system to verify all security configuration elements, catalog approved exceptions, and alert when unauthorized changes occur.
    header:
      assetType: Applications
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '2.4: Track Software Inventory Information'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The organization's configuration monitoring system
    - name: The list (maintained by NIST) of SCAP-validated tools
    - name: The list of endpoints
    - name: The inventory and mappings of secure configuration policy(ies) to the list of endpoints
    - name: The list of approved exceptions, mapped to the endpoints on which they are approved (i.e. some endpoints may be excepting certain configurations, but others under the same configuration policy may not).
    - name: The organization's approved configuration scanning interval (at least weekly)
    operations:
    - name: (Manual) Ensure the configuration scanning tool (Input 1) is present in the list of SCAP-validated tools (Input 2).
    - name: For each endpoint, obtain the configuration assessment results using Input 1
    - name: For each assessment result in Operation 2, obtain the list of recommendations which map to the catalog of approved exceptions for that endpoint.
    - name: Following the time period specified by Input 6, re-assess to obtain a comparative assessment result
    measures:
    - M1 = 1 if Operation 1 indicates the organization's scanning tool is present in the list of SCAP-validated tools; 0 otherwise
    - M2 = (For each endpoint) The number of non-compliant recommendations resulting from Operation 2
    - M3 = (For each endpoint) The number of non-compliant recommendations that do not map to the catalog of approved exceptions for the endpoint
    - M4 = (For each endpoint) The number of non-compliant recommendations resulting from Operation 4
    - M5 = (For each endpoint) The number of non-compliant recommendations that do not map to the catalog of approved exceptions for the endpoint
    - M6 = (For each endpoint) The number of recommendations assessed
    - M7 = (For each endpoint) The number of approved configuration policy exceptions
    - M8 = The number of the organization's SCAP-validated tools
    - M9 = The number of the organization's configuration management tools
    metrics:
    - name: Tooling Compliance
      metric: ' Are SCAP-validated configuration scanning tool(s) being used?'
      calculation: :code:`M1 == 1`
    - name: Tooling Compliance Coverage
      metric: ' The ratio of SCAP-validated tools to the total number of configuration management tools'
      calculation: :code:`M8 / M9`
    - name: Initial Non-Compliance (Per Endpoint)
      metric: ' Per endpoint, the ratio of non-compliant recommendations to the total recommendations assessed.'
      calculation: :code:`M2 / M6`
    - name: Initial Exception Coverage (Per Endpoint)
      metric: ' Per endpoint, the ratio of non-compliant recommendations with approved exceptions, to the total recommendations assessed.'
      calculation: :code:`(M7 - M3) / M7`
    - name: Subsequent Non-Compliance (Per Endpoint)
      metric: ' Per endpoint, the ratio of non-compliant recommendations to the total recommendations assessed.'
      calculation: :code:`M4 / M6`
    - name: Subsequent Exception Coverage (Per Endpoint)
      metric: ' Per endpoint, the ratio of non-compliant recommendations with approved exceptions, to the total recommendations assessed.'
      calculation: :code:`(M7 - M5) / M7`
- name: 'CIS Control 6: Maintenance, Monitoring and Analysis of Audit Logs'
  number: "6"
  description: |-
    Collect, manage, and analyze audit logs of events that could help detect, understand,
    or recover from an attack.
  why: |-
    Deficiencies in security logging and analysis allow attackers to hide their location, malicious
    software, and activities on victim machines. Even if the victims know that their systems have been
    compromised, without protected and complete logging records they are blind to the details of
    the attack and to subsequent actions taken by the attackers. Without solid audit logs, an attack
    may go unnoticed indefinitely and the particular damages done may be irreversible.

    Sometimes logging records are the only evidence of a successful attack. Many organizations keep
    audit records for compliance purposes, but attackers rely on the fact that such organizations
    rarely look at the audit logs, and they do not know that their systems have been compromised.
    Because of poor or nonexistent log analysis processes, attackers sometimes control victim
    machines for months or years without anyone in the target organization knowing, even though
    the evidence of the attack has been recorded in unexamined log files.
  subcontrols:
  - name: '6.1: Utilize Three Synchronized Time Sources'
    number: "6.1"
    description: Use at least three synchronized time sources from which all servers and network devices retrieve time information on a regular basis so that timestamps in logs are consistent.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    - name: The list of network time sources/NTP servers
    operations:
    - name: From the list of endpoints, filter to collect the list of those servers and network devices that should be configured.
    - name: From the list of servers/network devices, collect each endpoint's network time configuration
    - name: Collect the list of servers/network devices whose network time configuration does not include a network time source.
    measures:
    - M1 = Count of endpoints
    - M2 = Count of endpoints configured to synchronize with NTP servers
    - M3 = Count of endpoints whose network time configuration does not include an approved network time source
    - M4(i) = (For each endpoint "i" collected in Operation 1) 1 when the number of configured NTP servers >= 3; 0 otherwise.
    - M5 = List of endpoints configured to synchronize with NTP servers
    - M6 = List of endpoints whose network time configuration does not include an approved network time source
    metrics:
    - name: NTP Compliance Coverage
      metric: ' The ratio of endpoints using at least 3 synchronized time sources to the total set of endpoints'
      calculation: :code:`(SUM from i=1..M2 (M4(i)) / M2)`
  - name: '6.2: Activate Audit Logging'
    number: "6.2"
    description: Ensure that local logging has been enabled on all systems and networking devices.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: 'Endpoint Inventory: The list of endpoints from the endpoint inventory'
    - name: The list of events that should be logged (an event logging policy).
    operations:
    - name: For each endpoint, determine if the configured event logging policy matches the policy defined by Input 2, noting appropriately and inappropriately configured endpoints.
    measures:
    - M1 = The list of endpoints
    - M2 = Count of M1
    - M3 = The list of appropriately configured endpoints
    - M4 = Count of M3
    - M5 = The list of inappropriately configured endpoints
    - M6 = Count of M5
    metrics:
    - name: Logging Policy Coverage
      metric: ' Determine the ratio of endpoints implementing the prescribed event logging policy to the total number of endpoints.'
      calculation: :code:`M4 / M6)`
  - name: '6.3: Enable Detailed Logging'
    number: "6.3"
    description: Enable system logging to include detailed information such as an event source, date, user, timestamp, source addresses, destination addresses, and other useful elements.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints (subject to system logging configuration)
    - name: The organization's logging configuration policy, outlining the detailed information to be written to system logs
    operations:
    - name: For each endpoint, collect the system logging configuration
    measures:
    - M1(i) = (For each endpoint "i") 1 if the endpoint's logging configuration complies with the organizations logging policy; 0 otherwise.
    - M2 = Count of endpoints from Input 1
    - M3 = List of compliant endpoints
    - M4 = List of non-compliant endpoints
    metrics:
    - name: Logging Coverage
      metric: ' The ratio of endpoints configured to enable detailed system logging to the total number of endpoints.'
      calculation: :code:`(SUM from i=1..M2 (M1(i))) / M2`
  - name: '6.4: Ensure Adequate Storage for Logs'
    number: "6.4"
    description: Ensure that all systems that store logs have adequate storage space for the logs generated.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints (subject to system logging configuration)
    - name: The organization's logging configuration policy, outlining log rotation policy, maximum log storage size, etc.
    operations:
    - name: For each endpoint, collect the system logging configuration
    measures:
    - M1(i) = (For each endpoint "i") 1 if an endpoint's logging configuration complies with the organizations logging policy; 0 otherwise.
    - M2 = The number of endpoints from Input 1
    - M3 = List of compliant endpoints
    - M4 = List of non-compliant endpoints
    - ""
    metrics:
    - name: Logging Storage Coverage
      metric: ' The ratio of endpoints compliant with the organization''s logging policy to the total number of endpoints.'
      calculation: :code:`(SUM from i=1..M2 (M1(i))) / M2`
  - name: '6.5: Central Log Management'
    number: "6.5"
    description: Ensure that appropriate logs are being aggregated to a central log management system for analysis and review.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.4: Track Software Inventory Information'
    inputs:
    - name: The total number of log producers (M1)
    - name: The number of sensors correlated in a central service (M2)
    operations:
    - name: N/A
    measures:
    - M1 = Count log producers
    - M2 = Count of sensors correlated in a central service
    metrics:
    - name: Quality of Log correlation/aggregation
      metric: ' The ratio of log producers correlated in a central service to the total number of log producers.'
      calculation: :code:`M2 / M1`
  - name: '6.6: Deploy SIEM or Log Analytic Tools'
    number: "6.6"
    description: Deploy Security Information and Event Management (SIEM) or log analytic tools for log correlation and analysis.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.4: Track Software Inventory Information'
    inputs:
    - name: Install location of SIEM or log analytic tool
    - name: The number of log producers correlated by a SIEM
    - name: The total number of log producers
    operations:
    - name: N/A
    measures:
    - M1 = 1 if a SIEM or other log analytics tool is installed/present; 0 otherwise
    - M2 = Count of log producers correlated by a SIEM
    - M3 = Count of log producers
    - M4 = List of log producers correlated by a SIEM
    - M5 = List of log producers not correlated by a SIEM
    metrics:
    - name: Quality of SIEM Correlation
      metric: ' The ratio of log producers correlated by a SIEM to the total number of log producers'
      calculation: :code:`IF M1 == 1 THEN M2 / M3; OTHERWISE 0`
  - name: '6.7: Regularly Review Logs'
    number: "6.7"
    description: On a regular basis, review logs to identify anomalies or abnormal events.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: The timestamp at which a log review i has been made, represented as t(i)
    - name: The number of reviews (timestamps) taken so far, represented as N
    - name: The maximum possible irregularity (can be fixed as 30 day), represented as R
    - name: (Optional) Target/desirable review interval threshold, represented as T
    - name: The number of log reviews in which at least one anomaly was detected, represented as D
    - name: The total number of Log Reviews, represented as L
    operations:
    - name: Calculate the average of log review, M1 = :code:`(SUM from i=1..N (t(i+1) - t(i))) / N`
    - name: Calculate the threshold-based regularity measure of log review, M2 = :code:`(SUM from i=1..N ( (t(i+1) - t(i)) - T)^2 / N ) / R`
    - name: Calculate the probability of detecting an anomaly in log review, M3 = :code:`D / L`
    measures:
    - M1 = The average of log review from Operation 1
    - M2 = The threshold-based regularity measure of log review from Operation 2
    - M3 = The probability of detecting an anomaly in log review from Operation 3
    metrics:
    - name: Regularity Measure of Log Review
      metric: ' Measure the irregularity or variance of log review.  The higher the value the more irregularity.'
      calculation: :code:`(SUM from i=1..N ( (t(i+1) - t(i)) - M1)^2 / N ) / R`
    - name: Quality of Log Review
      metric: ' The quality of review is high if-and-only-if the review is highly regular and the potential for detecting anomalies (at least one per review) is also high.'
      calculation: :code:`(1-M2) * M3`
  - name: '6.8: Regularly Tune SIEM'
    number: "6.8"
    description: On a regular basis, tune your SIEM system to better identify actionable events and decrease event noise.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "3"
    dependencies:
    - '6.6: Deploy SIEM or Log Analytic Tools'
    inputs:
    - name: Enterprise-defined SIEM operation procedures
    - name: Current time
    operations:
    - name: 'Examine enterprise SIEM operation procedures to identify maximum allowed delay in tuning frequency (default: 1 week)'
    - name: Ask SIEM operators when they last tuned the SIEM
    measures:
    - M1 = Boolean value, 1, if a set of enterprise-defined SIEM operational procedures exists, 0 otherwise
    - M2 = Maximum allowed delay in tuning
    - M3 = Current time
    - M4 = Last SIEM tuning time
    metrics:
    - name: Procedure Existence
      metric: ' Does an enterprise-defined set of SIEM operational procedures exist?'
      calculation: :code:`M1 = 1?`
    - name: SIEM Tuning Freshness
      metric: ' How recently was the SIEM last tuned?'
      calculation: :code:`(M3 - M4) / M2`
- name: 'CIS Control 7: Email and Web Browser Protections'
  number: "7"
  description: |-
    Minimize the attack surface and the opportunities for attackers to manipulate human behavior
    through their interaction with web browsers and email systems.
  why: |-
    Web browsers and email clients are very common points of entry and attack because of their
    technical complexity, flexibility, and their direct interaction with users and with other systems and
    websites. Content can be crafted to entice or spoof users into taking actions that greatly increase
    risk and allow introduction of malicious code, loss of valuable data, and other attacks. Since
    these applications are the main means that users interact with untrusted environments, these are
    potential targets for both code exploitation and social engineering.
  subcontrols:
  - name: '7.1: Ensure Use of Only Fully Supported Browsers and Email Clients'
    number: "7.1"
    description: Ensure that only fully supported web browsers and email clients are allowed to execute in the organization, ideally only using the latest version of the browsers and email clients provided by the vendor.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: 'From the authorized software list (ASL: sub-control 2.1), the inventory of web browser and email client software with a notation of "supported" or "unsupported" for each entry.'
    - name: Access to an authoritative source of information indicating supported/unsupported details by product.
    operations:
    - name: For each entry in Input 1, perform a lookup in Input 2 to verify.
    - name: For each entry in Input 1 labeled "supported", perform a lookup in Input 2.  From these lookups, note the list of authorized software labeled "supported" but are actually not supported based on the authoritative source lookup.
    - name: For each entry in Input 1 labeled "unsupported", perform a lookup in Input 2.  From these lookups, note the list of authorized software labeled "unsupported" but are actually supported based on the authoritative source lookup.
    measures:
    - M1 = List of unsupported items in Input 1 (combination of Operation 1 results and those initially marked as unsupported in input 1)
    - M2 = Count of M1
    - M3 = List of authorized web browser/email client software
    - M4 = Count of M3
    - M5 = List of items from Input 1 labeled as "supported" that are not actually supported
    - M6 = Count of M5
    - M7 = List of items from Input 1 labeled as "unsupported" but are actually supported
    - M8 = Count of M7
    metrics:
    - name: Percentage Unsupported Client Software in Use
      metric: ' The calculation of this metric is determined by the ratio of unsupported web browser/email client software to the total authorized web browser/email client software in use.'
      calculation: :code:`(M4 - M2) / M4`
    - name: Rate of False Positives
      metric: ' The calculation of this metric is determined by the ratio of web browser/email client software labeled "supported" but found to be unsupported, to the total authorized web browser/email client software in use.'
      calculation: :code:`(M4 - M6) / M4`
    - name: Rate of False Negatives
      metric: ' The calculation of this metric is determined by the ratio of web browser/email client software labeled "unsupported" but found to be supported, to the total authorized web browser/email client software in use.'
      calculation: :code:`(M4 - M8) / M4`
  - name: '7.2: Disable Unnecessary or Unauthorized Browser or Email Client Plugins'
    number: "7.2"
    description: Uninstall or disable any unauthorized browser or email client plugins or add-on applications.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: The list of authorized browser plugins
    - name: The list of authorized email client plugins
    - name: The list of endpoints
    operations:
    - name: From the list of all endpoints, collect the list of endpoints subject to browser/email plugin restrictions
    - name: For each endpoint listed by Operation 1, collect the list of installed browser plugins
    - name: For each endpoint listed by Operation 1, collect the list of installed email client plugins
    - name: For each endpoint, calculate the complement of the installed browser plugins with the list of approved browser plugins from Input 1. The complement will yield any installed browser plugins not on the approved list.
    - name: For each endpoint, calculate the complement of the installed email client plugins with the list of approved email client plugins from Input 2. The complement will yield any installed email client plugins not on the approved list.
    measures:
    - M1 = Count of endpoints subject to browser/email plugin restrictions
    - M2(i) = (For each endpoint "i") Count of installed browser plugins not in the approved list (The count resulting from Operation 4)
    - M3(i) = 0 if, for each endpoint "i", the value of M2 > 0; 1 if the value of M2 == 0
    - M4(i) = (For each endpoint "i") Count of installed email client plugins not in the approved list (The count resulting from Operation 5)
    - M5(i) = 0 if, for each endpoint "i", the value of M4 > 0; 1 if the value of M4 == 0
    metrics:
    - name: Browser Plugin Enforcement Quality
      metric: ' The ratio of endpoints utilizing browser plugins on the approved list to the total number of endpoints.'
      calculation: :code:`(SUM from i=1..M1 (M3(i))) / M1`
    - name: Email Client Plugin Enforcement Quality
      metric: ' The ratio of endpoints utilizing email client plugins on the approved list to the total number of endpoints.'
      calculation: :code:`(SUM from i=1..M1 (M5(i))) / M1`
  - name: '7.3: Limit Use of Scripting Languages in Web Browsers and Email Clients'
    number: "7.3"
    description: Ensure that only authorized scripting languages are able to run in all web browsers and email clients.
    header:
      assetType: Applications
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.5: Integration Software and Hardware Asset Inventories'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: List of web browsers and email clients installed in the organization by endpoint
    - name: Approved configuration(s) covering each web browser and email client in Input 1 to restrict the scripting languages that can run to only the authorized scripting languages
    operations:
    - name: For each application instance (web browser or email client) in Input 1, check the application's configuration against the appropriate approved configuration(s) from Input 2.
    - name: Create a list of the application instances that meet the approved configuration (M1)
    - name: Create a list of the application instances that that do not meet the approved configuration (M2) noting each deviation.
    measures:
    - M1 = List of application instances (web browser or email client) that meet the approved configuration (compliant list)
    - M2 = List of application instances (web browser or email client) that do not meet the approved configuration (non-compliant list)
    - M3 = Count of compliant application instances (count of M1)
    - M4 = Count of non-compliant application instances (count of M2)
    - M5 = Total count of installed web browser and email client instances (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' Ratio of compliant web browser and email client instances'
      calculation: :code:`M3 / M5`
  - name: '7.4: Maintain and Enforce Network-Based URL Filters'
    number: "7.4"
    description: Enforce network-based URL filters that limit a system’s ability to connect to websites not approved by the organization. This filtering shall be enforced for each of the organization’s systems, whether they are physically at an organization’s facilities or not.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.5: Integration Software and Hardware Asset Inventories'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: List of web clients/browsers installed in the organization by endpoint
    - name: Approved configuration(s) covering each web browser/client in Input 1 indicating whether or not the browser must utilize URL filtering
    operations:
    - name: For each application instance (web browser/client) in Input 1, check the application's configuration against the appropriate approved configuration(s) from Input 2.
    - name: Create a list of the application instances that meet the approved configuration (M1)
    - name: Create a list of the application instances that that do not meet the approved configuration (M2) noting each deviation.
    measures:
    - M1 = List of application instances (web browser/client) that meet the approved configuration (compliant list)
    - M2 = List of application instances (web browser or email client) that do not meet the approved configuration (non-compliant list)
    - M3 = Count of compliant application instances (count of M1)
    - M4 = Count of non-compliant application instances (count of M2)
    - M5 = Total count of installed web browser and email client instances (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' Calculate the quality of URL-filter enforcement.'
      calculation: :code:`M3 / M5`
  - name: '7.5: Subscribe to URLCategorization Service'
    number: "7.5"
    description: Subscribe to URL-categorization services to ensure that they are up-to-date with the most recent website category definitions available.  Uncategorized sites shall be blocked by default.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: The organization's URL categorization service subscription.
    operations:
    - name: A user attempts to access an uncategorized URL
    measures:
    - M1 = 1 if the organization subscribes to URL categorization services; 0 otherwise
    - M2 = 1 if access to the uncategorized URL is blocked; 1 otherwise.
    metrics:
    - name: Enforcement
      metric: ' Calculate whether URL categorization is successfully blocking uncategorized URL access.'
      calculation: :code:`M1 AND M2`
  - name: '7.6: Log All URL Requests'
    number: "7.6"
    description: Log all URL requests from each of the organization’s systems, whether on-site or a mobile device, in order to identify potentially malicious activity and assist incident handlers with identifying potentially compromised systems.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.5: Maintain Asset Inventory Information'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The list of endpoints
    - name: The organization's logging configuration policy, detailing URL logging configuration
    operations:
    - name: For each endpoint, collect the system logging configuration
    measures:
    - M1(i) = (For each endpoint "i") 1 if the endpoint's logging configuration complies with the organizations logging policy; 0 otherwise.
    - M2 = Count of endpoints from Input 1
    metrics:
    - name: Configuration Coverage
      metric: ' The ratio of devices which enable URL request logging to the total number of devices.'
      calculation: :code:`(SUM from i=1..M2 (M1(i))) / M2`
  - name: '7.7: Use of DNS Filtering Services'
    number: "7.7"
    description: Use Domain Name System (DNS) filtering services to help block access to known malicious domains.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: 'Endpoint Inventory: The list of endpoints to be audited (sub-control 1.5).'
    - name: The list of accepted DNS filtering services, such as Quad-9.
    operations:
    - name: For each endpoint in Input 1, collect it's DNS configuration setting noting appropriately and inappropriately configured endpoints.
    measures:
    - M1 = List of audited endpoints
    - M2 = Count of M1
    - M3 = List of appropriately configured endpoints
    - M4 = Count of M3
    - M5 = List of inappropriately configured endpoints
    - M6 = Count of M5
    - M7 = List of systems not using approve DNS servers
    - M8 = Count of M7
    metrics:
    - name: DNS Filtering Coverage
      metric: ' Determine the ratio of endpoints configured to use accepted DNS filtering services to the total number of endpoints which utilize DNS.'
      calculation: :code:`M4 / M2`
    - name: Traffic Analysis
      metric: ' Utilize traffic analysis to determine if any traffic is *not* being sent through the prescribed DNS services.'
      calculation: :code:`M8 / M2`
  - name: '7.8: Implement DMARC and Enable Receiver-Side Verification'
    number: "7.8"
    description: To lower the chance of spoofed or modified emails from valid domains, implement Domain-based Message Authentication, Reporting and Conformance (DMARC) policy and verification, starting by implementing the Sender Policy Framework (SPF) and the DomainKeys Identified Mail (DKIM) standards.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.4: Track Software Inventory Information'
    inputs:
    - name: DMARC policy
    - name: TXT record published in DNS
    - name: The Mail Transfer Agent used by the organization (this could indicate DKIM is used to sign outgoing messages)
    - name: The Mail User Agent used by the organization (this could indicate DKIM is used to verify incoming messages)
    operations:
    - name: Examine the TXT records in DNS for a :code:`v` value indicating DMARC
    - name: Examine the TXT records in DNS for a :code:`v` value indicating SPF
    - name: Examine the TXT records in DNS for a :code:`v` value indicating DKIM
    measures:
    - M1 = 1 if Input 1 exists and Operation 1 indicates the use of DMARC
    - M2 = 1 if Operation 2 indicates the use of SPF
    - M3 = 1 if Operation 3 indicates the use of DKIM
    metrics:
    - name: DMARC Usage
      metric: ' Ensure usage and proper configuration of DMARC/SPF/DKIM'
      calculation: :code:`M1 AND M2 AND M3`
  - name: '7.9: Block Unnecessary File Types'
    number: "7.9"
    description: Block all email attachments entering the organization’s email gateway if the file types are unnecessary for the organization’s business.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.5: Integration Software and Hardware Asset Inventories'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The list of endpoints
    - name: The organization's approved email gateway configuration, including file types to be blocked.
    operations:
    - name: From Input 1, collect endpoints configured as email gateway(s) (M2)
    - name: For each endpoint collected in Operation 1, collect the system's attachment blocking configuration
    measures:
    - M1(i) = (For each email gateway "i") 1 if the email gateway's configuration complies with the organizations attachment blocking policy; 0 otherwise.
    - M2 = Count of email gateways
    metrics:
    - name: Coverage
      metric: ' The ratio of endpoints configured as email gateways that are properly configured to the total number of email gateway endpoints'
      calculation: :code:`(SUM from i=1..M2 (M1(i))) / M2`
  - name: '7.10: Sandbox All Email Attachments'
    number: "7.10"
    description: Use sandboxing to analyze and block inbound email attachments with malicious behavior.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: The list of authorized software
    operations:
    - name: Enumerate all e-mail servers in the enterprise
    - name: For each identified e-mail server, examine its configuration to ensure that either native attachment sandboxing is configured or that an external system is configured to be used for that purpose, noting appropriately and inappropriately configured servers
    measures:
    - M1 = List of all e-mail servers in the enterprise
    - M2 = List of appropriately configured e-mail servers
    - M3 = List of inappropriately configured e-mail servers
    - M4 = Count of all e-mail servers in the enterprise (count of M1)
    - M5 = Count of appropriately configured e-mail servers (count of M2)
    - M6 = Count of inappropriately configured e-mail servers (count of M3)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured e-mail servers to the total number of e-mail servers'
      calculation: :code:`M5 / M4`
- name: 'CIS Control 8: Malware Defenses'
  number: "8"
  description: |-
    Control the installation, spread, and execution of malicious code at multiple points in the
    enterprise, while optimizing the use of automation to enable rapid updating of defense, data
    gathering, and corrective action.
  why: |-
    Malicious software is an integral and dangerous aspect of Internet threats, as it is designed to
    attack your systems, devices, and your data. It is fast-moving, fast-changing, and enters through
    any number of points like end-user devices, email attachments, web pages, cloud services, user
    actions, and removable media. Modern malware is designed to avoid defenses, and attack or
    disable them.

    Malware defenses must be able to operate in this dynamic environment through large-scale
    automation, rapid updating, and integration with processes like incident response. They must
    also be deployed at multiple possible points of attack to detect, stop the movement of, or control
    the execution of malicious software. Enterprise endpoint security suites provide administrative
    features to verify that all defenses are active and current on every managed system.
  subcontrols:
  - name: '8.1: Utilize Centrally Managed Anti-Malware Software'
    number: "8.1"
    description: Utilize centrally managed anti-malware software to continuously monitor and defend each of the organization’s workstations and servers.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: List of deployed anti-malware software
    - name: The list of endpoints
    operations:
    - name: For each deployed anti-malware solution, verify that it is centrally managed
    - name: For each deployed anti-malware solution, enumerate the set of endpoints covered
    - name: Union the set of covered endpoints
    - name: Identify set of endpoints eligible for anti-malware coverage (i.e. network devices likely do not run anti-malware agents)
    measures:
    - M1 = Count of anti-malware solutions in use
    - M2 = Count of anti-malware solutions that are centrally managed
    - M3 = Total number of endpoints covered by anti-malware solutions
    - M4 = Total number of endpoints eligible for anti-malware coverage
    - M5 = List of anti-malware solutions that are centrally managed
    - M6 = List of anti-malware solutions that are not centrally managed
    - M7 = List of endpoints covered by anti-malware solutions
    - M8 = List of endpoints not covered by anti-malware solutions
    metrics:
    - name: Anti-Malware Management Coverage
      metric: ' Percentage of anti-malware solutions that are centrally managed'
      calculation: :code:`M2 / M1`
    - name: Endpoint Anti-Malware Coverage
      metric: ' Percentage of endpoints covered by anti-malware solutions'
      calculation: :code:`M3 / M4`
  - name: '8.2: Ensure Anti-Malware Software and Signatures Are Updated'
    number: "8.2"
    description: Ensure that the organization’s anti-malware software updates its scanning engine and signature database on a regular basis.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Integrate Software and Hardware Asset Inventories'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.4: Track Software Inventory Information'
    inputs:
    - name: 'Endpoint Inventory: Endpoint inventory (with entry for each endpoint indicating whether that endpoint can support anti-malware software or not; sub-control 1.4)'
    - name: Anti-malware software version information (this is a list of acceptable versions for the scanning engines and the signature databases for any anti-malware products in use on endpoints in Input 1; this version information needs to be updated frequently to reflect current version information and age off outdated versions; reference the ASL per sub-control 2.1 and ideally leverage the software inventory in sub-control 2.4)
    - name: Maximum time allowed for anti-malware software updates to be applied to endpoints
    operations:
    - name: Refine the endpoint inventory (Input 1) to only contain endpoints that can support anti-malware software endpoint inventory - this reduced list of endpoints becomes M1
    - name: For each endpoint in M1, generate a list of those endpoints that have an acceptable version of anti-malware software installed and enabled (both scanning engine and signature database) according to the information provided in Input 2 (M2) and a list of those endpoints that do not have an acceptable version of anti-malware software installed and enabled (M3).
    - name: For each endpoint in M1, generate a list of those endpoints that have been updated within the time frame specified by Input 3 (M4), and a list of those endpoints that have not been updated within that time-frame (M5)
    - name: '**NOTE**: Comparing the coverage metric to the freshness metric can serve as a useful check - for instance, if the coverage metric tends to be high, while the freshness metric is low, that would suggest that Input 2 might not have been updated recently enough (that is, outdated versions are being considered acceptable)?'
    - name: Measures
    - name: '---'
    measures:
    - M1 = List of endpoints capable of supporting anti-malware software
    - M2 = List of endpoints with an acceptable version of anti-malware software installed and enabled (version compliant list)
    - M3 = List of endpoints that do not have an acceptable version of anti-malware software installed and enabled (version non-compliant list)
    - M4 = List of endpoints that have had their anti-malware software updated within the specified time-frame (time compliant list)
    - M5 = List of endpoints that have not had their anti-malware software updated within the specified time-frame (time non-compliant list)
    - M6 = Count of endpoints in M1 (number of endpoints capable of supporting anti-malware software)
    - M7 = Count of endpoints in M2 (number of version compliant endpoints)
    - M8 = Count of endpoints in M3 (number of version non-compliant endpoints)
    - M9 = Count of endpoints in M4 (number of time compliant endpoints)
    - M10 = Count of endpoints in M5 (number of endpoints that have not had updates within acceptable time frame)
    metrics:
    - name: Coverage
      metric: ' The ratio of anti-malware software version compliant endpoints to the total number of endpoints capable of supporting anti-malware software?'
      calculation: :code:`M7 / M9`
    - name: Freshness
      metric: ' The ratio of endpoints whose anti-malware software has been updated within the specified timeframe?'
      calculation: :code:`M9 / M6`
  - name: '8.3: Enable Operating System Anti-Exploitation Features/ Deploy Anti-Exploit Technologies'
    number: "8.3"
    description: Enable anti-exploitation features such as Data Execution Prevention (DEP) and Address Space Layout Randomization (ASLR) that are available in an operating system or deploy appropriate toolkits that can be configured to apply protection to a broader set of applications and executables.
    header:
      assetType: Devices
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: List of endpoints
    - name: Approved configuration(s) to enable anti-exploitation features (Operating System feature, toolkit, etc.) for each type of endpoint in Input 1
    operations:
    - name: For each endpoint in Input 1, examine the endpoint to see if it is configured according to the approved configuration(s).
    - name: Create a list of the endpoints that meet the the approved configurations (M1)
    - name: Create a list of the endpoints that do not meet the approved configurations (M2), noting each deviation.
    measures:
    - M1 = Count of endpoints that meet the approved anti-exploitation configurations, such as DEP, ASLR or similar technologies (compliant list)
    - M2 = Count of endpoints
    - M3 (Optional) = List of endpoints that meet the approved anti-exploitation configurations, such as DEP, ASLR or similar technologies (compliant list)
    - M4 (Optional) = List of endpoints that do not meet the approved anti-exploitation configurations, such as DEP, ASLR or similar technologies (non-compliant list)
    - M5 (Optional) = Count of non-compliant endpoints (M2 - M1)
    - M6 = List of non-compliant endpoints
    metrics:
    - name: Anti-Exploitation
      metric: ' Ratio of endpoints compliant with anti-exploitation configurations to the total number of endpoints'
      calculation: :code:`M1 / M2`
  - name: '8.4: Configure Anti-Malware Scanning of Removable Media'
    number: "8.4"
    description: Configure devices so that they automatically conduct an anti-malware scan of removable media when inserted or connected.
    header:
      assetType: Devices
      securityFunction: Detect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: 'Endpoint Inventory: Endpoint inventory (with entry for each endpoint indicating whether that endpoint can support anti-malware software or not)'
    - name: Desired anti-malware configuration (to automatically scan removable media when inserted/connected)
    operations:
    - name: Refine the endpoint inventory (Input 1) to only contain endpoints that can support anti-malware software endpoint inventory - this reduced list of endpoints becomes M1
    - name: 'Of the set of endpoints that can support anti-malware software (M1), generate a list of those endpoints that actually have anti-malware software installed, enabled, and adhere to the configuration specified in Input 2 (M2) and a list of the endpoints that do not adhere to the specified configuration (M3). Note: Endpoints in M1 that do not have anti-malware installed and enabled, are considered non-compliant and added to M3.'
    measures:
    - M1 = List of endpoints capable of supporting anti-malware software
    - M2 = List of endpoints with anti-malware software installed, enabled, and properly configured to scan removable media (compliant list)
    - M3 = List of endpoints not adhering to the specified configuration (non-compliant list)
    - M4 = Count of endpoints in M1 (number of endpoints capable of supporting anti-malware software)
    - M5 = Count of endpoints in M2 (number of compliant endpoints)
    - M6 = Count of endpoints in M3 (number of non-compliant endpoints)
    metrics:
    - name: Coverage
      metric: ' What is the ratio of endpoints compliant with the desired anti-malware configuration to the total number of endpoints capable of supporting anti-malware software?'
      calculation: :code:`M5 / M4`
  - name: '8.5: Configure Devices to Not Auto-Run Content'
    number: "8.5"
    description: Configure devices to not auto-run content from removable media.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: 'Endpoint Inventory: Endpoint inventory'
    - name: Desired configuration(s) to disable auto-run. There may be multiple configurations targeted at different types of endpoints (for instance, a different configuration might be provided for each type of operating system used on the endpoints in the provided inventory). If the endpoints are capable of performing multiple types of auto-run behavior (i.e., auto-run vs. auto-play), appropriate configurations should be provided for each type.
    operations:
    - name: For each endpoint in Input 1, compare the endpoint's configuration to the appropriate configuration from Input 2. Generate a list of endpoints that adhere to the specified configuration (M1) and a list of the endpoints that do not adhere to the specified configuration (M2).
    measures:
    - M1 = List of endpoints adhering to the specified configuration (compliant list)
    - M2 = List of endpoints not adhering to the specified configuration (non-compliant list)
    - M3 = Count of endpoints in M1 (number of compliant endpoints)
    - M4 = Count of endpoints in M2 (number of non-compliant endpoints)
    - M5 = Count of endpoints in the endpoint inventory (Input 1)
    metrics:
    - name: Auto Run Disabled
      metric: ' The ratio of endpoints properly disabling auto-run to the total number of endpoints?'
      calculation: :code:`M3 / M5`
  - name: '8.6: Centralize Anti-Malware Logging'
    number: "8.6"
    description: Send all malware detection events to enterprise anti-malware administration tools and event log servers for analysis and alerting.
    header:
      assetType: Devices
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: List of software instances (anti-malware software, anti-malware administration tools, and event log servers) that need to be configured to properly send, receive, and log these malware detection events.
    - name: Approved configuration(s) for anti-malware software, anti-malware administration tools, and event log servers to ensure that malware detection events are properly sent, received, and logged.
    - name: The total number of malware detection events (M5)
    - name: The number of alerts being correlated in a central service (M6)
    operations:
    - name: For each software instance in Input 1, check to see if it is configured according to the appropriate approved configuration(s) in Input 2.
    - name: Create a list of the software instances that are properly configured (M1)
    - name: Create a list of the software instances that are not properly configured (M2) noting where the deviations occur.
    measures:
    - M1 = List of software instances that are properly configured for the sending/receiving of malware detection events (compliant list)
    - M2 = List of software instances that are not properly configured for the sending/receiving of malware detection events (non-compliant list)
    - M3 = Count of properly configured software instances (count of M1)
    - M4 = Total count of software instances that need to be configured to properly send/receive malware detection events (count of Input 1)
    - M5 = Count of malware detection events
    - M6 = Count of alerts being correlated in a central service
    metrics:
    - name: Coverage
      metric: ' Ratio of properly configured software instances for sending/receiving malware detection events.'
      calculation: :code:`M3 / M4`
    - name: Quality
      metric: ' Quality of Log correlation/aggregation for Anti-Malware'
      calculation: :code:`M6 / M5`
  - name: '8.7: Enable DNS Query Logging'
    number: "8.7"
    description: Enable Domain Name System (DNS) query logging to detect hostname lookups for known malicious domains.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.5: Integrate Software and Hardware Asset Inventories'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The list of internal DNS servers
    - name: The organization's DNS configuration policy
    operations:
    - name: For each internal DNS server (Input 1), compare the server's DNS configuration with the organization's DNS configuration policy
    measures:
    - M1 = Count of internal DNS servers
    - M2 = Count of internal DNS servers matching the organization's configuration policy
    - M3 = List of compliant DNS servers
    - M4 = List of non-compliant DNS servers
    metrics:
    - name: DNS Configuration Coverage
      metric: ' The ratio of internal DNS servers matching the approved configuration to the total number of internal DNS servers.'
      calculation: :code:`M2 / M1`
  - name: '8.8: Enable Command-Line Audit Logging'
    number: "8.8"
    description: Enable command-line audit logging for command shells, such as Microsoft PowerShell and Bash.
    header:
      assetType: Devices
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The list of endpoints
    - name: 'Approved configuration(s) for command line auditing of command shells (note: there may be multiple configurations based on the various types of endpoints, including various operating systems, etc.)'
    operations:
    - name: For each endpoint in Input 1, examine the endpoint to see if it is configured according to the appropriate approved configuration(s) from Input 2.
    - name: Create a list of endpoints that meet the approved configuration (M1)
    - name: Create a list of endpoints that do not meet the approved configuration (M3), noting the deviations.
    measures:
    - M1 = List of endpoints that meet the approved command shell logging configurations (compliant list)
    - M2 = Count of endpoints (count of Input 1)
    - M3 (Optional) = List of endpoints that do not meet the approved command shell logging configurations (non-compliant list)
    - M4 (Optional) = Count of non-compliant endpoints (count of M3)
    metrics:
    - name: Coverage
      metric: ' The ratio of endpoints compliant with command shell logging configurations to the total number of endpoints'
      calculation: :code:`M1 / M2`
- name: 'CIS Control 9: Limitation and Control of Network Ports, Protocols and Services'
  number: "9"
  description: |-
    Manage (track/control/correct) the ongoing operational use of ports, protocols, and services
    on networked devices in order to minimize windows of vulnerability available to attackers
  why: |-
    Attackers search for remotely accessible network services that are vulnerable to exploitation.
    Common examples include poorly configured web servers, mail servers, file and print services,
    and DNS servers installed by default on a variety of different device types, often without a
    business need for the given service. Many software packages automatically install services and
    turn them on as part of the installation of the main software package without informing a user or
    administrator that the services have been enabled. Attackers scan for such services and attempt
    to exploit these services, often attempting to exploit default user IDs and passwords or widely
    available exploitation code.
  subcontrols:
  - name: '9.1: Associate Active Ports, Services, and Protocols to Asset Inventory'
    number: "9.1"
    description: Associate active ports, services, and protocols to the hardware assets in the asset inventory.
    header:
      assetType: Devices
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    operations:
    - name: For each endpoint, identify necessary detailed information
    - name: "\tActive ports"
    - name: "\t\tProtocol Served"
    - name: "\tInstalled services (running or not)"
    - name: Identify endpoints with all detailed information identified
    measures:
    - M1 = Count of endpoints in inventory
    - M2 = Count of endpoints with all detailed information
    - M3 = List of endpoints with all detailed information
    - M4 = List of endpoints missing at least one piece of detailed information
    - M5 = Count of endpoints missing at least one piece of detailed information
    metrics:
    - name: Quality
      metric: ' The ratio of endpoints with all detailed information to the total number of endpoints under management.'
      calculation: :code:`M2 / M1`
  - name: '9.2: Ensure Only Approved Ports, Protocols, and Services Are Running'
    number: "9.2"
    description: Ensure that only network ports, protocols, and services listening on a system with validated business needs are running on each system.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: List of authorized ports with validated business need
    - name: List of authorized protocols with validated business need
    - name: List of authorized services with validated business need
    - name: List of endpoints
    operations:
    - name: 'For each endpoint perform the following to build sets of information:'
    - name: "\tScan for open ports"
    - name: "\tFor each open port"
    - name: "\t\tTest protocol running on that port"
    - name: "\tEnumerate installed services"
    - name: Enumerate discovered ports
    - name: Enumerate discovered services
    - name: Determine set of unauthorized ports
    - name: Determine set of unauthorized services
    measures:
    - M1 = Set of open ports
    - M2 = Set of unauthorized ports
    - M3 = Set of discovered services
    - M4 = Set of unauthorized services
    - M5 = Set of unexpected protocols discovered on open ports
    metrics:
    - name: Ports
      metric: ' Ratio of unauthorized ports to open ports'
      calculation: :code:`M2 / M1`
    - name: Services
      metric: ' Ratio of unauthorized services to discovered services'
      calculation: :code:`M4 / M3`
    - name: Unexpected Protocols
      metric: ' Ratio of unexpected protocols discovered on open ports to total number of open ports'
      calculation: :code:`M5 / M1`
  - name: '9.3: Perform Regular Automated Port Scans'
    number: "9.3"
    description: Perform automated port scans on a regular basis against all systems and alert if unauthorized ports are detected on a system.
    header:
      assetType: Devices
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: 't(i): the timestamp at which a port scan i has been performed'
    - name: 'N: the number of port scans (timestamps) taken so far'
    - name: 'M: the maximum possible irregularity (can be fixed as 30 day)'
    - name: 'T: (optional) target/desirable review interval threshold'
    - name: 'D: the number of port scan in which at least one anomaly was detected'
    - name: 'L: The total number of port scans'
    - name: 'UP: The number of alerts received due to unauthorized ports (M5)'
    - name: 'NP: The number of unauthorized ports (M6)'
    operations:
    - name: '* Enumerate endpoints and identify port scanning software'
    - name: '* Calculate measures M1 - M6 for each port scanning software, tracking endpoints covered'
    - name: '* Enumerate set of endpoints covered by port scanning software'
    - name: '* Compare enumeration of covered endpoints against the list of all endpoints to identify those endpoints that are not covered'
    measures:
    - M1 (the average of port scans) = :code:`SUM from i=1..N  ( t(i+1) - t(i) ) / N`
    - M2 (Regularity Measure of Port Scan) = :code:`(SUM from i=1..N  ( (t(i+1) - t(i) - M1)^2 / N ) / M`
    - M3 (Threshold-based Regularity Measure of Port Scan) = :code:`(SUM from i=1..N ( ( t(i+1) - t(i) - T )^2 / N ) / M`
    - M4 (The Probability of detecting an anomaly in port scans) = :code:`D / L`
    - M5 = Count of alerts received due to unauthorized ports
    - M6 = Count of unauthorized ports
    - M7 = List of endpoints covered by port scanning tools
    - M8 = List of endpoints not covered by port scanning tools
    - M9 = Count of endpoints covered by port scanning tools
    - M10 = Count of endpoints
    metrics:
    - name: Quality of Port Scan
      metric: ' Quality of review is high if and only if the review is highly regular and the potential for detecting anomalies (at least one per review) is also high.'
      calculation: :code:`(1 - M2) * M4` or (if M3) :code:`(1 - M3) * M4`
    - name: Quality
      metric: ' Ratio of unauthorized ports reported'
      calculation: :code:`M5 / M6`
    - name: Coverage
      metric: ' Ratio of covered endpoints to the total number of endpoints'
      calculation: :code:`M9 / M10`
  - name: '9.4: Apply Host-Based Firewalls or Port-Filtering'
    number: "9.4"
    description: Apply host-based firewalls or port-filtering tools on end systems, with a default-deny rule that drops all traffic except those services and ports that are explicitly allowed.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: 'Endpoint Inventory: Derive from the endpoint inventory those endpoints able to scan (assumed capable of hosting firewall/port-filtering software)'
    - name: A policy (or set of policies, potentially individually per endpoint) indicating the ports that are allowed to be open
    operations:
    - name: For each endpoint, retrieve the firewall policy
    - name: For each firewall policy, enumerate both the ports which allow communication, and any configuration of a default deny rule (could that be a default?), noting along the way appropriately configured policies and inappropriately configured policies
    measures:
    - M1 = List of endpoints
    - M2 = Count of M1
    - M3 = List of endpoints with appropriately configured firewall ports policy
    - M4 = Count of M3
    - M5 = List of endpoints with inappropriately configured firewall ports policy
    - M6 = Count of M5
    - M7 = List of endpoints with appropriately configured default deny rule
    - M8 = Count of M7
    - M9 = List of endpoints with inappropriately configured default deny rule
    - M10 = Count of M9
    - M11 = List of endpoints with both appropriately configured firewall policy
    - M12 = Count of M11
    - M13 = List of endpoints with at least one inappropriate firewall configuration
    - M14 = Count of M13
    metrics:
    - name: Coverage
      metric: ' The ratio of correctly configured endpoints to the total number of endpoint?'
      calculation: :code:`M14 / M2`
  - name: '9.5: Implement Application Firewalls'
    number: "9.5"
    description: Place application firewalls in front of any critical servers to verify and validate the traffic going to the server. Any unauthorized traffic should be blocked and logged.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized software
    operations:
    - name: Enumerate endpoints identified as critical in the endpoint inventory
    - name: Enumerate all application firewalls from the software inventory
    - name: For each identified application firewall, enumerate the endpoints it covers
    - name: "\tEnumerate the set of identified endpoints - covered endpoints"
    - name: Complement the set of covered endpoints with the set of critical endpoints
    measures:
    - M1 = List of critical endpoints
    - M2 = List of application firewalls
    - M3 = List of endpoints covered by at least one application firewall
    - M4 = List of endpoints not covered by at least one application firewall
    - M5 = Count of critical endpoints (count of M1)
    - M6 = Count of application firewalls (count of M2)
    - M7 = Count of endpoints covered by at least one application firewall (count of M3)
    - M8 = Count of endpoints not covered by at least one application firewall (count of M4)
    metrics:
    - name: Coverage
      metric: ' The ratio of endpoints covered by at least one application firewall to the total number of critical endpoints'
      calculation: :code:`M7 / M5`
- name: 'CIS Control 10: Data Recovery Capabilities'
  number: "10"
  description: |-
    The processes and tools used to properly back up critical information with a proven methodology
    for timely recovery of it.
  why: |-
    When attackers compromise machines, they often make significant changes to configurations
    and software. Sometimes attackers also make subtle alterations of data stored on compromised
    machines, potentially jeopardizing organizational effectiveness with polluted information. When
    the attackers are discovered, it can be extremely difficult for organizations without a trustworthy
    data recovery capability to remove all aspects of the attacker’s presence on the machine.
  subcontrols:
  - name: '10.1: Ensure Regular Automated Backups'
    number: "10.1"
    description: Ensure that all system data is automatically backed up on a regular basis.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: 'Endpoint Inventory: Endpoint Inventory'
    - name: Backup configuration policy is available
    - name: Backup software (either OS or 3d party) configuration is available and able to be queried
    - name: Backup software logs are available and can be queried
    - name: Successful backup staleness threshold is defined (a maximum time period allowed between backups; recommended value of at least weekly)
    operations:
    - name: For each endpoint, examine its backup configuration with the available configuration policy (noting appropriately configured and inappropriately configured endpoints along the way), and examine its logs to determine the most recent successful backup completion time (noting whether it was run within the enterprise-defined staleness threshold).
    - name: '# Enumerate the endpoints that are both appropriately configured and do not have stale backups'
    - name: ""
    - name: Compare an endpoints backup configuration with available configuration policy
    - name: Interrogate logs to determine most recent successful backup completion time
    measures:
    - M1 = List of endpoints
    - M2 = Count of M1
    - M3 = List of appropriately configured endpoints
    - M4 = Count of M3
    - M5 = List of inappropriately configured endpoints
    - M6 = Count of M5
    - M7 = List of endpoints both appropriately configured and without stale backups
    - M8 = Count of M7
    - M9 = List of endpoints either inappropriately configured or without stale backups
    - M10 = Count of M9
    metrics:
    - name: Coverage
      metric: ' What percentage of endpoints are successfully backing up system data on a regular basis?'
      calculation: :code:`M8 / M2`
  - name: '10.2: Perform Complete System Backups'
    number: "10.2"
    description: Ensure that all of the organization’s key systems are backed up as a complete system, through processes such as imaging, to enable the quick recovery of an entire system.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: 'Key Systems: The list of "key systems" identified by the organization, as derived from the endpoint inventory (see sub-control 1.4)'
    - name: The organization's backup/imaging configuration policy
    operations:
    - name: For each endpoint in the list of "key systems", examine its backup configuration against the available backup configuration policy, noting appropriately and inappropriately configured endpoints along the way.
    measures:
    - M1 = List of "key system" endpoints
    - M2 = Count of M1
    - M3 = List of appropriately configured "key systems"
    - M4 = Count of M3
    - M5 = List of inappropriately configured "key systems"
    - M6 = Count of M5
    metrics:
    - name: Coverage
      metric: ' What percentage of key systems are successfully backed up as a complete system?'
      calculation: :code:`M4 / M2`
  - name: '10.3: Test Data on Backup Media'
    number: "10.3"
    description: Test data integrity on backup media on a regular basis by performing a data restoration process to ensure that the backup is properly working.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The current set of backup media for the organization
    - name: 't(i): the timestamp at which a backup restoration i has been performed'
    - name: 'N: the number of backup restorations (timestamps) performed so far'
    - name: 'M: the maximum possible irregularity (can be fixed as 30 day)'
    - name: 'T: (optional) target/desirable review interval threshold'
    - name: 'D: the number of backup restorations in which at least one anomaly was detected'
    - name: 'L: The total number of backup restorations'
    operations:
    - name: Given a sampling of backup media from Input 1, restore the backup to a temporary location
    measures:
    - M1 = Count of backups under test
    - M2 = Count of restored backups deemed "properly working" following restoration
    - M3 = The average of backup restorations = :code:`SUM from i=1..N ( t(i+1) - t(i) ) / N`
    - M4 (Regularity Measure of Backup Restoration) = :code:`(SUM from i=1..N ((t(i+1) - t(i)) - M3)^2 / N ) / M`
    - M5 (Threshold-based Regularity Measure of Backup Restoration) = :code:`(SUM from i=1..N ((t(i+1) - t(i) - T)^2 / N ) / M`
    - M6 (The Probability of detecting an anomaly in Backup Restoration) = :code:`D / L`
    metrics:
    - name: Backup Integrity Quality
      metric: ' The ratio of "properly working" backups to the total number of backups under test'
      calculation: :code:`M2 / M1`
    - name: Quality of Backup Restoration
      metric: ' Quality of backup restoration is high if and only if the backup restoration is highly regular and the potential for detecting anomalies (at least one per review) is also high.'
      calculation: :code:`(1-M4) * M6` or (if M5) :code:`(1 - M5) / M6
  - name: '10.4: Protect Backups'
    number: "10.4"
    description: Ensure that backups are properly protected via physical security or encryption when they are stored, as well as when they are moved across the network. This includes remote backups and cloud services.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The list of endpoints configured for periodic backup, derived from the endpoint inventory (see sub-control 1.4)
    - name: The organization's backup configuration policy
    operations:
    - name: Interrogate the organization's backup configuration policy to determine if backups are configured to be encrypted
    - name: For each endpoint, examine its backup configuration policy to ensure that encrypted backups are configured, noting appropriately and inappropriately configured endpoints along the way.
    measures:
    - M1 = List of endpoints
    - M2 = Count of M1
    - M3 = List of appropriately configured endpoints
    - M4 = Count of M3
    - M5 = List of inappropriately configured endpoints
    - M6 = Count of M5
    metrics:
    - name: Coverage
      metric: ' What percentage backups are protected via physical security/encryption?'
      calculation: :code:`M6 / M2`
  - name: '10.5: Ensure All Backups Have at Least One Offline Backup Destination'
    number: "10.5"
    description: Ensure that all backups have at least one offline (i.e., not accessible via a network connection) backup destination.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: 'Endpoint Inventory: List of endpoints'
    - name: Backup configuration policy assuming inclusion of "offline" backup destination
    operations:
    - name: Collect list of endpoints matching/not-matching policy specified by Input 2
    measures:
    - M1 = List of endpoints
    - M2 = Count of M1
    - M3 = List of endpoints matching policy
    - M4 = Count of M3
    - M5 = List of endpoints not matching policy
    - M6 = Count of M5
    metrics:
    - name: Coverage
      metric: ' What is the ratio of endpoints matching the backup configuration policy to the total number of endpoints?'
      calculation: :code:`M4 / M2`
    - name: Lack of Coverage
      metric: ' What is the ratio of endpoints *not* matching the backup configuration policy to the total number of endpoints?'
      calculation: :code:`M5 / M2`
- name: 'CIS Control 11: Secure Configuration for Network Devices, such as Firewalls, Routers, and Switches'
  number: "11"
  description: |-
    Establish, implement, and actively manage (track, report on, correct) the security configuration of
    network infrastructure devices using a rigorous configuration management and change control
    process in order to prevent attackers from exploiting vulnerable services and settings.
  why: |-
    As delivered from manufacturers and resellers, the default configurations for network
    infrastructure devices are geared for ease-of-deployment and ease-of-use – not security. Open
    services and ports, default accounts (including service accounts) or passwords, support for older
    (vulnerable) protocols, pre-installation of unneeded software; all can be exploitable in their
    default state. The management of the secure configurations for networking devices is not a onetime
    event, but a process that involves regularly re-evaluating not only the configuration items
    but also the allowed traffic flows. Attackers take advantage of network devices becoming less
    securely configured over time as users demand exceptions for specific business needs. Sometimes
    the exceptions are deployed and then left undone when they are no longer applicable to the
    business needs. In some cases, the security risk of the exception is neither properly analyzed nor
    measured against the associated business need and can change over time.

    Attackers search for vulnerable default settings, gaps or inconsistencies in firewall rule sets,
    routers, and switches and use those holes to penetrate defenses. They exploit flaws in these
    devices to gain access to networks, redirect traffic on a network, and intercept information while
    in transmission. Through such actions, the attacker gains access to sensitive data, alters important
    information, or even uses a compromised machine to pose as another trusted system on the
    network.
  subcontrols:
  - name: '11.1: Maintain Standard Security Configurations for Network Devices'
    number: "11.1"
    description: Maintain documented security configuration standards for all authorized network devices.
    header:
      assetType: Network
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of authorized network devices, per Control 1.
    - name: The list of enterprise security configuration standards.
    operations:
    - name: Perform a set calculation, computing the Intersection (M1) of Input 1 and Input 2
    measures:
    - M1 = The intersection of Input 1 and Input 2. This intersection measures those authorized network devices with security configuration standards.
    - M2 = The "left" side of the set calculation measures the number of authorized network devices without security configuration standards.
    - M3 = The "right" side of the set calculation measures the number of security configuration standards without any authorized network devices to which they are associated.
    - M4 = Count of authorized network devices.
    metrics:
    - name: Coverage
      metric: ' The ratio of network devices to which standard, documented security configuration standards exist to the total number of network devices'
      calculation: :code:`(M4 - M2) / M4`
  - name: '11.2: Document Traffic Configuration Rules'
    number: "11.2"
    description: All configuration rules that allow traffic to flow through network devices should be documented in a configuration management system with a specific business reason for each rule, a specific individual’s name responsible for that business need, and an expected duration of the need
    header:
      assetType: Network
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of traffic flow configurations for network devices. (M5)
    - name: The inventory of configuration rules pertaining to traffic flow through network devices. (M4)
    operations:
    - name: Perform a set calculation, computing the Intersection (M1) of Input 1 and Input 2
    - name: Examine the inventory of configuration rules to manually determine those traffic flow rules which do not contain complete information (such as names, business needs, etc) (M6)
    measures:
    - M1 = The intersection of Input 1 and Input 2.  This intersection measures which of the inventoried configuration rules are contained in the enterprise's security configuration standards.
    - M2 = The "left" side of the set calculation measures the traffic flow configuration which are not documented in the inventory.
    - M3 = The "right" side of the set calculation measures any configuration rules in the inventory which are not currently configured on the network device.
    - M4 = Count of traffic flow configuration rules in the inventory.
    - M5 = The current traffic flow configuration for the network device
    - M6 = Count of traffic flow rules in the inventory that are incomplete
    metrics:
    - name: Coverage
      metric: ' The ratio of undocumented traffic flow configurations to the current total traffic flow configurations. If M2 > 0 then there are traffic flows configured on the device which are not documented in the inventory.'
      calculation: :code:`M2 / M5`
    - name: Completeness
      metric: ' The ratio of inventoried but incomplete traffic flow rules to the total set of traffic flow rules. If M3 > 0, there are configuration items in the inventory no longer configured in the device''s configuration.'
      calculation: :code:`M6 / M4`
  - name: '11.3: Use Automated Tools to Verify Standard Device Configurations and Detect Changes'
    number: "11.3"
    description: Compare all network device configurations against approved security configurations defined for each network device in use, and alert when any deviations are discovered.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: The organization's configuration monitoring system
    - name: The list of network devices
    - name: The inventory and mappings of secure configuration policy(ies) to the list of network devices
    operations:
    - name: For each network devices, obtain the configuration assessment results using Input 1
    measures:
    - M1(i) = (For each network device "i") Count of non-compliant recommendations resulting from Operation 1
    - M2(i) = (For each network device "i") Count of recommendations assessed
    metrics:
    - name: Non-Compliance Ratio
      metric: ' The ratio of network devices not in compliance with secure configuration policies to the total number of network devices.'
      calculation: :code:`(SUM from i=1..M2 (M1(i))) / M2`
  - name: '11.4: Install the Latest Stable Version of Any Security-Related Updates on All Network Devices'
    number: "11.4"
    description: Install the latest stable version of any security-related updates on all network devices.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: Network device inventory, derived from the endpoint inventory (see sub-control 1.4)
    - name: Network device version information (this is a list of acceptable versions for each model of network device in Input 1; this version information needs to be updated frequently to reflect current version information and age off outdated versions)
    operations:
    - name: For each network device in Input 1, compare the network device's version to the allowable versions from Input 2.
    - name: Generate a list of those network devices that match an allowable version (M1)
    - name: Generate a list of those network devices that do not match an allowable version (M2).
    measures:
    - M1 = List of network devices
    - M2 = Count of M1
    - M3 = List of network devices that match an allowable version (compliant list)
    - M4 = Count of M3
    - M5 = List of network devices that do not match an allowable version (non-compliant list)
    - M6 = Count of M5
    metrics:
    - name: Coverage
      metric: ' What percentage of inventoried network devices match the allowable version for that device/OS?'
      calculation: If M2 > 0, then :code:`M4 / M2`; otherwise :code:`0`
  - name: '11.5: Manage Network Devices Using Multi-Factor Authentication and Encrypted Sessions'
    number: "11.5"
    description: Manage all network devices using multi-factor authentication and encrypted sessions.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: Network device inventory
    - name: Network device configuration policy
    operations:
    - name: For each network device, compare its running configuration to the device's configuration policy for use of multi-factor authentication
    - name: For each network device, compare its running configuration to the device's configuration policy for use of encrypted sessions
    measures:
    - M1 = Count of network devices
    - M2(i) = (For each network device "i") 1 if the network device's running configuration matches the configuration policy for use of multi-factor authentication (Operation 1); 0 otherwise
    - M3(i) = (For each network device "i") 1 if the network device's running configuration matches the configuration policy for use of encrypted sessions (Operation 1); 0 otherwise
    metrics:
    - name: Multi-Factor Coverage
      metric: ' The ratio of network devices properly configured for multi-factor authentication to the total number of network devices.'
      calculation: :code:`(SUM from i=1..M1 (M2(i))) / M1`
    - name: Encrypted Session Coverage
      metric: ' The ratio of network devices properly configured for use of encrypted sessions to the total number of network devices.'
      calculation: :code:`(SUM from i=1..M1 (M3(i))) / M1`
  - name: '11.6: Use Dedicated Workstations for All Network Administrative Tasks'
    number: "11.6"
    description: Ensure network engineers use a dedicated machine for all administrative tasks or tasks requiring elevated access. This machine shall be segmented from the organization’s primary network and not be allowed Internet access.  This machine shall not be used for reading email, composing documents, or surfing the Internet.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The set of devices used for administrative purposes
    - name: The access control configuration
    operations:
    - name: N/A
    measures:
    - M1(i) = (For each machine "i") 1 if an administrative device has internet access; 0 otherwise.
    - M2(i) = (For each machine "i") 1 if administrative device can run any application that is not administrative; 0 otherwise.
    - M3 = Count of administrative devices
    metrics:
    - name: Administrative Device Configuration
      metric: ' The ratio of improperly configured administrative devices to the total number of administrative devices.'
      calculation: :code:`(SUM from i=1..M3 (M1(i) AND M2(i))) / M3`
  - name: '11.7: Manage Network Infrastructure Through a Dedicated Network'
    number: "11.7"
    description: Manage the network infrastructure across network connections that are separated from the business use of that network, relying on separate VLANs or, preferably, on entirely different physical connectivity for management sessions for network devices.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of management/administration paths for network infrastructure
    operations:
    - name: For each management path in Input 1, use a tool or process (which might be manual review) to determine if that management network connection is separate from all business (non-network management) network connections.
    - name: Create a list (M1) of the management paths that are separate from all non-network management network connections (noting the type of network separation - VLAN, physical, etc.)
    - name: Create a list of the management paths that do not have adequate separation from non-network management connections (M2) noting the deviations.
    measures:
    - M1 = List of network management paths that are adequately separated (compliant list)
    - M2 = List of network management paths that are not adequately separated (non-compliant list)
    - M3 = Count of adequately separated network management paths (count of M1)
    - M4 = Total count of network management paths (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of adequately separated management paths to the total number of management paths.'
      calculation: :code:`M3 / M4`
- name: 'CIS Control 12: Boundary Defense'
  number: "12"
  description: |-
    Detect/prevent/correct the flow of information transferring across networks of different trust
    levels with a focus on security-damaging data.
  why: |-
    Attackers focus on exploiting systems that they can reach across the Internet, including not only
    DMZ systems but also workstations and laptop computers that pull content from the Internet
    through network boundaries. Threats such as organized crime groups and nation-states use
    configuration and architectural weaknesses found on perimeter systems, network devices, and
    Internet-accessing client machines to gain initial access into an organization. Then, with a base of
    operations on these machines, attackers often pivot to get deeper inside the boundary to steal
    or change information or to set up a persistent presence for later attacks against internal hosts.
    Additionally, many attacks occur between business partner networks, sometimes referred to as
    extranets, as attackers hop from one organization’s network to another, exploiting vulnerable
    systems on extranet perimeters.

    To control the flow of traffic through network borders and police content by looking for attacks
    and evidence of compromised machines, boundary defenses should be multi-layered, relying on
    firewalls, proxies, DMZ perimeter networks, and network-based IPS and IDS. It is also critical to
    filter both inbound and outbound traffic.

    It should be noted that boundary lines between internal and external networks are diminishing
    as a result of increased interconnectivity within and between organizations as well as the rapid
    rise in deployment of wireless technologies. These blurring lines sometimes allow attackers to
    gain access inside networks while bypassing boundary systems. However, even with this blurring
    of boundaries, effective security deployments still rely on carefully configured boundary defenses
    that separate networks with different threat levels, sets of users, data and levels of control.
    And despite the blurring of internal and external networks, effective multi-layered defenses of
    perimeter networks help lower the number of successful attacks, allowing security personnel to
    focus on attackers who have devised methods to bypass boundary restrictions.
  subcontrols:
  - name: '12.1: Maintain an Inventory of Network Boundaries'
    number: "12.1"
    description: Maintain an up-to-date inventory of all of the organization’s network boundaries.
    header:
      assetType: Network
      securityFunction: Identify
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: An inventory of expected boundary devices (M1) as derived from the endpoint inventory (see sub-control 1.4)
    operations:
    - name: Utilize a discovery tool or process to examine the network topology to collect the list of devices considered boundary devices (M2).
    - name: Evaluate the complement of Input 1 and Operation 1 to get the list of non-inventoried boundary devices (M3).
    measures:
    - M1 = List of expected network boundary devices
    - M2 = Count of M1
    - M3 = List of discovered network boundary devices
    - M4 = Count of M3
    - M5 = List of non-inventoried boundary devices
    - M6 = Count of M5
    metrics:
    - name: Coverage
      metric: ' What is the ratio of non-inventoried boundary devices to expected boundary devices? If the calculated value is greater than zero, the inventory is not current.'
      calculation: :code:`M6 / M2`
  - name: '12.2: Scan for Unauthorized Connections Across Trusted Network Boundaries'
    number: "12.2"
    description: Perform regular scans from outside each trusted network boundary to detect any unauthorized connections which are accessible across the boundary.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '12.1: Maintain an Inventory of Network Boundaries'
    inputs:
    - name: Inventory of Network Boundaries
    - name: List of most recent scan times for each network boundary
    - name: Maximum allowable time frame between scans
    operations:
    - name: For each network boundary in Input 1, compare the corresponding time of most recent scan from Input 2 to the maximum allowable time provided in Input 3.
    - name: Create a list of network boundaries whose most recent scan time was within the allowable time frame (M1).
    - name: Create a list of network boundaries whose most recent scan time was outside the allowable time frame (M2).
    measures:
    - M1 = List of network boundaries whose most recent scan time was within the allowable time frame (compliant list)
    - M2 = List of network boundaries whose most recent scan time was outside the allowable time frame (non-compliant list)
    - M3 = Count of network boundaries that were scanned recently enough (count of M1)
    - M4 = Total count of network boundaries (count of Input 1)
    - ""
    metrics:
    - name: Coverage
      metric: ' The ratio of network boundary devices scanned within the allowable timeframe to the total number of network boundary devices'
      calculation: :code:`M3 / M4`
  - name: '12.3: Deny Communications With Known Malicious IP Addresses'
    number: "12.3"
    description: Deny communications with known malicious or unused Internet IP addresses and limit access only to trusted and necessary IP address ranges at each of the organization’s network boundaries.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '12.1: Maintain an Inventory of Network Boundaries'
    inputs:
    - name: The list of endpoints
    - name: The list of trusted and necessary IP address ranges
    - name: The list of known malicious IP addresses
    - name: The list of unused Internet IP addresses
    operations:
    - name: Enumerate all network devices identified as guarding a network boundary
    - name: 'For each network boundary device, examine its configuration to ensure rules as follows, noting appropriately and inappropriately configured devices:'
    - name: "\tAllow communications only with IP addresses in the list of trusted and necessary IP address ranges"
    - name: "\tExplicitly deny communications with IP addresses in the list of known malicious IP addresses"
    - name: "\tExplicitly deny communications with IP addresses in the list of unused IP addresses"
    measures:
    - M1 = List of all network boundary devices
    - M2 = List of appropriately configured network boundary devices
    - M3 = List of inappropriately configured network boundary devices
    - M4 = Count of network boundary devices (the count of M1)
    - M5 = Count of appropriately configured network boundary devices (the count of M2)
    - M6 = Count of inappropriately configured network boundary devices (the count of M3)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured network boundary devices to the total number of network boundary devices'
      calculation: :code:`M5 / M4`
  - name: '12.4: Deny Communication Over Unauthorized Ports'
    number: "12.4"
    description: Deny communication over unauthorized TCP or UDP ports or application traffic to ensure that only authorized protocols are allowed to cross the network boundary in or out of the network at each of the organization’s network boundaries.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.4: Track Software Inventory Information'
    inputs:
    - name: List of endpoints to scan (assumed capable of hosting firewall/port-filtering software) as derived from the endpoint inventory (see sub-control 1.4), and potentially as additionally informed the software inventory (see sub-control 2.4)
    - name: A policy (or set of policies, potentially individually per endpoint) indicating the ports that are allowed to be open
    operations:
    - name: For each endpoint, retrieve its firewall policy
    - name: For each endpoint/firewall policy pair, examine the endpoint's configuration to enumerate the ports that allow communication and any configuration of a default deny rule, noting appropriately configured and inappropriately configured endpoints along the way.
    measures:
    - M1 = List of scanned endpoints
    - M2 = Count of M1
    - M3 = List of endpoints with appropriate port configuration
    - M4 = Count of M3
    - M5 = List of endpoints with inappropriate port configuration
    - M6 = Count of M5
    - M7 = List of endpoints with appropriately configured default deny rule
    - M8 = Count of M7
    - M9 = List of endpoints with inappropriately configured default deny rule
    - M10 = Count of M9
    - M11 = List of endpoints with both appropriately configured ports and default deny rules
    - M12 = Count of M11
    - M13 = List of endpoints with at least one inappropriate configuration relative to ports or default deny rule
    - M14 = Count of M14
    metrics:
    - name: Endpoint Configuration
      metric: ' What is the ratio of correctly configured endpoints to the total number of endpoints?'
      calculation: :code:`M12 / M2`
  - name: '12.5: Configure Monitoring Systems to Record Network Packets'
    number: "12.5"
    description: Configure monitoring systems to record network packets passing through the boundary at each of the organization’s network boundaries.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    - '12.1: Maintain an Inventory of Network Boundaries'
    inputs:
    - name: List of network monitoring systems
    - name: List of network boundaries
    operations:
    - name: 'For each network monitoring system:'
    - name: "\tRetrieve configuration"
    - name: "\tCheck configuration for recording"
    - name: "\tEnumerate network boundaries covered"
    measures:
    - M1 = Count of network monitoring systems (from Input 1)
    - M2 = List of misconfigured network monitoring systems
    - M3 = Count of misconfigured network monitoring systems
    - M4 = Count of network boundaries (from Input 2)
    - M5 = List of network boundaries covered by network monitoring systems
    - M6 = Count of network boundaries covered by network monitoring systems
    - M7 = List of network boundaries not covered by network monitoring systems
    - M8 = Count of network boundaries not covered by network monitoring systems
    metrics:
    - name: Monitoring System Configuration
      metric: ' Percentage of appropriately configured monitoring systems'
      calculation: :code:`(M1 - M3) / M1`
    - name: Network Boundary Coverage
      metric: ' Percentage of network boundaries not covered by a monitoring system'
      calculation: :code:`(M4 - M6) / M4`
  - name: '12.6: Deploy Network-Based IDS Sensors'
    number: "12.6"
    description: Deploy network-based Intrusion Detection Systems (IDS) sensors to look for unusual attack mechanisms and detect compromise of these systems at each of the organization’s network boundaries.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '12.1: Maintain an Inventory of Network Boundaries'
    inputs:
    - name: List of network boundaries
    - name: List of IDS sensors
    operations:
    - name: For each IDS sensor, enumerate network boundaries covered
    measures:
    - M1 = Count of network boundaries (from Input 1)
    - M2 = Count of IDS sensors (from Input 2)
    - M4 = List of network boundaries covered by IDS sensors
    - M5 = Count of network boundaries covered by IDS sensors
    - M6 = List of network boundaries not covered by IDS sensors
    - M7 = Count of network boundaries not covered by IDS sensors
    metrics:
    - name: Coverage
      metric: ' Ratio of network boundaries covered by IDS sensors to total number of network boundaries '
      calculation: :code:`M5 / M1`
  - name: '12.7: Deploy Network-Based Intrusion Prevention Systems'
    number: "12.7"
    description: Deploy network-based Intrusion Prevention Systems (IPS) to block malicious network traffic at each of the organization’s network boundaries.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    - '12.1: Maintain an Inventory of Network Boundaries'
    inputs:
    - name: The list of authorized software
    - name: The list of network boundaries
    operations:
    - name: Enumerate all IPS systems in the software inventory
    - name: 'For each IPS system:'
    - name: "\tEnumerate the network boundaries covered by the system"
    - name: "\tExamine its configuration to ensure that the system is configured to block malicious network traffic through that boundary"
    - name: Enumerate network boundaries covered by all IPS systems (i.e. create a set of covered network boundaries)
    - name: Complement the set of covered network boundaries with the list of network boundaries to identify all uncovered network boundaries
    measures:
    - M1 = List of all IPS systems
    - M2 = List of network boundaries
    - M3 = List of appropriately configured IPS systems
    - M4 = List of inappropriately configured IPS systems
    - M5 = List of network boundaries covered by at least one IPS system
    - M6 = List of network boundaries not covered by at least one IPS system
    - M7 = Count of IPS systems (count of M1)
    - M8 = Count of network boundaries (count of M2)
    - M9 = Count of appropriately configured IPS systems (count of M3)
    - M10 = Count of inappropriately configured IPS systems (count of M4)
    - M11 = Count of network boundaries covered by at least one IPS system (count of M5)
    - M12 = Count of network boundaries not covered by at least one IPS system (count of M6)
    metrics:
    - name: IPS Coverage
      metric: ' The ratio of appropriately configured IPS systems to the total number of IPS systems'
      calculation: :code:`M9 / M7`
    - name: Boundary Coverage
      metric: ' The ratio of covered network boundaries to the total number of network boundaries'
      calculation: :code:`M11 / M8`
  - name: '12.8: Deploy NetFlow Collection on Networking Boundary Devices'
    number: "12.8"
    description: Enable the collection of NetFlow and logging data on all network boundary devices.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '12.1: Maintain an Inventory of Network Boundaries'
    inputs:
    - name: List of network boundary devices (from inventory)
    operations:
    - name: For each network boundary device,
    - name: "\tCheck configuration for NetFlow data (i.e. NetFlow is enabled)"
    - name: "\tCheck configuration for logging data (i.e. logging is enabled)"
    measures:
    - M1 = Count of network boundary devices (from Input 1)
    - M2 = List of network boundary devices with NetFlow enabled
    - M3 = Count of M2
    - M4 = List of network boundary devices without NetFlow enabled
    - M5 = Count of M4
    - M6 = List of network boundary devices with logging enabled
    - M7 = Count of M6
    - M8 = List of network boundary devices without logging enabled
    - M9 = Count of M8
    - M10 = List of network boundary devices with both NetFlow and logging enabled
    - M11 = Count of M10
    - M12 = List of network boundary devices with either NetFlow or logging disabled
    - M13 = Count of M12
    metrics:
    - name: NetFlow Coverage
      metric: ' Ratio of network boundary devices with appropriately configured NetFlow to the total number of network boundary devices'
      calculation: :code:`M3 / M1`
    - name: Logging Coverage
      metric: ' Ratio of network boundary devices with appropriately configured logging to the total number of network boundary devices'
      calculation: :code:`M7 / M1`
    - name: Total Coverage
      metric: ' Ratio of appropriately configured network boundary devices to the total number of network boundary devices'
      calculation: :code:`M11 / M1`
  - name: '12.9: Deploy Application Layer Filtering Proxy Server'
    number: "12.9"
    description: Ensure that all network traffic to or from the Internet passes through an authenticated application layer proxy that is configured to filter unauthorized connections.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized software
    - name: The list of unauthorized connections
    operations:
    - name: Enumerate network devices guarding Internet network boundaries
    - name: Enumerate application-layer proxies
    - name: For each application-layer proxy
    - name: "\tEnumerate the network boundary devices it covers"
    - name: "\tFor each Internet network boundary device it covers"
    - name: "\t\tEnsure it is appropriately configured to filter against the list of unauthorized connections"
    - name: Enumerate the set of covered Internet network boundary devices
    measures:
    - M1 = List of Internet network boundary devices
    - M2 = List of application-layer proxies
    - M3 = List of appropriately configured application-layer proxies
    - M4 = List of inappropriately configured application-layer proxies
    - M5 = List of covered Internet network boundary devices
    - M6 = Count of Internet network boundary devices (count of M1)
    - M7 = Count of application-layer proxies (count of M2)
    - M8 = Count of appropriately configured application-layer proxies (count of M3)
    - M9 = Count of inappropriately configured application-layer proxies (count of M4)
    - M10 = Count of covered Internet network boundary devices (count of M5)
    metrics:
    - name: Proxy Coverage
      metric: ' The ratio of appropriately configured application-layer proxies to the total number of application-layer proxies.'
      calculation: :code:`M8 / M7`
    - name: Internet Network Boundary Coverage
      metric: ' The ratio of covered Internet network boundary devices to the total number of Internet network boundary devices'
      calculation: :code:`M10 / M6`
  - name: '12.10: Decrypt Network Traffic at Proxy'
    number: "12.10"
    description: Decrypt all encrypted network traffic at the boundary proxy prior to analyzing the content.  However, the organization may use whitelists of allowed sites that can be accessed through the proxy without decrypting the traffic.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: The list of authorized software
    - name: The list of authorized sites not requiring decryption before analysis
    operations:
    - name: Enumerate each boundary proxy system
    - name: 'For each identified proxy system, examine its configuration as follows, noting appropriately and inappropriately configured systems:'
    - name: "\tEncrypted network traffic is decrypted prior to analysis, when traffic is not related to an authorized site"
    - name: Enumerate the set of appropriately configured proxy systems
    - name: Enumerate the set of inappropriately configured proxy systems
    measures:
    - M1 = List of boundary proxy systems
    - M2 = List of appropriately configured boundary proxy systems
    - M3 = List of inappropriately configured boundary proxy systems
    - M4 = Count of boundary proxy systems (count of M1)
    - M5 = Count of appropriately configured boundary proxy systems (count of M2)
    - M6 = Count of inappropriately configured boundary proxy systems (count of M3)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured boundary proxy systems to the total number of boundary proxy systems'
      calculation: :code:`M5 / M4`
  - name: '12.11: Require All Remote Logins to Use Multi-Factor Authentication'
    number: "12.11"
    description: Require all remote login access to the organization’s network to encrypt data in transit and use multi-factor authentication.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: List of authorized remote hosts
    operations:
    - name: 'For each host in the list of authorized remote hosts, check the remote access software configuration:'
    - name: "\tEncrypted connections are required"
    - name: "\tMulti-factor authentication is required"
    measures:
    - M1 = Count of authorized remote hosts (from Input 1)
    - M2 = List of authorized remote hosts with encryption required
    - M3 = Count of M2
    - M4 = List of authorized remote hosts without encryption required
    - M5 = Count of M4
    - M6 = List of authorized remote hosts with multi-factor authentication required
    - M7 = Count of M6
    - M8 = List of authorized remote hosts without multi-factor authentication required
    - M9 = Count of M8
    - M10 = List of authorized remote hosts with both encryption and multi-factor authentication required
    - M11 = Count of M10
    - M12 = List of authorized remote hosts without either encryption or multi-factor authentication required
    - M13 = Count of M12
    metrics:
    - name: Encryption Coverage
      metric: ' Ratio of authorized remote hosts with encryption required to the total number of authorized remote hosts'
      calculation: :code:`M3 / M1`
    - name: Multi-Factor Authentication Coverage
      metric: ' Ratio of authorized remote hosts with multi-factor authentication required to the total number of authorized remote hosts'
      calculation: :code:`M7 / M1`
    - name: Total Coverage
      metric: ' Ratio of authorized remote hosts with both encryption and multi-factor authentication required to the total number of authorized remote hosts required'
      calculation: :code:`M11 / M1`
  - name: '12.12: Manage All Devices Remotely Logging Into Internal Network'
    number: "12.12"
    description: Scan all enterprise devices remotely logging into the organization’s network prior to accessing the network to ensure that each of the organization’s security policies has been enforced in the same manner as local network devices.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '16.1: Maintain an Inventory of Authentication Systems'
    inputs:
    - name: List of the organization's authentication systems that allow remote logins (subset of Inventory of Authentication Systems). For each, provide the configuration location(s) for the mechanisms used to ensure remote device security policy enforcement.
    - name: Approved configuration(s) for each type of remote device security policy enforcement mechanism provided in Input 1
    operations:
    - name: For each authentication system in Input 1, check each of the enforcement mechanisms provided for that authentication system against the appropriate approved configuration(s) provided in Input 2.
    - name: "\tCreate a list of those authentication systems for which all of the associated enforcement mechanisms comply with the approved configuration(s) noting which configurations were checked (M1)."
    - name: "\tCreate a list of those authentication systems for which at least one of the associated enforcement mechanisms does not comply with the appropriate configurations, noting the configurations checked and any deviations (M2)."
    measures:
    - M1 = List of authentication systems that have properly configured mechanisms in place to ensure that organizational security policies are enforced in remote devices (compliant list)
    - M2 = List of authentication systems that do not have properly configured mechanisms in place to ensure that organizational security policies are enforced in remote devices (non-compliant list)
    - M3 = Count of authentication systems with properly configured mechanisms in place (count of M1)
    - M4 = The total number of authentication systems that allow remote connections (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of authentication systems with properly configured mechanisms to ensure that organizational security policies are enforced in remote devices to the total number of authentication systems'
      calculation: :code:`M3 / M4`
- name: 'CIS Control 13: Data Protection'
  number: "13"
  description: |-
    The processes and tools used to prevent data exfiltration, mitigate the effects of exfiltrated data,
    and ensure the privacy and integrity of sensitive information.
  why: |-
    Data resides in many places. Protection of that data is best achieved through the application
    of a combination of encryption, integrity protection, and data loss prevention techniques. As
    organizations continue their move towards cloud computing and mobile access, it is important
    that proper care be taken to limit and report on data exfiltration while also mitigating the effects
    of data compromise.

    Some organizations do not carefully identify and separate their most sensitive and critical
    assets from less sensitive, publicly accessible information on their internal networks. In many
    environments, internal users have access to all or most of the critical assets. Sensitive assets
    may also include systems that provide management and control of physical systems, such as
    Supervisory Control and Data Acquisition (SCADA). Once attackers have penetrated such a
    network, they can easily find and exfiltrate important information, cause physical damage, or
    disrupt operations with little resistance. For example, in several high-profile breaches over the
    past few years, attackers were able to gain access to sensitive data stored on the same servers
    with the same level of access as far less important data. There are also examples of using access to
    the corporate network to gain access to, then control over, physical assets and cause damage.
  subcontrols:
  - name: '13.1: Maintain an Inventory of Sensitive Information'
    number: "13.1"
    description: Maintain an inventory of all sensitive information stored, processed, or transmitted by the organization’s technology systems, including those located on-site or at a remote service provider.
    header:
      assetType: Data
      securityFunction: Identify
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    inputs:
    - name: 'Classification Scheme: The organizationally-defined classification scheme'
    - name: The data set of sensitive information for which the organization is responsible, mapped to the classification scheme defined by Input 1
    - name: A mapping of an organization's endpoints/systems containing sensitive information classified by Input 2 (ideally using the endpoint inventory; see sub-control 1.4)
    operations:
    - name: Create the mappings of information deemed "sensitive" to the organization to the organization's classification scheme.
    - name: Create the mappings of classified, sensitive information to the endpoints/systems on which that information is stored
    measures:
    - M1 = 1 if the mappings of "sensitive" information to the organization's classification scheme is provided; 0 otherwise
    - M2 = 1 if the mappings of classified, sensitive information to the endpoints/systems on which it resides is provided; 0 otherwise
    metrics:
    - name: Existence
      metric: ' Ensure the inventory of all sensitive information, cross-referenced with the systems on which that information is kept, exists.'
      calculation: :code:`M1 AND M2`
  - name: '13.2: Remove Sensitive Data or Systems Not Regularly Accessed by Organization'
    number: "13.2"
    description: Remove sensitive data or systems not regularly accessed by the organization from the network.  These systems shall only be used as stand-alone systems (disconnected from the network) by the business unit needing to occasionally use the system or completely virtualized and powered off until needed.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '13.1: Maintain an Inventory of Sensitive Information'
    inputs:
    - name: List of sensitive systems (ideally using the endpoint inventory; see sub-control 1.4)
    - name: The access frequency for any sensitive systems
    - name: An organizationally-defined access frequency threshold
    operations:
    - name: Determine subset of sensitive systems that are infrequently used (using all Inputs)
    - name: For each infrequently used sensitive system, calculate isolation/exposure
    measures:
    - M1 = List of all systems used to process sensitive information
    - M2 = Count of M1
    - M3 = Set of infrequently used sensitive systems
    - M4 = Count of infrequently used sensitive systems
    - M5 = List of infrequently used sensitive systems with isolation/exposure scores greater than 0
    - M6 = Count of M4
    metrics:
    - name: Coverage
      metric: ' What percentage of infrequently used sensitive systems are not properly isolated?'
      calculation: :code:`M6 / M4`
  - name: '13.3: Monitor and Block Unauthorized Network Traffic'
    number: "13.3"
    description: Deploy an automated tool on network perimeters that monitors for unauthorized transfer of sensitive information and blocks such transfers while alerting information security professionals.
    header:
      assetType: Data
      securityFunction: Detect
      implementationGroups:
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    - '12.1: Maintain an Inventory of Network Boundaries'
    inputs:
    - name: The list of authorized software
    - name: The list of network perimeters
    operations:
    - name: Enumerate all network perimeter monitoring systems
    - name: 'For each network perimeter monitoring system:'
    - name: "\tEnumerate the network perimeters covered by the system"
    - name: "\tExamine its configuration to ensure that the system is configured to:"
    - name: "\t\tMonitor for sensitive information"
    - name: "\t\tBlock transfer of detected sensitive information"
    - name: "\t\tAlert appropriately"
    - name: Enumerate network perimeters covered by all network perimeter monitoring systems
    - name: Complement the set of covered network perimeters with the list of network perimeters to identify all uncovered network perimeters
    measures:
    - M1 = List of network perimeter monitoring systems
    - M2 = List of network perimeters
    - M3 = List of appropriately configured perimeter monitoring systems
    - M4 = List of inappropriately configured perimeter monitoring systems
    - M5 = List of network perimeters covered by at least one network perimeter monitoring system
    - M6 = List of network perimeters not covered by at least one network perimeter monitoring system
    - M7 = Count of network perimeter monitoring systems (count of M1)
    - M8 = Count of network perimeters (count of M2)
    - M9 = Count of appropriately configured perimeter monitoring systems (count of M3)
    - M10 = Count of inappropriately configured perimeter monitoring systems (count of M4)
    - M11 = Count of network perimeters covered by at least one network perimeter monitoring system (count of M5)
    - M12 = Count of network perimeters not covered by at least one network perimeter monitoring system (count of M6)
    metrics:
    - name: Coverage
      metric: ' The ratio of covered network perimeters to the total number of network perimeters'
      calculation: :code:`M11 / M8`
    - name: Perimeter Monitoring Configuration Coverage
      metric: ' The ratio of appropriately configured network perimeter monitoring systems to the total number of network perimeter monitoring systems'
      calculation: :code:`M9 / M7`
  - name: '13.4: Only Allow Access to Authorized Cloud Storage or Email Providers'
    number: "13.4"
    description: Only allow access to authorized cloud storage or email providers.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: List of endpoints. For each, include the configuration locations that restrict which cloud providers the endpoint can access (this could be a firewall, etc.)
    - name: List of cloud storage providers (this list should be as complete as possible and should indicate whether each provider is allowed or prohibited)
    - name: List of cloud email providers (this list should be as complete as possible and should indicate whether each provider is allowed or prohibited)
    - name: Organization's security policy regarding access to cloud storage and cloud email providers, including a list of which ones are allowed
    operations:
    - name: For each of the endpoint configuration locations identified in Input 1, identify which of the cloud storage providers from Input 2 are reachable based on the configuration at that location, creating a list of reachable cloud storage providers by configuration location (M1). Mark each of the configuration locations in the list as either compliant (if it does not allow access to prohibited cloud storage providers), or non-compliant (if it allows access to at least one of the prohibited cloud storage providers).
    - name: For each of the endpoint configuration locations identified in Input 1, identify which of the cloud email providers from Input 3 are reachable based on the configuration at that location, creating a list of reachable cloud email providers by configuration location (M2). Mark each of the configuration locations in the list as either compliant (if it does not allow access to prohibited cloud storage providers), or non-compliant (if it allows access to at least one of the prohibited cloud storage providers).
    - name: For each endpoint in Input 1, check the status of each of that endpoint's configuration locations in M1 and M2, and create a count of the endpoints that have configuration locations that are all compliant (M3).
    - name: Manually review the organization's security policy provided in Input 4 to ensure that it properly outlines the organization's rules for accessing cloud storage and cloud email providers, including identifying which providers are allowed and which are prohibited. Score this review as M5 (could be a binary 1 for adequate, 0 for inadequate; or a more nuanced score could be generated).
    measures:
    - M1 = List of reachable cloud storage providers by configuration location
    - M2 = List of reachable cloud email providers by configuration location
    - M3 = Count of endpoints for which all their configuration locations are compliant
    - M4 = Count of endpoints (count of Input 1)
    - M5 = Score resulting from the manual review of the cloud provider access policy
    metrics:
    - name: Coverage
      metric: ' Ratio of endpoints with cloud provider access properly limited to the total number of endpoints'
      calculation: :code:`M3 / M4`
    - name: Manual Review
      metric: ' Manual policy review included for this Sub-Control because it is not feasible to identify (and therefore check for) all cloud storage and email providers.'
      calculation: :code:`M5`
  - name: '13.5: Monitor and Detect Any Unauthorized Use of Encryption'
    number: "13.5"
    description: Monitor all traffic leaving the organization and detect any unauthorized use of encryption.
    header:
      assetType: Data
      securityFunction: Detect
      implementationGroups:
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    - '12.1: Maintain an Inventory of Network Boundaries'
    inputs:
    - name: The list of authorized software
    - name: The list of network boundaries at the organization's perimeter
    - name: Unauthorized encrypted connections
    operations:
    - name: Enumerate all network monitoring systems in the software inventory
    - name: For each network monitoring system
    - name: "\tEnumerate the network boundaries covered by the system"
    - name: "\tExamine its configuration to ensure that the system is configured to monitor for unauthorized encrypted connections"
    - name: Enumerate network boundaries covered by all network monitoring systems (i.e. create a set of covered network boundaries)
    - name: Complement the set of covered network boundaries with the list of network boundaries to identify all uncovered network boundaries
    measures:
    - M1 = List of all network monitoring systems
    - M2 = List of network boundaries at the perimeter
    - M3 = List of appropriately configured network monitoring systems
    - M4 = List of inappropriately configured network monitoring systems
    - M5 = List of network boundaries covered by at least one network monitoring system
    - M6 = List of network boundaries not covered by at least one network monitoring system
    - M7 = Count of network monitoring systems (count of M1)
    - M8 = Count of network boundaries at the perimeter (count of M2)
    - M9 = Count of appropriately configured network monitoring systems (count of M3)
    - M10 = Count of inappropriately configured network monitoring systems (count of M4)
    - M11 = Count of network boundaries covered by at least one network monitoring system (count of M5)
    - M12 = Count of network boundaries not covered by at least one network monitoring system (count of M6)
    metrics:
    - name: Network Monitoring Coverage
      metric: ' The ratio of appropriately configured network monitoring systems to the total number of network monitoring systems'
      calculation: :code:`M9 / M7`
    - name: Network Boundary Coverage
      metric: ' The ratio of covered network boundaries to the total number of network boundaries'
      calculation: :code:`M11 / M8`
  - name: '13.6: Encrypt Mobile Device Data'
    number: "13.6"
    description: Utilize approved cryptographic mechanisms to protect enterprise data stored on all mobile devices.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain an Inventory of Authorized Software'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The list of approved mobile devices (derived from endpoint inventory; sub-control 1.4)
    - name: The list of approved mobile device encryption software  (ideally derived from authorized software list; sub-control 2.1)
    - name: For each software in Input 2, the approved software configuration policy.
    operations:
    - name: For each mobile device in Input 1, determine if any of the approved encryption software from Input 2 is installed.
    - name: For each mobile device with installed approved encryption software, collect the software configuration information and compare it to the approved configuration policy (Input 3).
    measures:
    - M1 = List of approved mobile devices
    - M2 = Count of M1
    - M3 = List of approved mobile devices with approved encryption software installed
    - M4 = Count of M3
    - M5 = List of approved mobile devices without approved encryption software installed
    - M6 = Count of M5
    - M7 = List of appropriately configured mobile devices
    - M8 = Count of M7
    - M9 = List of inappropriately configured mobile devices
    - M10 = Count of M9
    metrics:
    - name: Installed Software Coverage
      metric: ' What percentage of approved mobile devices are equipped with approved encryption software?'
      calculation: :code:`M4 / M2`
    - name: Appropriately Configured Devices
      metric: ' What percentage of approved mobile devices equipped with approved encryption software meet or exceed the approved configuration policy?'
      calculation: :code:`M8 / M2`
  - name: '13.7: Manage USB Devices'
    number: "13.7"
    description: If USB storage devices are required, enterprise software should be used that can configure systems to allow the use of specific devices.  An inventory of such devices should be maintained.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized USB storage devices
    - name: Enterprise software which can configure systems to allow the use of specific devices
    operations:
    - name: For each endpoint "i", determine if the software specified by Input 3 is installed (M2(i))
    - name: For each endpoint "i", collect the whitelist of USB devices allowed for use (M3(i))
    - name: For each endpoint's whitelist, calculate the intersection with the authorized USB device inventory from Input 2. The "right-side" of the calculation indicates USB devices on the endpoint's whitelist which are not contained in the authorized USB device inventory.
    measures:
    - M1 = Count of endpoints
    - M2(i) = (For each endpoint "i") 1 if Operation 1 indicates the appropriate software is installed on device "i"; 0 otherwise
    - M3 = (For each endpoint) The number of USB devices allowed
    - M4 = (For each endpoint) The number of USB devices contained in the whitelist which are not in the authorized USB device inventory
    - M5(i) = (For each endpoint "i") 1 if M4 > 0 for device "i"; 0 otherwise
    metrics:
    - name: Whitelisting Software Coverage
      metric: ' The ratio of endpoints with whitelisting software installed to the total number of endpoints.'
      calculation: :code:`(SUM from i=1..M1 (M2(i))) / M1`
    - name: Non-Inventoried but Whitelisted
      metric: ' The ratio of endpoints with non-inventories but whitelisted USB device allowance to the total number of endpoints.'
      calculation: :code:`(SUM from i=1..M1 (M5(i))) / M1`
    - name: Full Coverage
      metric: ' The ratio of endpoints with inventoried USB storage device capability and USB whitelisting software installed to the total number of endpoints.'
      calculation: :code:`(SUM from i=1..M1 (M2(i) * M5(i))) / M1`
  - name: '13.8: Manage System’s External Removable Media’s Read/Write Configurations'
    number: "13.8"
    description: Configure systems not to write data to external removable media, if there is no business need for supporting such devices.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    operations:
    - name: Enumerate all endpoints supporting external removable media
    - name: Enumerate all endpoints with a business need to support external removable media
    - name: Enumerate all endpoints without a business need to support external removable media
    - name: For each endpoint without a business need to support external removable media, examine its external media configuration, noting whether it is appropriately or inappropriately configured
    - name: Enumerate the inappropriately configured endpoints
    - name: Enumerate the appropriately configured endpoints
    measures:
    - M1 = List of all endpoints supporting external removable media
    - M2 = List of all endpoints with a business need to support external removable media
    - M3 = List of all endpoints without a business need to support external removable media
    - M4 = List of appropriately configured endpoints without a need to support external removable media
    - M5 = List of inappropriately configured endpoints without a need to support external removable media
    - M6 = Count of endpoints supporting external removable media (count of M1)
    - M7 = Count of endpoints with a business need to support external removable media (count of M2)
    - M8 = Count of endpoints without a business need to support external removable media (count of M3)
    - M9 = Count of appropriately configured endpoints without a need to support external removable media (count of M4)
    - M10 = Count of inappropriately configured endpoints without a need to support external removable media (count of M5)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured endpoints to the total number of endpoints without a business need to support external removable media'
      calculation: :code:`M9 / M8`
  - name: '13.9: Encrypt Data on USB Storage Devices'
    number: "13.9"
    description: If USB storage devices are required, all data stored on such devices must be encrypted while at rest.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    operations:
    - name: Enumerate all endpoints capable of supporting USB storage devices
    - name: For each identified endpoint
    - name: "\tExamine the endpoint's configuration to determine its USB storage device encryption configuration, noting along the way those that are appropriately and inappropriately configured"
    measures:
    - M1 = List of endpoints capable of supporting USB storage devices
    - M2 = List of endpoints appropriately configured
    - M3 = List of endpoints inappropriately configured
    - M4 = Count of endpoints capable of supporting USB storage devices (count of M1)
    - M5 = Count of endpoints appropriately configured (count of M2)
    - M6 = Count of endpoints inappropriately configured (count of M3)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured endpoints to the total number of endpoints supporting USB storage devices'
      calculation: :code:`M5 / M4`
- name: 'CIS Control 14: Controlled Access Based on the Need to Know'
  number: "14"
  description: |-
    The processes and tools used to track/control/prevent/correct secure access to critical assets
    (e.g., information, resources, systems) according to the formal determination of which persons,
    computers, and applications have a need and right to access these critical assets based on an
    approved classification.
  why: |-
    Encrypting data provides a level of assurance that even if data is compromised, it is impractical to
    access the plaintext without significant resources; however, controls should also be put in place
    to mitigate the threat of data exfiltration in the first place. Many attacks occurred across the
    network, while others involved physical theft of laptops and other equipment holding sensitive
    information. Yet, in many cases, the victims were not aware that the sensitive data were leaving
    their systems because they were not monitoring data outflows. The movement of data across
    network boundaries both electronically and physically must be carefully scrutinized to minimize
    its exposure to attackers.

    The loss of control over protected or sensitive data by organizations is a serious threat to business
    operations and a potential threat to national security. While some data are leaked or lost as a
    result of theft or espionage, the vast majority of these problems result from poorly understood
    data practices, a lack of effective policy architectures, and user error. Data loss can even occur as
    a result of legitimate activities such as e-Discovery during litigation, particularly when records
    retention practices are ineffective or nonexistent.

    The adoption of data encryption, both in transit and at rest, provides mitigation against data
    compromise. This is true if proper care has been taken in the processes and technologies
    associated with the encryption operations. An example of this is the management of
    cryptographic keys used by the various algorithms that protect data. The process for generation,
    use, and destruction of keys should be based on proven processes as defined in standards such as
    NIST SP 800-57.

    Care should also be taken to ensure that products used within an enterprise implement well
    known and vetted cryptographic algorithms, as identified by NIST. Re-evaluation of the algorithms
    and key sizes used within the enterprise on an annual basis is also recommended to ensure that
    organizations are not falling behind in the strength of protection applied to their data.

    For organizations that are moving data to the cloud, it is important to understand the security
    controls applied to data in the cloud multi-tenant environment, and determine the best course of
    action for application of encryption controls and security of keys. When possible, keys should be
    stored within secure containers such as Hardware Security Modules (HSMs).

    Data loss prevention (DLP) refers to a comprehensive approach covering people, processes, and
    systems that identify, monitor, and protect data in use (e.g., endpoint actions), data in motion
    (e.g., network actions), and data at rest (e.g., data storage) through deep content inspection
    and with a centralized management framework. Over the last several years, there has been a
    noticeable shift in attention and investment from securing the network to securing systems
    within the network, and to securing the data itself. DLP controls are based on policy, and include
    classifying sensitive data, discovering that data across an enterprise, enforcing controls, and
    reporting and auditing to ensure policy compliance.
  subcontrols:
  - name: '14.1: Segment the Network Based on Sensitivity'
    number: "14.1"
    description: Segment the network based on the label or classification level of the information stored on the servers, locate all sensitive information on separated Virtual Local Area Networks (VLANs).
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '13.1: Maintain an Inventory of Sensitive Information'
    inputs:
    - name: Sensitive Information Inventory including which systems store, process, or transmit that sensitive information.
    - name: Network Architecture information outlining network separation including VLANs
    operations:
    - name: 'For each system that stores, processes, or transmits sensitive information identified in Input 1, use the information in Input 2 to identify any networks/VLANs the system is connected to and ensure that each of those networks/VLANs are adequately separated from less sensitive networks (note: this might be a manual review).'
    - name: Use these results to create a list of systems that are adequately separated from less sensitive networks (M1)
    - name: Use these results to create a list of systems that are not adequately separated (M2) noting the less sensitive networks that they are connected to.
    measures:
    - M1 = List of sensitive systems that are adequately separated from less sensitive networks (compliant list)
    - M2 = List of sensitive systems that are not adequately separated from less sensitive networks (non-compliant list)
    - M3 = Count of sensitive systems that are adequately separated from less sensitive networks (count of M1)
    - M4 = Total count of sensitive systems (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of adequately separated sensitive systems to the total number of sensitive systems.'
      calculation: :code:`M3 / M4`
  - name: '14.2: Enable Firewall Filtering Between VLANs'
    number: "14.2"
    description: Enable firewall filtering between VLANs to ensure that only authorized systems are able to communicate with other systems necessary to fulfill their specific responsibilities.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of the organization's VLANs, along with the systems (network devices, etc.) associated with administering, configuring, and filtering between them
    - name: Approved configuration(s) for these VLANs and related systems to enable firewall filtering between VLANs
    operations:
    - name: For each VLAN in Input 1, check each of its related systems to see if they are configured in accordance with the appropriate approved configurations from Input 2 to enable firewall filtering between VLANs.
    - name: Create a list of VLANs that are correctly configured (M1)
    - name: Create a list of VLANs that are not correctly configured (M2) noting which related systems are misconfigured and the details of the misconfiguration.
    measures:
    - M1 = List of correctly configured VLANs (compliant list)
    - M2 = List of incorrectly configured VLANs along with deviations (non-compliant list)
    - M3 = Count of correctly configured VLANs (count of M1)
    - M4 = Total count of VLANs (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of VLANs properly configured for firewall filtering to the total number of VLANs.'
      calculation: :code:`M3 / M4`
  - name: '14.3: Disable Workstation-to-Workstation Communication'
    number: "14.3"
    description: Disable all workstation-to-workstation communication to limit an attacker’s ability to move laterally and compromise neighboring systems, through technologies such as private VLANs or micro segmentation.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints.  For each endpoint, include the corresponding policy configuration locations that are used to restrict workstation to workstation communication (network device configurations, workstation configurations, virtual network configurations, etc.)
    - name: Approved configuration(s) for each type of configuration in Input 1
    operations:
    - name: For each endpoint, check each corresponding policy configuration location specified in Input 1, comparing the configuration at that location against the appropriate configurations provided in Input 2.
    - name: Create a list of endpoints for which all of the endpoint's corresponding policy configuration points are configured in accordance with the approved configurations (M1), noting the approved configurations that were used for each.
    - name: Create a list of the endpoints that have at least one policy configuration points that is not configured appropriately (M2) noting the deviations from the approved configurations.
    measures:
    - M1 = List of endpoints with all workstation to workstation policy configuration points configured appropriately (compliant list)
    - M2 = List of endpoints with at least one misconfigured workstation to workstation policy configuration point (non-compliant list)
    - M3 = Count of endpoints with all policy configuration points configured appropriately (count of M1)
    - M4 = Total count of endpoints (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of endpoints correctly configured to restrict workstation to workstation communication to the total number of endpoints.'
      calculation: :code:`M3 / M4`
  - name: '14.4: Encrypt All Sensitive Information in Transit'
    number: "14.4"
    description: Encrypt all sensitive information in transit.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '13.1: Maintain an Inventory of Sensitive Information'
    inputs:
    - name: Inventory of Sensitive Information (for each type of information listed in the inventory, include a description of how the encryption of this information in transit is accomplished, along with a list of the components used to achieve that encryption)
    - name: Approved configuration(s) for each of the components identified in Input 1
    operations:
    - name: For each type of sensitive information listed in the inventory provided in Input 1, check each of the components used to encrypt that information in transit against the appropriate approved configuration(s) in Input 2.
    - name: Create a list of the sensitive information types for which all of the associated components are properly configured (M1) noting which configurations they were checked against.
    - name: Create a list of sensitive information types for which at least one of the associated components was not properly configured (M2) noting which configurations they were checked against and any deviations from the approved configurations.
    measures:
    - M1 = List of sensitive information types for which all associated components were properly configured (compliant list)
    - M2 = List of sensitive information types for which at least one associated component was not properly configured (non-compliant list)
    - M3 = Count of compliant sensitive information types (count of M1)
    - M4 = Total count of sensitive information types (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of sensitive information types properly configured to be encrypted in transit to the total set of sensitive information types.'
      calculation: :code:`M3 / M4`
  - name: '14.5: Utilize an Active Discovery Tool to Identify Sensitive Data'
    number: "14.5"
    description: Utilize an active discovery tool to identify all sensitive information stored, processed, or transmitted by the organization’s technology systems, including those located on-site or at a remote service provider, and update the organization’s sensitive information inventory.
    header:
      assetType: Data
      securityFunction: Detect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized software
    - name: The inventory of sensitive data
    operations:
    - name: Using the sensitive data inventory, enumerate all endpoints storing, processing, or transmitting sensitive information.
    - name: Enumerate all sensitive information active monitoring tools from the software inventory
    - name: 'For each identified active monitoring tool:'
    - name: "\tEnumerate the endpoints covered by the system"
    - name: "\tExamine its configuration to ensure that the system is configured to:"
    - name: "\t\tMonitor for sensitive information (noting appropriately and inappropriately configured systems along the way)"
    - name: Enumerate endpoints covered by all sensitive information active monitoring systems
    - name: Complement the set of covered endpoints with the list of identified endpoints to identify all uncovered endpoints
    measures:
    - M1 = List of endpoints storing, processing, or transmitting sensitive information
    - M2 = List of sensitive information monitoring tools
    - M3 = List of monitoring tools appropriately configured
    - M4 = List of monitoring tools inappropriately configured
    - M5 = List of endpoints covered by at least one monitoring tool
    - M6 = List of endpoints not covered by at least one monitoring tool
    - M7 = Count of endpoints storing, processing, or transmitting sensitive information (count of M1)
    - M8 = Count of sensitive information monitoring tools (count of M2)
    - M9 = Count of monitoring tools appropriately configured (count of M3)
    - M10 = Count of monitoring tools inappropriately configured (count of M4)
    - M11 = Count of endpoints covered by at least one monitoring tool (count of M5)
    - M12 = Count of endpoints not covered by at least one monitoring tool (count of M6)
    metrics:
    - name: Endpoint Coverage
      metric: ' The ratio of covered endpoints to the total number of endpoints storing, processing, or transmitting sensitive information'
      calculation: :code:`M11 / M7`
    - name: Monitoring Coverage
      metric: ' The ratio of appropriately configured active sensitive information monitoring tools to the total number of active sensitive information monitoring tools'
      calculation: :code:`M9 / M8`
  - name: '14.6: Protect Information Through Access Control Lists'
    number: "14.6"
    description: Protect all information stored on systems with file system, network share, claims, application, or database specific access control lists.  These controls will enforce the principle that only authorized individuals should have access to the information based on their need to access the information as a part of their responsibilities.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: Endpoint Inventory
    - name: Access control configuration policy
    operations:
    - name: For each endpoint in Input 1, collect the "ground truth" access policy for that endpoint and compare it to the access control configuration policy in Input 2. Generate a list of endpoints which comply with the specified access control configuration policy (M1) and a list of endpoints that do not comply with the specified policy (M2)
    measures:
    - M1 = List of endpoints that comply with access control configuration policy (compliant list)
    - M2 = List of endpoints that do not comply with access control configuration policy (non-compliant list)
    - M3 = Count of endpoints in M1 (number of compliant endpoints)
    - M4 = Count of endpoints in M2 (number of non-compliant endpoints)
    - M5 = Count of endpoints in Input 1 (total number of endpoints to check)
    metrics:
    - name: Coverage
      metric: ' What is the percentage of endpoints which are compliant with the organization''s access control policy?'
      calculation: :code:`M3 / M5`
  - name: '14.7: Enforce Access Control to Data Through Automated Tools'
    number: "14.7"
    description: Use an automated tool, such as host-based Data Loss Prevention, to enforce access controls to data even when the data is copied off a system.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized software
    operations:
    - name: Enumerate endpoints capable of storing data
    - name: Enumerate all DLP software
    - name: 'For each instance of DLP software:'
    - name: "\tEnumerate the endpoints covered by the DLP software"
    - name: Enumerate all endpoints covered by the set of DLP software
    - name: Complement the list of covered endpoints with the list of endpoints enumerated in the first operation to get the enumeration of endpoints not covered
    measures:
    - M1 = List of endpoints capable of storing data
    - M2 = List of DLP software instances
    - M3 = List of all endpoints covered by the set of DLP software
    - M4 = List of all endpoints not covered by the set of DLP software
    - M5 = Count of endpoints capable of storing data (count of M1)
    - M6 = Count of DLP software instances (count of M2)
    - M7 = Count of endpoints covered by the set of DLP software (count of M3)
    - M8 = Count of endpoints not covered by the set of DLP software (count of M4)
    metrics:
    - name: Coverage
      metric: ' The ratio of endpoints covered by at least one DLP software instance to the total number of endpoints capable of storing data'
      calculation: :code:`M7 / M5`
  - name: '14.8: Encrypt Sensitive Information at Rest'
    number: "14.8"
    description: Encrypt all sensitive information at rest using a tool that requires a secondary authentication mechanism not integrated into the operating system, in order to access the information.
    header:
      assetType: Data
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized software
    - name: The list of sensitive information
    operations:
    - name: Enumerate all encryption tools requiring secondary authentication systems from the software inventory
    - name: Enumerate all endpoints storing sensitive information using the sensitive information inventory
    - name: For each identified encryption tool
    - name: "\tEnumerate endpoints covered by the encryption tool"
    - name: Enumerate all endpoints covered by at least one encryption tool
    - name: Complement all covered endpoints with the enumeration of all endpoints storing sensitive information to find those endpoints not covered by at least one encryption tool
    - name: ""
    measures:
    - M1 = List of all encryption tools that require secondary authentication
    - M2 = List of all endpoints storing sensitive information
    - M3 = List of all endpoints covered by at least one encryption tool
    - M4 = List of all endpoints not covered by at least one encryption tool
    - M5 = Count of encryption tools that require secondary authentication (count of M1)
    - M6 = Count of endpoints storing sensitive information (count of M2)
    - M7 = Count of endpoints covered by at least one encryption tool (count of M3)
    - M8 = Count of endpoints not covered by at least one encryption tool (count of M4)
    - ""
    metrics:
    - name: Coverage
      metric: ' The ratio of endpoints covered by an encryption tool to the total number of endpoints storing sensitive information'
      calculation: :code:`M7 / M6`
  - name: '14.9: Enforce Detail Logging for Access or Changes to Sensitive Data'
    number: "14.9"
    description: Enforce detailed audit logging for access to sensitive data or changes to sensitive data (utilizing tools such as File Integrity Monitoring or Security Information and Event Monitoring).
    header:
      assetType: Data
      securityFunction: Detect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized software
    - name: The list of sensitive information
    operations:
    - name: Enumerate all endpoints storing sensitive information using the endpoint inventory and the sensitive information inventory
    - name: 'For each identified endpoint, examine its configuration as follows noting appropriately and inappropriately configured endpoints along the way:'
    - name: "\tDetailed audit logging is enabled for access to sensitive data"
    - name: "\tDetailed audit logging is enabled for changes to sensitive data"
    - name: Enumerate appropriately configured endpoints
    - name: Enumerate inappropriately configured endpoints
    - name: Enumerate endpoints inappropriately configured to log access to sensitive data
    - name: Enumerate endpoints inappropriately configured to log changes to sensitive data
    measures:
    - M1 = List of all endpoints storing sensitive information
    - M2 = List of appropriately configured endpoints (those that have detailed audit logging enabled for access and changes to sensitive data)
    - M3 = List of inappropriately configured endpoints (those that do not have detailed audit logging enabled for access or changes to sensitive data)
    - M4 = List of endpoints inappropriately configured to log access to sensitive data
    - M5 = List of endpoints inappropriately configured to log changes to sensitive data
    - M6 = Count of endpoints storing sensitive information (count of M1)
    - M7 = Count of appropriately configured endpoints (count of M2)
    - M8 = Count of inappropriately configured endpoints (count of M3)
    - M9 = Count of endpoints inappropriately configured to log access to sensitive data (count of M4)
    - M10 = Count of endpoints inappropriately configured to log changes to sensitive data (count of M5)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured endpoints to the total number of endpoints storing sensitive information'
      calculation: :code:`M7 / M6`
- name: 'CIS Control 15: Wireless Access Control'
  number: "15"
  description: |-
    The processes and tools used to track/control/prevent/correct the secure use of wireless local area
    networks (WLANs), access points, and wireless client systems.
  why: |-
    Major thefts of data have been initiated by attackers who have gained wireless access to
    organizations from outside the physical building, bypassing organizations’ security perimeters
    by connecting wirelessly to access points inside the organization. Wireless clients accompanying
    travelers are infected on a regular basis through remote exploitation while on public wireless
    networks found in airports and cafes. Such exploited systems are then used as backdoors when
    they are reconnected to the network of a target organization. Other organizations have reported
    the discovery of unauthorized wireless access points on their networks, planted and sometimes
    hidden for unrestricted access to an internal network. Because they do not require direct physical
    connections, wireless devices are a convenient vector for attackers to maintain long-term access
    into a target environment.
  subcontrols:
  - name: '15.1: Maintain an Inventory of Authorized Wireless Access Points'
    number: "15.1"
    description: Maintain an inventory of authorized wireless access points connected to the wired network.
    header:
      assetType: Network
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of wireless access points
    operations:
    - name: Utilize a discovery tool or process to examine the network topology to collect the "ground truth" list of wireless access points connected to the wired network.
    - name: Evaluate the complement of Input 1 and Operation 1 to obtain the list of non-inventoried wireless access points.
    - name: Evaluate the intersection of Input 1 and Operation 1 to obtain the list of inventoried wireless access points.
    - name: Compare the results of Operation 3 to the inventory to determine which access points in the inventory are noted as *not* authorized.
    measures:
    - M1 = Count of wireless access points in the inventory (from Input 1)
    - M2 = List of discovered wireless access points, from Operation 1
    - M3 = Count of M2
    - M4 = List of non-inventoried wireless access points, as discovered by Operation 2
    - M5 = Count of M4
    - M6 = List of inventoried wireless access points, as discovered by Operation 3
    - M7 = Count of M6
    - M8 = List of discovered, but unauthorized, wireless access points, as discovered by Operation 4
    - M9 = Count of M8
    metrics:
    - name: Coverage
      metric: ' The ratio of discovered wireless access points to the total inventoried list of wireless access points.'
      calculation: :code:`(M3 - M1) / M1`
    - name: Inventory Gap
      metric: ' Are there any discovered wireless access points that are *not* contained in the inventory?'
      calculation: :code:`M5 > 0`
    - name: Unauthorized Usage
      metric: ' Are there any discovered wireless access points which are contained in the inventory but are noted as *not* authorized?'
      calculation: :code:`M9 > 0`
  - name: '15.2: Detect Wireless Access Points Connected to the Wired Network'
    number: "15.2"
    description: Configure network vulnerability scanning tools to detect and alert on unauthorized wireless access points connected to the wired network.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: The list of network vulnerability scanning tools
    - name: Approved configuration(s) for detecting unauthorized wireless access points (WAPs)
    - name: Approved configuration(s) for alerting on unauthorized wireless access points (WAPs)
    operations:
    - name: For each network vulnerability scanning tool in Input 1, check its configuration against the appropriate approved detection configuration in Input 2.
    - name: Make a list of those network vulnerability scanning tools that are configured correctly for detecting unauthorized WAPs (M1)
    - name: Make a list of those that are not configured correctly (M2) noting the deviations.
    - name: For each network vulnerability scanning tool in Input 1, check its configuration against the appropriate approved alerting configuration in Input 3.
    - name: Make a list of those network vulnerability scanning tools that are configured correctly for alerting on unauthorized WAPs (M3)
    - name: Make a list of those that are not configured correctly (M4) noting the deviations.
    measures:
    - M1 = List of network vulnerability scanning tools correctly configured for detecting unauthorized WAPs
    - M2 = List of network vulnerability scanning tools not correctly configured for detecting unauthorized WAPs
    - M3 = List of network vulnerability scanning tools correctly configured for alerting on unauthorized WAPs
    - M4 = List of network vulnerability scanning tools not correctly configured for alerting on unauthorized WAPs
    - M5 = Count of network vulnerability scanning tools correctly configured for detecting unauthorized WAPs (count of M1)
    - M6 = Count of network vulnerability scanning tools correctly configured for alerting on unauthorized WAPs (count of M3)
    - M7 = Total count of network vulnerability scanning tools (count of Input 1)
    - M8 = List of network vulnerability scanning tools correctly configured for both detecting and alerting on unauthorized WAPs (intersection of M1 and M3)
    - M9 = Count of network vulnerability scanning tools correctly configured for both detecting and alerting on unauthorized WAPs (count of M8)
    metrics:
    - name: Detection Coverage
      metric: ' The ratio of network vulnerability scanning tools correctly configured for detecting unauthorized WAPs'
      calculation: :code:`M5 / M7`
    - name: Alerting Coverage
      metric: ' The ratio of network vulnerability scanning tools correctly configured for alerting on unauthorized WAPs'
      calculation: :code:`M6 / M7`
    - name: Full Coverage
      metric: ' The ratio of network vulnerability scanning tools correctly configured for both detecting and alerting on unauthorized WAPs'
      calculation: :code:`M9 / M7`
  - name: '15.3: Use a Wireless Intrusion Detection System'
    number: "15.3"
    description: Use a wireless intrusion detection system (WIDS) to detect and alert on unauthorized wireless access points connected to the network.
    header:
      assetType: Network
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of approved wireless access points connected to the network
    - name: The list of WIDS sensors
    operations:
    - name: For each WIDS sensor, enumerate the approved wireless access points covered
    measures:
    - M1 - Count of approved wireless access points (from Input 1)
    - M2 - Count of WIDS sensors (from Input 2)
    - M3 = List of approved wireless access points covered by WIDS sensors
    - M4 = Count of M3
    - M5 = List of approved wireless access points not covered by WIDS sensors
    - M6 = Count of M5
    metrics:
    - name: Coverage
      metric: ' Ratio of wireless access points covered by WIDS sensors to the total number of wireless access points'
      calculation: :code:`M4 / M1`
  - name: '15.4: Disable Wireless Access on Devices if Not Required'
    number: "15.4"
    description: Disable wireless access on devices that do not have a business purpose for wireless access.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    operations:
    - name: Enumerate all wireless-access-capable endpoints
    - name: 'For each identified endpoint:'
    - name: "\tDetermine whether the device has an identified business purpose for wireless access"
    - name: "\tExamine the endpoint's configuration to determine whether wireless access is enabled"
    - name: Enumerate all endpoints with wireless access enabled and without an identified business purpose for wireless access
    - name: Enumerate all endpoints without wireless access enabled and without an identified business purpose for wireless access
    - name: Enumerate all endpoints with wireless access enabled and with an identified business purpose for wireless access
    measures:
    - M1 = List of all wireless-access-capable endpoints
    - M2 = List of endpoints with wireless access enabled and without an identified business purpose for wireless access
    - M3 = List of endpoints without wireless access enabled and without an identified business purpose
    - M4 = List of endpoints with wireless access enabled and with an identified business purpose for wireless access
    - M5 = Count of wireless-access-capable endpoints (count of M1)
    - M6 = Count of endpoints with wireless access enabled and without an identified business purpose for wireless access (count of M2)
    - M7 = Count of endpoints without wireless access enabled and without an identified business purpose (count of M3)
    - M8 = Count of endpoints with wireless access enabled and with an identified business purpose for wireless access (count of M4)
    - M9 = M7 + M8
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured wireless-access-capable endpoints to the total number of wireless-access-capable endpoints'
      calculation: :code:`M9 / M5`
  - name: '15.5: Limit Wireless Access on Client Devices'
    number: "15.5"
    description: Configure wireless access on client machines that do have an essential wireless business purpose, to allow access only to authorized wireless networks and to restrict access to other wireless networks.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized wireless networks
    operations:
    - name: Enumerate wireless-client-capable endpoints
    - name: Enumerate authorized wireless networks
    - name: 'For each identified endpoint:'
    - name: "\tDetermine whether the endpoint is identified as having a business purpose for wireless access"
    - name: "\tExamine the endpoint's configuration as follows:"
    - name: "\t\tAccess is only allowed to authorized wireless networks"
    - name: "\t\tAccess to any other wireless network is restricted"
    - name: Enumerate all endpoints having a business purpose for wireless access
    - name: Enumerate all appropriately configured endpoints
    - name: Enumerate all inappropriately configured endpoints
    measures:
    - M1 = List of wireless-client-capable endpoints
    - M2 = List of authorized wireless networks
    - M3 = List of endpoints authorized for wireless access
    - M4 = List of appropriately configured endpoints
    - M5 = List of inappropriately configured endpoints
    - M6 = Count of wireless-client-capable endpoints (count of M1)
    - M7 = Count of authorized wireless networks (count of M2)
    - M8 = Count of endpoints authorized for wireless access (count of M3)
    - M9 = Count of appropriately configured endpoints (count of M4)
    - M10 = Count of inappropriately configured endpoints (count of M5)
    metrics:
    - name: Configuration Coverage
      metric: ' The ratio of appropriately configured endpoints to the total number of authorized wireless-client-capable endpoints'
      calculation: :code:`M9 / M8`
    - name: Authorization Coverage
      metric: ' The ratio of authorized wireless-client-capable endpoints to the total number of wireless-client-capable endpoints'
      calculation: :code:`M8 / M6`
  - name: '15.6: Disable Peer-to-Peer Wireless Network Capabilities on Wireless Clients'
    number: "15.6"
    description: Disable peer-to-peer (ad hoc) wireless network capabilities on wireless clients.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of wireless clients (subset of hardware inventory)
    - name: Approved configurations to disable peer-to-peer (adhoc) wireless network capabilities
    operations:
    - name: For each wireless client in Input 1, compare its configuration against the appropriate approved configuration(s) from Input 2.
    - name: Make a list of wireless clients that adhere to the approved configurations (M1)
    - name: Make a list of wireless clients that do not (M2), noting the deviations from the approved configurations.
    measures:
    - M1 = List of wireless clients properly configured to disable peer-to-peer (adhoc) wireless network capabilities (compliant list)
    - M2 = List of wireless clients not properly configured to disable peer-to-peer (adhoc) wireless network capabilities (non-compliant list)
    - M3 = Count of wireless clients with peer-to peer (adhoc) wireless network capabilities disabled (count of M1)
    - M4 = Total count of wireless clients (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of wireless clients with peer-to-peer (adhoc) wireless network capabilities disabled'
      calculation: :code:`M3 / M4`
  - name: '15.7: Leverage the Advanced Encryption Standard (AES) to Encrypt Wireless Data'
    number: "15.7"
    description: Leverage the Advanced Encryption Standard (AES) to encrypt wireless data in transit.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: List of wireless devices (derived from Endpoint Inventory; sub-control 1.4)
    - name: List of AES-capable wireless devices (sub-control 1.5)
    operations:
    - name: For each AES-capable wireless device, collect cipher suite configuration
    measures:
    - M1 = List of wireless devices
    - M2 = Count of wireless devices
    - M3 = List of AES-capable wireless devices
    - M4 = Count of AES-capable wireless devices
    - M5 = List of non-AES-capable wireless devices
    - M6 = Count of non-AES-capable wireless devices
    - M7 = List of appropriately configured AES-capable wireless devices
    - M8 = Count of appropriately configured AES-capable wireless devices
    - M9 = List of inappropriately configured AES-capable wireless devices
    - M10 = Count of inappropriately configured AES-capable wireless devices
    metrics:
    - name: Coverage
      metric: ' What percentage of AES-capable devices are configured to use cipher suites leveraging AES?'
      calculation: :code:`M8 / M4`
  - name: '15.8: Use Wireless Authentication Protocols That Require Mutual, Multi-Factor Authentication'
    number: "15.8"
    description: Ensure that wireless networks use authentication protocols such as Extensible Authentication Protocol-Transport Layer Security (EAP/TLS), that requires mutual, multi-factor authentication.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized authentication protocols
    operations:
    - name: Enumerate all wireless access points
    - name: 'For each identified wireless access point, examine its configuration for the following noting appropriately and inappropriately configured endpoints along the way:'
    - name: "\tConfigured authentication protocol (compare to list of authorized authentication protocols)"
    - name: Enumerate all appropriately configured endpoints
    - name: Enumerate all inappropriately configured endpoints
    measures:
    - M1 = List of all wireless access points
    - M2 = List of appropriately configured wireless access points
    - M3 = List of inappropriately configured wireless access points
    - M4 = Count of wireless access points (count of M1)
    - M5 = Count of appropriately configured wireless access points (count of M2)
    - M6 = Count of inappropriately configured wireless access points (count of M3)
    metrics:
    - name: Coverage
      metric: ' The ratio of appropriately configured wireless access points to the total number of wireless access points'
      calculation: :code:`M5 / M4`
  - name: '15.9: Disable Wireless Peripheral Access to Devices'
    number: "15.9"
    description: Disable wireless peripheral access of devices [such as Bluetooth and Near Field Communication (NFC)], unless such access is required for a business purpose.
    header:
      assetType: Devices
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of devices capable of wireless peripheral access including Bluetooth and NFC (subset of hardware inventory)
    - name: Approved configuration(s) to disable wireless peripheral access
    - name: The list of devices with an approved business purpose to have wireless peripheral access enabled, along with which form(s) of wireless peripheral access are approved (Bluetooth, NFC, etc.)
    operations:
    - name: For each device in Input 1, check to see if that device adheres to the appropriate configuration(s) from Input 2 to disable wireless peripheral access, excluding any form(s) of wireless peripheral access that the device is approved to have enabled according to Input 3.
    - name: Create a list of devices that are properly configured (M1)
    - name: Create a list of devices that are not properly configured (M2) noting the deviations from approved configuration.
    measures:
    - M1 = List of devices that are properly configured to disable wireless peripheral access (compliant list)
    - M2 = List of devices that are not properly configured to disable wireless peripheral access (non-compliant list)
    - M3 = Count of devices that are properly configured to disable wireless peripheral access (count of M1)
    - M4 = Total count of devices capable of wireless peripheral access including Bluetooth and NFC (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of devices properly configured to disable wireless peripheral access'
      calculation: :code:`M3 / M4`
  - name: '15.10: Create Separate Wireless Network for Personal and Untrusted Devices'
    number: "15.10"
    description: Create a separate wireless network for personal or untrusted devices. Enterprise access from this network should be treated as untrusted and filtered and audited accordingly.
    header:
      assetType: Network
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: Isolated wireless network SSID(s)
    - name: List of corporate wireless network SSID(s)
    operations:
    - name: For each corporate wireless network SSID, attempt to connect non-corporate device (M2)
    - name: Determine access policy for other wireless network
    measures:
    - M1 = 1 if the separate wireless network exists for personal/non-corporate devices; 0 otherwise.
    - M2 = List of corporate wireless network SSID(s) accepting non-corporate devices
    - M3 = Count of M2
    - M4 = List of corporate wireless network SSID(s)
    - M5 = Count of M4
    metrics:
    - name: Logical Isolation
      metric: ' The overall measure fails if there is no separate network for personal/non-corporate devices (M1 = 0)'
      calculation: :code:``
    - name: Coverage
      metric: ' What percentage of the total number of wireless networks exist but are misconfigured?'
      calculation: :code:`M3 / M5`
- name: 'CIS Control 16: Account Monitoring and Control'
  number: "16"
  description: |-
    Actively manage the life cycle of system and application accounts – their creation, use, dormancy,
    deletion – in order to minimize opportunities for attackers to leverage them.
  why: |-
    Attackers frequently discover and exploit legitimate but inactive user accounts to impersonate
    legitimate users, thereby making discovery of attacker behavior difficult for security personnel
    watchers. Accounts of contractors and employees who have been terminated and accounts
    formerly set up for Red Team testing (but not deleted afterwards) have often been misused
    in this way. Additionally, some malicious insiders or former employees have gained access to
    accounts left behind in a system long after contract expiration, maintaining their access to an
    organization’s computing system, and sensitive data for unauthorized and sometimes malicious
    purposes.
  subcontrols:
  - name: '16.1: Maintain an Inventory of Authentication Systems'
    number: "16.1"
    description: Maintain an inventory of each of the organization’s authentication systems, including those located on-site or at a remote service provider.
    header:
      assetType: Users
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: Inventory of the organization's authentication systems (including onsite and remote)
    operations:
    - name: Verify that the inventory of authentication systems (Input 1) was provided.  The presence or absence of this list will be indicated with M1.
    - name: (Optional) Manually review Input 1 to ensure that it includes all of the authentication systems utilized by the organization, including those located onsite and by remote service providers (for instance, be sure authentication systems for any cloud services used by the organization are included).  An optional manual score can be generated from this review and provided as M2.
    measures:
    - M1 = 1 if the inventory was provided, 0 if it was not provided
    - M2 = (Optional) Indicates manual review of the authentication systems inventory was performed; 0 otherwise
    metrics:
    - name: Existence
      metric: ' Does the organization''s authentication systems inventory exist?'
      calculation: :code:`M1`
    - name: Manual Review
      metric: ' Was a manual review of the organization''s systems inventory performed?'
      calculation: :code:`M2`
  - name: '16.2: Configure Centralized Point of Authentication'
    number: "16.2"
    description: Configure access for all accounts through as few centralized points of authentication as possible, including network, security, and cloud systems.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    inputs:
    - name: The list of endpoints
    operations:
    - name: Enumerate centralized authentication points in inventory
    - name: For each identified centralized authentication point to determine necessity (i.e. can a given authentication system be consolidated with another?)
    - name: Enumerate the list of unnecessary centralized authentication points
    measures:
    - M1 = List of centralized authentication points in inventory
    - M2 = List of unnecessary centralized authentication points
    - M3 = Count of centralized authentication points in the inventory (The count of M1)
    - M4 = Count of unnecessary centralized authentication points (The count of M2)
    - M5 = M3 - M4 (the target number of centralized authentication points)
    metrics:
    - name: Coverage
      metric: ' The ratio of desired centralized authentication points to actual authentication points, where the goal is for M5 / M3 = 1.'
      calculation: :code:`M5 / M3`
  - name: '16.3: Require Multi-Factor Authentication'
    number: "16.3"
    description: Require multi-factor authentication for all user accounts, on all systems, whether managed on-site or by a third-party provider.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '16.6: Maintain an Inventory of Accounts'
    inputs:
    - name: Account inventory organized by authentication system (from Sub-Control 16.6)
    - name: Approved configuration(s) to require multi-factor authentication (MFA).  This will likely be a configuration for each type of authentication system in use
    operations:
    - name: 'For each account in the account inventory (Input 1), check to see if that account is configured to require MFA in accordance with the appropriate approved configuration(s) from Input 2.  '
    - name: Create a list of accounts that are properly configured to require MFA (M1)
    - name: Create a list of accounts that are not properly configured to require MFA (M2) noting the deviations from the approved configuration.
    measures:
    - M1 = List of accounts that are properly configured to require MFA (compliant list)
    - M2 = List of accounts that are not properly configured to require MFA (non-compliant list)
    - M3 = Count of accounts properly configured to require MFA (count of M1)
    - M4 = Total number of accounts (count of Input 1)
    metrics:
    - name: MFA Coverage
      metric: ' The ratio of accounts that are properly configured to require MFA to the total number of accounts.'
      calculation: :code:`M3 / M4`
  - name: '16.4: Encrypt or Hash All Authentication Credentials'
    number: "16.4"
    description: Encrypt or hash with a salt all authentication credentials when stored.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '16.1: Inventory of Authentication Systems'
    inputs:
    - name: Inventory of Authentication Systems (for each, include any related components used for credential storage for that authentication system such as any databases that require configuration independent of the authentication system)
    - name: Approved configuration(s) to ensure that all credentials are encrypted and/or hashed with a salt when stored.  There may be multiple configurations to handle the different types of authentication systems used in the organization, and configurations may also be required for related components involved in storing this data (i.e. database configurations).
    operations:
    - name: For each authentication system provided in Input 1 (along with any listed related components), check to see if it is configured properly according to the appropriate configuration(s) provided in Input 2.
    - name: Create a list of the authentication systems that are properly configured (M1)
    - name: Create a list of the authentication systems that are not properly configured (M2) including the deviations from proper configuration (if any related component identified in Input 1 is not configured according to the appropriate configuration, then its associated authentication system should be considered improperly configured, and the specific component should be noted as part of the deviation from proper configuration).
    measures:
    - M1 = List of properly configured authentication systems (compliant list)
    - M2 = List of improperly configured authentication systems (non-compliant list)
    - M3 = Count of properly configured authentication systems (count of M1)
    - M4 = Total count of authentication systems (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of properly configured authentication systems to the total number of authentication systems.'
      calculation: :code:`M3 / M4`
  - name: '16.5: Encrypt Transmittal of Username and Authentication Credentials'
    number: "16.5"
    description: Ensure that all account usernames and authentication credentials are transmitted across networks using encrypted channels.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '16.1: Inventory of Authentication Systems'
    inputs:
    - name: Inventory of Authentication Systems (for each, include any related components used by that authentication system to transmit credential information over the network)
    - name: Approved configuration(s) to ensure that all credentials are transmitted over encrypted channels.  There may be multiple configurations to handle the different types of authentication systems used in the organization, and configurations may also be required for related components involved in transmitting this data (i.e. VPNs).
    operations:
    - name: For each authentication system provided in Input 1 (along with any listed related components), check to see if it is configured properly according to the appropriate configuration(s) provided in Input 2.
    - name: Create a list of the authentication systems that are properly configured (M1)
    - name: Create a list of the authentication systems that are not properly configured (M2) including the deviations from proper configuration (if any related component identified in Input 1 is not configured according to the appropriate configuration, then its associated authentication system should be considered improperly configured, and the specific component should be noted as part of the deviation from proper configuration).
    measures:
    - M1 = List of properly configured authentication systems (compliant list)
    - M2 = List of improperly configured authentication systems (non-compliant list)
    - M3 = Count of properly configured authentication systems (count of M1)
    - M4 = Total count of authentication systems (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of properly configured authentication systems to the total number of authentication systems'
      calculation: :code:`M3 / M4`
  - name: '16.6: Maintain an Inventory of Accounts'
    number: "16.6"
    description: Maintain an inventory of all accounts organized by authentication system.
    header:
      assetType: Users
      securityFunction: Identify
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '16.1: Inventory of Authentication Systems'
    inputs:
    - name: Authentication System Inventory
    - name: The organization's current account inventory (the "to be checked" inventory)
    operations:
    - name: For each authentication system in Input 1, enumerate the accounts under that authentication system.  This ground truth list of accounts organized by authentication system becomes M1.
    - name: Compare the accounts listed in M1 to the accounts listed in the current account inventory (Input 2).
    - name: Create a list of the correct accounts in Input 2 (which will be M2)
    - name: Create a list of the incorrect accounts in Input 2 (which will be M3).
    measures:
    - M1 = Ground truth account inventory
    - M2 = List of correct accounts from the current (to be checked) inventory
    - M3 = List of incorrect accounts from the current (to be checked) inventory
    - M4 = Count of accounts in the ground truth account inventory (count of M1)
    - M5 = Count of correct accounts in the current (to be checked) account inventory (count of M2)
    metrics:
    - name: Account Inventory Accuracy
      metric: ' Calculate the accuracy of current (to be checked) account inventory'
      calculation: :code:`M5 / M4`
  - name: '16.7: Establish Process for Revoking Access'
    number: "16.7"
    description: Establish and follow an automated process for revoking system access by disabling accounts immediately upon termination or change of responsibilities of an employee or contractor.  Disabling these accounts, instead of deleting accounts, allows preservation of audit trails.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '16.6: Maintain an Inventory of Accounts'
    inputs:
    - name: The inventory of employee accounts
    - name: A given time period for analysis
    operations:
    - name: For each employee terminated or changed responsibilities within the Input 2 time period, enumerate the employee's accounts (a given employee may have a number of accounts)
    measures:
    - M1 = List of employee accounts collected by Operation 1
    - M2 = Count of M1
    - M3 = List of employee accounts disabled within the Input 2 time period
    - M4 = Count of M3
    metrics:
    - name: Enforcement Quality
      metric: ' The ratio of employee accounts that have been terminated/revoked within the acceptable timeframe.'
      calculation: :code:`M2 / M4`
  - name: '16.8: Disable Any Unassociated Accounts'
    number: "16.8"
    description: Disable any account that cannot be associated with a business process or business owner.
    header:
      assetType: Users
      securityFunction: Respond
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: Inventory of accounts
    - name: Inventory of business processes and/or business owners
    operations:
    - name: For each account, enumerate any associated business processes or ownership
    measures:
    - M1 = List of accounts
    - M2 = Count of M1
    - M3 = List of accounts not associated with any business process or ownership
    - M4 = Count of M3
    - M5 = List of accounts associated with at least one business process or ownership
    - M6 = Count of M5
    metrics:
    - name: Coverage
      metric: ' What percentage of accounts are associated with at least one business process or ownership?'
      calculation: :code:`M6 / M2`
  - name: '16.9: Disable Dormant Accounts'
    number: "16.9"
    description: Automatically disable dormant accounts after a set period of inactivity.
    header:
      assetType: Users
      securityFunction: Respond
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: The list of all accounts created in the enterprise
    - name: An organizationally defined policy indicating a "dormant threshold"; the period of inactivity after which the account is considered dormant (recommended value 1 month)
    operations:
    - name: For each account, query the respective interface to collect the account's last activity.
    - name: For each account, query the respective interface to collect the account's enabled/disabled status.
    - name: Based on Operations 1 and 2, collect those accounts still marked as enabled but whose last activity is beyond the "dormant threshold" defined in Input 2
    measures:
    - M1 = List of Accounts
    - M2 = Count of M1
    - M3 = List of accounts marked as enabled
    - M4 = Count of M3
    - M5 = List of accounts enabled and not used for a time period outside the dormant threshold
    - M6 = Count of M5
    metrics:
    - name: Dormant Accounts
      metric: ' What percentage of all accounts are currently dormant but still enabled?'
      calculation: :code:`M6 / M2`
    - name: Enabled Dormant Accounts
      metric: ' What percentage of accounts marked enabled are currently dormant and still enabled?'
      calculation: :code:`M3 / M2`
  - name: '16.10: Ensure All Accounts Have An Expiration Date'
    number: "16.10"
    description: Ensure that all accounts have an expiration date that is monitored and enforced.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '16.1: Inventory of Authentication Systems'
    inputs:
    - name: Account Inventory
    - name: Authentication System Inventory
    - name: Approved Configuration(s) for ensuring that account expiration dates are automatically enforced (there may be multiple configurations that vary by type of authentication system, etc.)
    - name: 'Optional: Maximum amount of time in the future allowed for an expiration date (example: the organization may require all accounts to have an expiration date no more than 1 year in the future so that all accounts must be re-justified every year).  This time frame could be specific to certain account types (Administrator for example), or specific to certain authentication systems.'
    operations:
    - name: For each account in the account inventory (Input 1), check to see if that account has a valid expiration date that is in the future.  If the optional Input 4 was provided, also verify if that expiration date complies with any applicable additional time frame restrictions.  Based on these checks, create a list (M1) of accounts with valid expiration dates, and a list (M2) of accounts with invalid expiration dates (noting why the expiration date is invalid).
    - name: For each authentication system in Input 2, check to see if it is configured according to the appropriate configuration(s) from Input 3.
    - name: Create a list (M3) of authentication systems that are configured correctly
    - name: Create a list (M4) of authentication systems that are not configured correctly (noting the deviations).
    measures:
    - M1 = List of accounts with valid expiration dates
    - M2 = List of accounts with invalid expiration dates
    - M3 = List of authentication systems that are configured correctly
    - M4 = List of authentication systems that are not configured correctly
    - M5 = Count of accounts with valid expiration dates (count of M1)
    - M6 = Total count of accounts (count of Input 1)
    - M7 = Count of authentication systems that are configured correctly (count of M3)
    - M8 = Total count of authentication systems (count of Input 2)
    metrics:
    - name: Valid Accounts
      metric: ' The ratio of accounts with valid expiration dates to the total number of accounts'
      calculation: :code:`M5 / M6`
    - name: Valid Authentication Systems
      metric: ' The ratio of correctly configured authentication systems to the total number of authentication systems'
      calculation: :code:`M7 / M8`
  - name: '16.11: Lock Workstation Sessions After Inactivity'
    number: "16.11"
    description: Automatically lock workstation sessions after a standard period of inactivity.
    header:
      assetType: Users
      securityFunction: Protect
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: List of workstations which have enabled automatic workstation locking
    - name: List of workstations
    - name: The workstation configuration policy establishing the organization's workstation locking time threshold
    operations:
    - name: For each workstation with locking enabled, collect the locking time threshold
    - name: Collect the list of workstations whose locking time threshold exceeds the value specified by Input 3
    measures:
    - M1 = List of workstations
    - M2 = Count of M1
    - M3 = List of workstations having enabled automatic workstation locking
    - M4 = Count of M3
    - M5 = List of appropriately configured workstations
    - M6 = Count of M5
    - M7 = List of inappropriately configured workstations
    - M8 = Count of M7
    metrics:
    - name: Misconfigured Workstations
      metric: ' What percentage of automatic locking enabled workstations are configured within the locking time threshold?'
      calculation: :code:`M6 / M2`
    - name: Unconfigured Workstations
      metric: ' How many workstations do *not* have automatic locking enabled?'
      calculation: :code:`M2 - M4`
  - name: '16.12: Monitor Attempts to Access Deactivated Accounts'
    number: "16.12"
    description: Monitor attempts to access deactivated accounts through audit logging.
    header:
      assetType: Users
      securityFunction: Detect
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    - '16.1: Inventory of Authentication Systems'
    inputs:
    - name: Authentication System Inventory
    - name: Approved configuration(s) for logging attempts to access deactivated accounts
    - name: Approved configuration(s) for alerting on attempts to access deactivated accounts
    - name: '**Note**: There may be multiple configurations for Inputs 2 and 3 to account for various groups/types of authentication systems.'
    operations:
    - name: For each authentication system in Input 1, select the appropriate approved configuration from Inputs 2 and 3 in turn for that endpoint and check to see if that authentication system's actual configuration complies with the approved configuration for each Input.  Record this information as M1 - a list of authentication systems annotated with whether that authentication system is compliant or non-compliant with the appropriate approved configuration from each of the two inputs (Input 2 and Input 3).
    - name: For Input 2, and for Input 3, generate a count of compliant authentication systems from M1 and record these as M2 and M3 respectively.
    - name: Count the number of authentication systems that are compliant with both inputs and record this as M4
    measures:
    - M1 = List of authentication systems with each endpoint entry labeled with compliance or non-compliance for both Input 2 and Input 3
    - M2 = Count of compliant authentication systems based on Input 2 configurations
    - M3 = Count of compliant authentication systems based on Input 3 configurations
    - M4 = Count of authentication systems that are compliant with configurations from both inputs
    - M5 = Total count of authentication systems from Input 1
    metrics:
    - name: Logging Coverage
      metric: ' The ratio of authentication systems configured to log attempts to access deactivated accounts to the total number of authentication systems.'
      calculation: :code:`M2 / M5`
    - name: Alerting Coverage
      metric: ' The ratio of authentication systems configured to log attempts to access deactivated accounts to the total number of authentication systems.'
      calculation: :code:`M3 / M5`
    - name: Full Coverage
      metric: ' The ratio of authentication systems configured to both log and alert on attempts to access deactivated accounts to the total number of authentication systems.'
      calculation: :code:`M4 / M5`
  - name: '16.13: Alert on Account Login Behavior Deviation'
    number: "16.13"
    description: Alert when users deviate from normal login behavior, such as time-of-day, workstation location, and duration.
    header:
      assetType: Users
      securityFunction: Detect
      implementationGroups:
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The list of endpoints
    - name: The list of authorized software
    operations:
    - name: Enumerate user behavioral monitoring software systems
    - name: Enumerate endpoints
    - name: For each identified behavioral monitoring system
    - name: "\tEnumerate endpoints covered by this behavioral monitoring system"
    - name: "\tExamine the system's configuration, noting appropriate and inappropriate configurations along the way, to ensure that it is configured to alert for at least the following deviation points:"
    - name: "\t\tTime of day"
    - name: "\t\tWorkstation location"
    - name: "\t\tDuration"
    - name: Enumerate all endpoints covered by at least one behavioral monitoring system
    - name: Complement covered endpoints with the list of all endpoints to enumerate the list of endpoints not covered by at least one behavioral monitoring system
    - name: Enumerate all appropriately configured behavioral monitoring systems
    - name: Enumerate all inappropriately configured behavioral monitoring systems
    measures:
    - M1 = List of user behavioral monitoring software systems
    - M2 = List of endpoints
    - M3 = List of endpoints covered by at least one behavioral monitoring system
    - M4 = List of endpoints not covered by at least one behavioral monitoring system
    - M5 = List of appropriately configured behavioral monitoring systems
    - M6 = List of inappropriately configured behavioral monitoring systems
    - M7 = Count of user behavioral monitoring software systems (count of M1)
    - M8 = Count of endpoints (count of M2)
    - M9 = Count of endpoints covered by at least one behavioral monitoring system (count of M3)
    - M10 = Count of endpoints not covered by at least one behavioral monitoring system (count of M4)
    - M11 = Count of appropriately configured behavioral monitoring systems (count of M5)
    - M12 = Count of inappropriately configured behavioral monitoring systems (count of M6)
    metrics:
    - name: Endpoint Coverage
      metric: ' The ratio of endpoints covered by at least one behavioral monitoring system to the total number of endpoints'
      calculation: :code:`M9 / M8`
    - name: Behavioral Monitoring System Coverage
      metric: ' The ratio of appropriately configured behavioral monitoring systems to the total number of behavioral monitoring systems'
      calculation: :code:`M11 / M7`
- name: 'CIS Control 17: Implement a Security Awareness and Training Program'
  number: "17"
  description: |-
    For all functional roles in the organization (prioritizing those mission-critical to the business and
    its security), identify the specific knowledge, skills, and abilities needed to support defense of
    the enterprise; develop and execute an integrated plan to assess, identify gaps, and remediate
    through policy, organizational planning, training, and awareness programs.
  why: |-
    It is tempting to think of cyber defense primarily as a technical challenge, but the actions of
    people also play a critical part in the success or failure of an enterprise. People fulfill important
    functions at every stage of system design, implementation, operation, use, and oversight.
    Examples include: system developers and programmers (who may not understand the
    opportunity to resolve root cause vulnerabilities early in the system life cycle); IT operations
    professionals (who may not recognize the security implications of IT artifacts and logs); end users
    (who may be susceptible to social engineering schemes such as phishing); security analysts (who
    struggle to keep up with an explosion of new information); and executives and system owners
    (who struggle to quantify the role that cybersecurity plays in overall operational/mission risk, and
    have no reasonable way to make relevant investment decisions).

    Attackers are very conscious of these issues and use them to plan their exploitations by, for
    example: carefully crafting phishing messages that look like routine and expected traffic to an
    unwary user; exploiting the gaps or seams between policy and technology (e.g., policies that have
    no technical enforcement); working within the time window of patching or log review; using
    nominally non-security-critical systems as jump points or bots.

    No cyber defense approach can effectively address cyber risk without a means to address this
    fundamental vulnerability. Conversely, empowering people with good cyber defense habits can
    significantly increase readiness.
  subcontrols:
  - name: '17.1: Perform a Skills Gap Analysis'
    number: "17.1"
    description: Perform a skills gap analysis to understand the skills and behaviors workforce members are not adhering to, using this information to build a baseline education roadmap.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: Security awareness skill topic areas to be assessed
    - name: Set of exams/exercises mapped to the topics in Input 1
    - name: Minimum acceptable score
    operations:
    - name: For each workforce member, administer the exams/exercises from Input 2
    - name: Score each of the exams/exercises
    - name: For each security awareness skill topic area in Input 1, average the results of the exams/exercises mapped to that topic area to generate an organizational average for that topic area.
    - name: "\tGenerate a list of topic areas and the organizational averages that are greater than or equal to the minimum acceptable score provided as Input 3 (M1)."
    - name: "\tGenerate a list of topic areas and organizational averages that are below the minimum acceptable score (M2)."
    measures:
    - M1 = List of security awareness topic areas with averages in the acceptable range (compliant list)
    - M2 = List of security awareness topic areas with averages below the acceptable range (non-compliant list)
    - M3 = Count of security awareness topic areas with averages in the acceptable range (count of M1)
    - M4 = Total count of security awareness topic areas assessed (count of Input 1)
    metrics:
    - name: Scoring
      metric: ' The ratio of security awareness topic areas with organizational averages in the acceptable range'
      calculation: :code:`M3 / M4`
  - name: '17.2: Deliver Training to Fill the Skills Gap'
    number: "17.2"
    description: Deliver training to address the skills gap identified to positively impact workforce members’ security behavior.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '17.1: Perform a Skills Gap Analysis'
    inputs:
    - name: Skills gap topics (areas of weakness as determined by the skills gap analysis in Sub-Control 17.1)
    - name: Modules/topics covered in the organization's security awareness training
    operations:
    - name: For each skills gap in Input 1, determine if that topic is adequately covered in the organization's security awareness training program (Input 2).
    - name: "\tCreate a list of the topics that are adequately covered (M1)"
    - name: "\tCreate a list of the topics that are not adequately covered (M2) including notes on what needs to be added to achieve adequate coverage of the topic."
    measures:
    - M1 = List of skills gap topics that are adequately covered in the organization's security awareness training
    - M2 = List of skills gap topics that are not adequately covered in the organization's security awareness training
    - M3 = Count of skills gap topics that are adequately covered in the organization's security awareness program (count of M1)
    - M4 = Total count of skills gap topics (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of skills gap topics that are adequately covered in the organization''s security awareness training'
      calculation: :code:`M3 / M4`
  - name: '17.3: Implement a Security Awareness Program'
    number: "17.3"
    description: Create a security awareness program for all workforce members to complete on a regular basis to ensure they understand and exhibit the necessary behaviors and skills to help ensure the security of the organization.  The organization’s security awareness program should be communicated in a continuous and engaging manner.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of workforce members
    - name: List of most recent security awareness training completion dates for each workforce member
    - name: Required frequency of training (at least annually)
    operations:
    - name: For each workforce member in Input 1, check Input 2 to see if that workforce member's most recent security awareness training completion date was within the time frame specified by Input 3 (if the workforce member is not listed in Input 2, assume the workforce member is not compliant). Generate a list of compliant workforce members (M1) and a list of non-compliant workforce members (M2).
    measures:
    - M1 = List of workforce members who have completed the security awareness training within the specified time frame (compliant list)
    - M2 = List of workforce members who have not completed the security awareness training within the specified time frame (non-compliant list)
    - M3 = Number of workforce members in the compliant list (M1)
    - M4 = Number of workforce members in the non-compliant list (M2)
    - M5 = Total number of workforce members in Input 1
    metrics:
    - name: Coverage
      metric: ' What percentage of workforce members have completed the security awareness training module within the specified timeframe?'
      calculation: :code:`M3 / M5`
  - name: '17.4: Update Awareness Content Frequently'
    number: "17.4"
    description: Ensure that the organization’s security awareness program is updated frequently (at least annually) to address new technologies, threats, standards, and business requirements.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '17.3: Implement a Security Awareness Program'
    inputs:
    - name: Date the organization's security awareness program was last updated
    - name: Maximum time allowed between updates to the organization's security awareness program
    operations:
    - name: Verify that the maximum time allowed between updates to the security awareness program (Input 2) is one year or less and set M1 accordingly.
    - name: Check the date that the security awareness program was last updated (Input 1) to make sure that it occurred within the required time frame (Input 2) and set M2 accordingly.
    measures:
    - M1 = 1 if maximum time allowed between security awareness program updates is one year or less, 0 if greater than one year
    - M2 = 1 if the last update to the security awareness program was within the required time frame, 0 otherwise
    metrics:
    - name: Update Timeliness
      metric: ' Is the organization''s security awareness program updated within acceptable time frame?'
      calculation: :code:`M1 AND M2`
  - name: '17.5: Train Workforce on Secure Authentication'
    number: "17.5"
    description: Train workforce members on the importance of enabling and utilizing secure authentication.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of workforce members
    - name: List of most recent security awareness training completion dates for each workforce member
    - name: Required frequency of training (at least annually)
    operations:
    - name: For each workforce member in Input 1, check Input 2 to see if that workforce member's most recent security awareness training completion date was within the time frame specified by Input 3 (if the workforce member is not listed in Input 2, assume the workforce member is not compliant). Generate a list of compliant workforce members (M1) and a list of non-compliant workforce members (M2).
    measures:
    - M1 = List of workforce members who have completed the security awareness training within the specified time frame (compliant list)
    - M2 = List of workforce members who have not completed the security awareness training within the specified time frame (non-compliant list)
    - M3 = Number of workforce members in the compliant list (M1)
    - M4 = Number of workforce members in the non-compliant list (M2)
    - M5 = Total number of workforce members in Input 1
    metrics:
    - name: Coverage
      metric: ' What percentage of workforce members have completed the security awareness training module within the specified timeframe?'
      calculation: :code:`M3 / M5`
  - name: '17.6: Train Workforce on Identifying Social Engineering Attacks'
    number: "17.6"
    description: Train the workforce on how to identify different forms of social engineering attacks, such as phishing, phone scams, and impersonation calls.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of workforce members
    - name: List of most recent security awareness training completion dates for each workforce member
    - name: Required frequency of training (at least annually)
    operations:
    - name: For each workforce member in Input 1, check Input 2 to see if that workforce member's most recent security awareness training completion date was within the time frame specified by Input 3 (if the workforce member is not listed in Input 2, assume the workforce member is not compliant). Generate a list of compliant workforce members (M1) and a list of non-compliant workforce members (M2).
    measures:
    - M1 = List of workforce members who have completed the security awareness training within the specified time frame (compliant list)
    - M2 = List of workforce members who have not completed the security awareness training within the specified time frame (non-compliant list)
    - M3 = Number of workforce members in the compliant list (M1)
    - M4 = Number of workforce members in the non-compliant list (M2)
    - M5 = Total number of workforce members in Input 1
    metrics:
    - name: Coverage
      metric: ' What percentage of workforce members have completed the security awareness training module within the specified timeframe?'
      calculation: :code:`M3 / M5`
  - name: '17.7: Train Workforce on Sensitive Data Handling'
    number: "17.7"
    description: Train workforce members on how to identify and properly store, transfer, archive, and destroy sensitive information.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of workforce members
    - name: List of most recent security awareness training completion dates for each workforce member
    - name: Required frequency of training (at least annually)
    operations:
    - name: For each workforce member in Input 1, check Input 2 to see if that workforce member's most recent security awareness training completion date was within the time frame specified by Input 3 (if the workforce member is not listed in Input 2, assume the workforce member is not compliant). Generate a list of compliant workforce members (M1) and a list of non-compliant workforce members (M2).
    measures:
    - M1 = List of workforce members who have completed the security awareness training within the specified time frame (compliant list)
    - M2 = List of workforce members who have not completed the security awareness training within the specified time frame (non-compliant list)
    - M3 = Number of workforce members in the compliant list (M1)
    - M4 = Number of workforce members in the non-compliant list (M2)
    - M5 = Total number of workforce members in Input 1
    metrics:
    - name: Coverage
      metric: ' What percentage of workforce members have completed the security awareness training module within the specified timeframe?'
      calculation: :code:`M3 / M5`
  - name: '17.8: Train Workforce on Causes of Unintentional Data Exposure'
    number: "17.8"
    description: Train workforce members to be aware of causes for unintentional data exposures, such as losing their mobile devices or emailing the wrong person due to *autocomplete* in email.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of workforce members
    - name: List of most recent security awareness training completion dates for each workforce member
    - name: Required frequency of training (at least annually)
    operations:
    - name: For each workforce member in Input 1, check Input 2 to see if that workforce member's most recent security awareness training completion date was within the time frame specified by Input 3 (if the workforce member is not listed in Input 2, assume the workforce member is not compliant). Generate a list of compliant workforce members (M1) and a list of non-compliant workforce members (M2).
    measures:
    - M1 = List of workforce members who have completed the security awareness training within the specified time frame (compliant list)
    - M2 = List of workforce members who have not completed the security awareness training within the specified time frame (non-compliant list)
    - M3 = Number of workforce members in the compliant list (M1)
    - M4 = Number of workforce members in the non-compliant list (M2)
    - M5 = Total number of workforce members in Input 1
    metrics:
    - name: Coverage
      metric: ' What percentage of workforce members have completed the security awareness training module within the specified timeframe?'
      calculation: :code:`M3 / M5`
  - name: '17.9: Train Workforce Members on Identifying and Reporting Incidents'
    number: "17.9"
    description: Train workforce members to be able to identify the most common indicators of an incident and be able to report such an incident.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of workforce members
    - name: List of most recent security awareness training completion dates for each workforce member
    - name: Required frequency of training (at least annually)
    operations:
    - name: For each workforce member in Input 1, check Input 2 to see if that workforce member's most recent security awareness training completion date was within the time frame specified by Input 3 (if the workforce member is not listed in Input 2, assume the workforce member is not compliant). Generate a list of compliant workforce members (M1) and a list of non-compliant workforce members (M2).
    measures:
    - M1 = List of workforce members who have completed the security awareness training within the specified time frame (compliant list)
    - M2 = List of workforce members who have not completed the security awareness training within the specified time frame (non-compliant list)
    - M3 = Number of workforce members in the compliant list (M1)
    - M4 = Number of workforce members in the non-compliant list (M2)
    - M5 = Total number of workforce members in Input 1
    metrics:
    - name: Coverage
      metric: ' What percentage of workforce members have completed the security awareness training module within the specified timeframe?'
      calculation: :code:`M3 / M5`
- name: 'CIS Control 18: Application Software Security'
  number: "18"
  description: |-
    Manage the security life cycle of all in-house developed and acquired software in order to prevent,
    detect, and correct security weaknesses.
  why: |-
    Attacks often take advantage of vulnerabilities found in web-based and other application
    software. Vulnerabilities can be present for many reasons, including coding mistakes, logic errors,
    incomplete requirements, and failure to test for unusual or unexpected conditions. Examples of
    specific errors include: the failure to check the size of user input; failure to filter out unneeded
    but potentially malicious character sequences from input streams; failure to initialize and clear
    variables; and poor memory management allowing flaws in one part of the software to affect
    unrelated (and more security critical) portions.

    There is a flood of public and private information about such vulnerabilities available to
    attackers and defenders alike, as well as a robust marketplace for tools and techniques to
    allow “weaponization” of vulnerabilities into exploits. In one attack, more than 1 million web
    servers were exploited and turned into infection engines for visitors to those sites using SQL
    injection. During that attack, trusted websites from state governments and other organizations
    compromised by attackers were used to infect hundreds of thousands of browsers that accessed
    those websites. Many more web and non-web application vulnerabilities are discovered on a
    regular basis.
  subcontrols:
  - name: '18.1: Establish Secure Coding Practices'
    number: "18.1"
    description: Establish secure coding practices appropriate to the programming language and development environment being used.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of programming languages and development environments that the organization uses for software development
    - name: The organization's secure coding guides, with each guide tagged with the programming languages and development environments that it covers
    operations:
    - name: For each programming language and development environment in Input 1, check to see if it is covered by at least one secure coding guide in Input 2.
    - name: "\tCreate a list of the programming languages and development environments that are covered by secure coding guide (M1)"
    - name: "\tCreate a list of programming languages and development environments that are not covered by at least one secure coding guide (M2)"
    - name: (Optional) Manually review the secure coding guides to ensure that they cover all the needed aspects of secure coding for the programming languages and development environments in question, noting any topics or sections that need improvement (M3).
    measures:
    - M1 = List of programming languages and development environments covered by at least one secure coding guide (compliant list)
    - M2 = List of programming languages and development environments not covered by at least one secure coding guide (non-compliant list)
    - M3 = (Optional) From optional manual review, list/description of topics or sections that need to be improved
    - M4 = Count of programming languages and development environments covered by at least one secure coding guide (count of M1)
    - M5 = Total count of programming languages and development environments that the organization uses for software development (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of programming languages and development environments covered by a secure coding guide'
      calculation: :code:`M4 / M5`
  - name: '18.2: Ensure That Explicit Error Checking Is Performed for All In-House Developed Software'
    number: "18.2"
    description: For in-house developed software, ensure that explicit error checking is performed and documented for all input, including for size, data type, and acceptable ranges or formats.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '18.1: Establish Secure Coding Practices'
    inputs:
    - name: List of in-house developed software
    - name: Documentation for in-house developed software
    - name: Code for in-house developed software (the software itself)
    operations:
    - name: For each piece of in-house developed software in Input 1, identify all of the inputs for that software and associated properties of those inputs including size, data type, and acceptable ranges or formats (M1).
    - name: For each piece of in-house developed software, review the associated documentation provided in Input 2 to ensure that each of the inputs and associated properties identified in M1 are properly documented.
    - name: "\tCreate a list of the software for which all inputs and associated properties are properly documented (M2)"
    - name: "\tCreate a list of software for which at least one input and/or associated properties is not properly documented noting which inputs/properties are insufficiently documented (M3)."
    - name: For each piece of in-house developed software, review the associated code provided in Input 3 to ensure that explicit error checking is performed for each of the inputs identified in M1 to ensure that those inputs are of acceptable sizes, data types, formats, and within the proper ranges.
    - name: "\tCreate a list of the software for which all inputs have explicit error checking for the identified properties (M4)"
    - name: "\tCreate a list of software for which at least one of the inputs/properties is not properly checked (M5) noting the improperly checked inputs/properties and why they are deficient."
    - name: Compare M2 and M4 to generate the count of which pieces of in-house developed software are in both lists (M6).
    measures:
    - M1 = List of all inputs for each piece of in-house developed software and associated properties of those inputs including size, data type, and acceptable ranges or formats
    - M2 = List of the software for which all inputs and associated properties are properly documented (compliant documentation list)
    - M3 = List of software for which at least one input and/or associated properties is not properly documented (non-compliant documentation list)
    - M4 = List of the software for which all inputs have explicit error checking for the identified properties (compliant code list)
    - M5 = List of software for which at least one of the inputs/properties is not properly checked (non-compliant code list)
    - M6 = Count of compliant software (count of intersection of M2 and M4)
    - M7 = Total count of in-house developed software (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of software that contains proper error checking of inputs and is properly documented'
      calculation: :code:`M6 / M7`
  - name: '18.3: Verify That Acquired Software Is Still Supported'
    number: "18.3"
    description: Verify that the version of all software acquired from outside your organization is still supported by the developer or appropriately hardened based on developer security recommendations.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.2: Ensure Software is Supported by Vendor'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: List of software acquired from outside the organization, including version information for each (subset of Authorized Software List from Sub-Control 2.1). As described in Sub-Control 2.2, this list should also include the supported or unsupported status for each.
    - name: The list of organizational security configuration standards from Sub-Control 5.1
    operations:
    - name: For each software version listed in Input 1, check the list of organizational security configuration standards provided in Input 2.
    - name: "\tCreate a list of software versions that have at least one associated organizational security configuration standard (M1) including identifiers for the associated standard(s)"
    - name: "\tCreate a list of software versions that do not have any associated organizational security configuration standards (M2)"
    - name: For each software version listed in M2, check the supported/unsupported status field for that software version in Input 1 to see if that product version is still supported by the developer.
    - name: "\tCreate a list of software versions that appear in M2 and are not supported (M3)."
    measures:
    - M1 = List of externally acquired software that has an associated organizational security configuration standard
    - M2 = List of externally acquired software that does not have an associated organizational security configuration standard
    - M3 = List of externally acquired software that does not have an associated organizational security configuration standard and is also not supported by the developer (non-compliant list)
    - M4 = Count of externally acquired software that does not have an associated organizational security configuration standard and is also not supported by the developer (count of M3)
    - M5 = Total count of externally acquired software (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of externally acquired software that is either supported or has an associated organizational security configuration standard'
      calculation: :code:`(M5 - M4) / M5`
  - name: '18.4: Only Use Up-to-Date and Trusted Third-Party Components'
    number: "18.4"
    description: Only use up-to-date and trusted third-party components for the software developed by the organization.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: The list of authorized software
    - name: Third-party component inventory (possibly from your automated build systems)
    operations:
    - name: Enumerate all third-party components in the inventory
    - name: 'For each component, verify:'
    - name: "\tLatest component is being used"
    - name: "\tThe component is explicitly trusted by the organization"
    - name: Enumerate compliant components
    - name: Enumerate non-compliant components
    measures:
    - M1 = List of all third-party components being used
    - M2 = List of all third-party components that are up-to-date and explicitly trusted
    - M3 = List of all third-party components that are not up-to-date or not explicitly trusted
    - M4 = Count of third-party components being used (count of M1)
    - M5 = Count of third-party components that are up-to-date and explicitly trusted (count of M2)
    - M6 = Count of third-party components that are not up-to-date or not explicitly trusted (count of M3)
    metrics:
    - name: Coverage
      metric: ' The ratio of compliant third-party components to the total number of third-party components in use'
      calculation: :code:`M5 / M4`
  - name: '18.5: Use only Standardized and Extensively Reviewed Encryption Algorithms'
    number: "18.5"
    description: Use only standardized, currently accepted, and extensively reviewed encryption algorithms.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of encryption algorithms used by the organization
    - name: Authoritative source that identifies which encryption algorithms are standardized, currently accepted, and extensively reviewed.
    operations:
    - name: For each encryption algorithm in Input 1, check Input 2 to see if that encryption algorithm is standardized, currently accepted, and extensively reviewed.
    - name: "\tCreate a list of the encryption algorithms that meet all of these criteria (M1)"
    - name: "\tCreate a list of the encryption algorithms that do not meet all of these criteria (M2)."
    measures:
    - M1 = List of encryption algorithms used by the organization that are standardized, currently accepted, and extensively reviewed (compliant list)
    - M2 = List of encryption algorithms used by the organization that do not meet these criteria (non-compliant list)
    - M3 = Count of encryption algorithms used by the organization that are standardized, currently accepted, and extensively reviewed (count of M1)
    - M4 = Total count of encryption algorithms used by the organization (count of Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of encryption algorithms used by the organization that are standardized, currently accepted, and extensively reviewed'
      calculation: :code:`M3 / M4`
  - name: '18.6: Ensure Software Development Personnel Are Trained in Secure Coding'
    number: "18.6"
    description: Ensure that all software development personnel receive training in writing secure code for their specific development environment and responsibilities.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: List of software development personnel including assigned development environments and roles
    - name: List of secure coding training courses required for each development environment and role
    - name: List of secure coding training courses that each person has completed
    operations:
    - name: For each person in Input 1, use the development environments and roles assigned to that person to determine which secure coding training courses the person is required to take; note these individual lists of required courses in M1.
    - name: For each person in Input 1, compare the courses that person is required to take from M1 to the courses that person has completed from Input 3.
    - name: "\tCreate a list of the required courses the person has completed (M2)"
    - name: "\tCreate a list of the required courses the person has not completed (M3)."
    measures:
    - M1 = List of courses that software development personnel are required to take, by individual
    - M2 = List of required courses that software development personnel have completed, by individual (compliant list)
    - M3 = List of required courses that software development personnel have not completed, by individual (non-compliant list)
    - M4 = Count of required courses by individual (count of M1)
    - M5 = Count of completed required courses by individual (count of M2)
    metrics:
    - name: Coverage
      metric: ' THe ratio of completed required courses to total required courses by individual **NOTE**: An organizational average completion rate can be calculated by averaging the individual completion ratios from the above "Coverage" metric.'
      calculation: :code:`Individual's M5 / Individual's M4`
  - name: '18.7: Apply Static and Dynamic Code Analysis Tools'
    number: "18.7"
    description: Apply static and dynamic analysis tools to verify that secure coding practices are being adhered to for internally developed software.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: The inventory of internally-developed software (from the organization's software inventory)
    - name: The inventory of static analysis tools (from the organization's software inventory)
    - name: The inventory of dynamic analysis tools (from the organization's software inventory)
    operations:
    - name: Map the inventory of internally-developed software to the applicable static/dynamic analysis tools which are used for verification.
    measures:
    - M1(i) = (For each software "i" from Input 1) 1 if the software is verified by static analysis tool(s); 0 otherwise
    - M2(i) = (For each software "i" from Input 1) 1 if the software is verified by dynamic analysis tool(s); 0 otherwise
    - M3 = Count of internally developed software (the count of Input 1)
    metrics:
    - name: Static Analysis Tool Coverage
      metric: ' The ratio of internally developed software verified by static analysis tools to the total number of internally developed software applications'
      calculation: :code:`(SUM from i=1..M3 (M1(i))) / M3`
    - name: Dynamic Analysis Tool Coverage
      metric: ' The ratio of internally developed software verified by dynamic analysis tools to the total number of internally developed software applications'
      calculation: :code:`(SUM from i=1..M3 (M2(i))) / M3`
  - name: '18.8: Establish a Process to Accept and Address Reports of Software Vulnerabilities'
    number: "18.8"
    description: Establish a process to accept and address reports of software vulnerabilities, including providing a means for external entities to contact your security group.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: Written process for accepting and addressing software vulnerabilities
    operations:
    - name: Determine whether a written process for accepting and addressing software vulnerabilities exists (M1).
    - name: Manually review the written process for accepting and addressing software vulnerabilities (Input 1).
    - name: "\tIdentify whether the document provides a means for external entities to contact your security group (M2)"
    - name: "\tIdentify whether the document adequately describes the process for accepting reports of software vulnerabilities (M3)"
    - name: "\tIdentify whether the document adequately describes the process for addressing those reports (M4)"
    measures:
    - M1 = Boolean value indicating whether a written process for accepting and addressing software vulnerabilities exists; 1 if it exists, 0 if it does not
    - M2 = Boolean value indicating whether the document provides a means for external entities to contact your security group; 1 if the document provides this info, 0 if it does not
    - M3 = Boolean value indicating whether the document adequately describes the process for accepting reports of software vulnerabilities; 1 if the document adequately describes this process, 0 if it does not
    - M4 = Boolean value indicating whether the document adequately describes the process for addressing reports of software vulnerabilities; 1 if the document adequately describes this process, 0 if it does not
    metrics:
    - name: Process Completeness
      metric: ' Does the written process for accepting and addressing reports of software vulnerabilities exist and is it complete?'
      calculation: :code:`M1 AND M2 AND M3 AND M4`
  - name: '18.9: Separate Production and Non-Production Systems'
    number: "18.9"
    description: Maintain separate environments for production and non-production systems. Developers should not have unmonitored access to production environments.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    inputs:
    - name: The inventory of systems used for production and non-production deployments
    - name: The inventory of user accounts
    - name: The mechanism for monitoring user account access to systems
    operations:
    - name: From Input 1, categorize the deployments of systems into those with production deployments and those with non-production deployments.  Note that systems *should* have both production and 1..n non-production deployments (including development, staging, integration testing, etc).
    - name: From Input 2, determine the list of user accounts with access to production environments
    measures:
    - M1(i) = (For each system with a production deployment "i") 1 if at least one non-production deployment environment exists for that system, 0 otherwise.
    - M2 = Count of systems with a production deployment
    - M3 = Count of user accounts whose access to production environments is monitored by the mechanism defined by Input 3.
    - M4 = Count of user accounts with access to production environments (the count from Operation 2).
    metrics:
    - name: Environment Coverage
      metric: ' The ratio of production systems where at least one non-production deployment exists to the total number of production systems'
      calculation: :code:`(SUM from i=1..M2 (M1(i))) / M2`
    - name: Monitored Account Coverage
      metric: ' The ratio of accounts with production system access that are monitored to the total accounts with production system access'
      calculation: :code:`M3 / M4`
  - name: '18.10: Deploy Web Application Firewalls'
    number: "18.10"
    description: Protect web applications by deploying web application firewalls (WAFs) that inspect all traffic flowing to the web application for common web application attacks. For applications that are not web-based, specific application firewalls should be deployed if such tools are available for the given application type. If the traffic is encrypted, the device should either sit behind the encryption or be capable of decrypting the traffic prior to analysis. If neither option is appropriate, a host-based web application firewall should be deployed.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '2.1: Maintain Inventory of Authorized Software'
    inputs:
    - name: The inventory of authorized software
    operations:
    - name: Enumerate all in-house owned and operated software (i.e. applications in the software inventory that are developed in-house and/or acquired) for which there is an application-level firewall technology exists
    - name: Enumerate all application-level firewalls (including WAF and host-based firewalls)
    - name: For each application-level firewall, enumerate covered software applications
    - name: Complement the set of software applications identified in the first operation with the covered software applications
    measures:
    - M1 = Enumerated list of all software in the inventory for which an application-level firewall technology exists
    - M2 = Enumerated list of all application-level firewalls
    - M3 = Enumerated list of applications covered by application-level firewalls
    - M4 = Enumerated list of applications not covered by software applications (fourth operation)
    - M5 = Count of software for which an application-level firewall technology exists (count of M1)
    - M6 = Count of application-level firewalls (count of M2)
    - M7 = Count of applications covered by application-level firewalls (count of M3)
    - M8 = Count of applications not covered by software applications (count of M4)
    metrics:
    - name: Coverage
      metric: ' The ratio of the number of applications covered by an application-level firewall to the number of eligible applications in the enterprise.'
      calculation: :code:`M7 / M5`
  - name: '18.11: Use Standard Hardening Configuration Templates for Databases'
    number: "18.11"
    description: For applications that rely on a database, use standard hardening configuration templates.  All systems that are part of critical business processes should also be tested.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '1.4: Maintain Detailed Asset Inventory'
    - '1.5: Maintain Asset Inventory Information'
    - '2.1: Maintain Inventory of Authorized Software'
    - '2.5: Integrate Software and Hardware Asset Inventories'
    - '5.1: Establish Secure Configurations'
    inputs:
    - name: The list of database management software being used in the organization
    - name: The list of systems on which database instances reside
    - name: The list of enterprise security configuration standards
    operations:
    - name: Determine, from the list of enterprise security configuration standards, which are applicable to database management software (M1)
    - name: From the list of enterprise security configuration standards, calculate the number of database management software that are covered by the standards (perform the intersection of the results of Operation 1 with Input 1; the result is M2)
    measures:
    - M1 = List of enterprise security configuration standards specific to database management systems
    - M2 = Count of M1
    - M3 = List of database management software covered by applicable enterprise security configuration standards
    - M4 = Count of M3
    - M5 = List of database management software not covered by applicable enterprise security configuration standards
    - M6 = Count of M5
    - M7 = Count of database management software being used in the organization (from Input 1)
    metrics:
    - name: Coverage
      metric: ' The ratio of database management software covered by applicable enterprise security configuration standards to the total number of database management software. **NOTE**: The second ask of this sub-control speaks to assessment of Input 2 against security configuration standards determined by Operation 1.'
      calculation: :code:`M4 / M7`
- name: 'CIS Control 19: Incident Response and Management'
  number: "19"
  description: |-
    Protect the organization’s information, as well as its reputation, by developing and implementing
    an incident response infrastructure (e.g., plans, defined roles, training, communications,
    management oversight) for quickly discovering an attack and then effectively containing the
    damage, eradicating the attacker’s presence, and restoring the integrity of the network and
    systems.
  why: |-
    Cyber incidents are now just part of our way of life. Even large, well-funded, and technically
    sophisticated enterprises struggle to keep up with the frequency and complexity of attacks. The
    question of a successful cyber-attack against an enterprise is not “if” but “when.”

    When an incident occurs, it is too late to develop the right procedures, reporting, data collection,
    management responsibility, legal protocols, and communications strategy that will allow the
    enterprise to successfully understand, manage, and recover. Without an incident response
    plan, an organization may not discover an attack in the first place, or, if the attack is detected,
    the organization may not follow good procedures to contain damage, eradicate the attacker’s
    presence, and recover in a secure fashion. Thus, the attacker may have a far greater impact,
    causing more damage, infecting more systems, and potentially exfiltrating more sensitive data
    than would otherwise be possible were an effective incident response plan in place.
  subcontrols:
  - name: '19.1: Document Incident Response Procedures'
    number: "19.1"
    description: Ensure that there are written incident response plans that define roles of personnel as well as phases of incident handling/management.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: Incident response plan
    operations:
    - name: Determine whether incident response plan exists (becomes M1)
    - name: If it exists, then manual review of incident response plan (determine M2 and M3)
    measures:
    - M1 = A plan exists
    - M2 = The plan defines incident response roles
    - M3 = The plan defines incident handling/management phases
    metrics:
    - name: Existence
      metric: ' Ensure that there are written incident response plans that define roles of personnel as well as phases of incident handling/management.'
      calculation: :code:`M1 AND M2 AND M3`
  - name: '19.2: Assign Job Titles and Duties for Incident Response'
    number: "19.2"
    description: Assign job titles and duties for handling computer and network incidents to specific individuals, and ensure tracking and documentation throughout the incident through resolution.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '19.1: Document Incident Response Procedures'
    inputs:
    - name: Incident Response Plan including Incident Response Job Titles/Duties
    - name: Mapping of individuals to Incident Response Job Titles/Duties
    operations:
    - name: Manually review the Incident Response Plan to verify that it exists and that it contains Incident Response job titles and duties. If the document exists and contains job titles and duties, set M1 equal to 1. If it does not exist, set M1 equal to 0 and skip the remaining operations.
    - name: Manually review the Incident Response Plan to verify that it ensures tracking and documentation throughout the incident through resolution. If this is adequately addressed in the document, set M2 equal to 1. If it is not, set M2 equal to 0.
    - name: For each job title specified in the Incident Response Plan, check Input 2 to ensure that at least one individual is mapped to that job. Create a list of jobs that have been assigned at least one individual (M3) and a list of jobs that have not been assigned at least one individual (M4).
    measures:
    - M1 = Boolean value indicating if the Incident Response Plan exists and contains Incident Response job titles and duties; 1 if so, 0 if not
    - M2 = Boolean value indicating if the Incident Response Plan adequately addresses tracking and documentation throughout the incident; 1 if so, 0 if not
    - M3 = List of Incident Response jobs with individuals assigned
    - M4 = List of Incident Response jobs without individuals assigned
    - M5 = Count of Incident Response jobs with individuals assigned (count of M3)
    - M6 = Total number of Incident Response jobs defined
    metrics:
    - name: Incident Response Plan Completeness
      metric: ' Does the incident response plan exist, contain job titles/duties, and adequately address tracking and documentation throughout the incident?'
      calculation: :code:`M1 AND M2`
    - name: Assignment Coverage
      metric: ' The ratio of incident response jobs/duties with assignees to the total number of incident response jobs/duties'
      calculation: :code:`M4 / M6`
  - name: '19.3: Designate Management Personnel to Support Incident Handling'
    number: "19.3"
    description: Designate management personnel, as well as backups, who will support the incident handling process by acting in key decision-making roles.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '19.1: Document Incident Response Procedures'
    inputs:
    - name: Incident response plan
    operations:
    - name: Determine whether incident response plan exists (becomes M1)
    - name: If it exists, then manual review of incident response plan (determine M2 and M3)
    measures:
    - M1 = A plan exists
    - M2 = The plan identifies management personnel filling incident response handling decision-making roles
    - M3 = The plan identifies backup personnel to the management personnel identified by M2
    metrics:
    - name: Coverage
      metric: ' Are personnel, including backups, designated to support the incident handling process?'
      calculation: :code:`M1 AND M2 AND M3`
  - name: '19.4: Devise Organization-wide Standards For Reporting Incidents'
    number: "19.4"
    description: Devise organization-wide standards for the time required for system administrators and other workforce members to report anomalous events to the incident handling team, the mechanisms for such reporting, and the kind of information that should be included in the incident notification.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '19.1: Document Incident Response Procedures'
    inputs:
    - name: Incident Reporting Standards document
    operations:
    - name: Determine whether the Incident Reporting Standards document exists. If the document exists, set M1 equal to 1. If it does not exist, set M1 equal to 0 and skip the remaining operations.
    - name: 'Manually review the Incident Reporting Standards document to determine if it addresses:'
    - name: "\tThe time required for system administrators and other workforce members to report anomalous events to the incident handling team (M2)"
    - name: "\tThe mechanisms for such reporting (M3)"
    - name: "\tThe kind of information that should be included in the incident notification (M4)"
    - name: For each, set the measure to 1 if the document adequately addresses the topic, or 0 if the document fails to adequately address the topic.
    measures:
    - M1 = Boolean value indicating if the Incident Reporting Standards document exists; 1 if it exists, 0 if not
    - M2 = Boolean value indicating if the Incident Reporting Standards document adequately addresses the time required for system administrators and other workforce members to report anomalous events to the incident handling team; 1 if it does, 0 if it does not
    - M3 = Boolean value indicating if the Incident Reporting Standards document adequately addresses the mechanisms for reporting anomalous events to the incident handling team; 1 if it does, 0 if it does not
    - M4 = Boolean value indicating if the Incident Reporting Standards document adequately addresses the kind of information that should be included in an incident notification to the incident handling team; 1 if it does, 0 if it does not
    metrics:
    - name: Incident Reporting Standards Completeness
      metric: ' Does the Incident Reporting Standards document exist and adequately addresses the specified topics?'
      calculation: :code:`M1 AND M2 AND M3 AND M4`
  - name: '19.5: Maintain Contact Information For Reporting Security Incidents'
    number: "19.5"
    description: Assemble and maintain information on third-party contact information to be used to report a security incident, such as Law Enforcement, relevant government departments, vendors, and Information Sharing and Analysis Center (ISAC) partners.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* Subcontrol 19.1: Document Incident Response Procedures'
    inputs:
    - name: Incident response plan
    - name: List of relevant third-party incident reporting entities
    operations:
    - name: Determine whether incident response plan exists (becomes M1)
    - name: If it exists, then manual review of incident response plan (determine M2)
    measures:
    - M1 = Boolean value indicating whether an incident response plan exists; 1 if an incident response plan exists, 0 otherwise.
    - M2 = The plan includes information on third-party contacts for incident reporting (M1 includes Input 2)
    metrics:
    - name: Coverage
      metric: ' Is information on third-party contact information maintained, for use in incident handling?'
      calculation: :code:`M1 AND M2`
  - name: '19.6: Publish Information Regarding Reporting Computer Anomalies and Incidents'
    number: "19.6"
    description: Publish information for all workforce members, regarding reporting computer anomalies and incidents, to the incident handling team.  Such information should be included in routine employee awareness activities.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "1"
      - "2"
      - "3"
    dependencies:
    - '* Subcontrol 19.1: Document Incident Response Procedures'
    inputs:
    - name: Incident response plan
    - name: Security awareness program documentation
    operations:
    - name: Determine whether incident response plan exists (becomes M1)
    - name: Determine whether the security awareness documentation exists (becomes M2)
    - name: If both exist, then review the security awareness plan (determine M3 and M4)
    measures:
    - M1 = Boolean value indicating whether an incident response plan exists; 1 if an incident response plan exists, 0 otherwise.
    - M2 = Boolean value indicating whether a security awareness program exists; 1 if an incident response plan exists, 0 otherwise.
    - M3 = The incident response plan requires publishing incident reporting information for all workforce members as part of the organization's security awareness program
    - M4 = The security awareness program publishes incident reporting information for all workforce members
    metrics:
    - name: Coverage
      metric: ' Is information regarding reporting of computer anomalies and incidents published for all workforce members?'
      calculation: :code:`M1 AND M2 AND M3 AND M4`
  - name: '19.7: Conduct Periodic Incident Scenario Sessions for Personnel'
    number: "19.7"
    description: Plan and conduct routine incident response exercises and scenarios for the workforce involved in the incident response to maintain awareness and comfort in responding to real-world threats.  Exercises should test communication channels, decision making, and incident responder’s technical capabilities using tools and data available to them.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '19.1: Document Incident Response Procedures'
    inputs:
    - name: After Action Report from most recent incident response exercise
    - name: Incident Response Plan
    operations:
    - name: Examine the After Action Report (Input 1) and determine the date of the exercise.  Examine the Incident Response Plan (Input 2) to determine the required time frame for incident response exercises and determine if the most recent exercise was within that time frame (M1).
    - name: 'Manually review the After Action Report to determine if it details that the incident response exercise tested the following: communication channels (M2), decision making (M3), incident responder''s technical capabilities using the tools and data available to them (M4).'
    measures:
    - M1 = Boolean value indicating if the most recent incident response exercise was within the required time frame; 1 if so, 0 if not
    - M2 = Boolean value indicating if the most recent incident response exercise After Action Report contains information about the exercise's testing of communication channels; 1 if so, 0 if not
    - M3 = Boolean value indicating if the most recent incident response exercise After Action Report contains information about the exercise's testing of decision making; 1 if so, 0 if not
    - M4 = Boolean value indicating if the most recent incident response exercise After Action Report contains information about the exercise's testing of incident responder's technical capabilities using the tools and data available to them; 1 if so, 0 if not
    metrics:
    - name: Timeliness
      metric: ' Timeliness of most recent incident response exercise'
      calculation: :code:`M1`
    - name: Completeness
      metric: ' Were incident response After Action Reports complete, containing information regarding testing of communication channels, decision making, and technical competence?'
      calculation: :code:`(M2 + M3 + M4) / 3`
  - name: '19.8: Create Incident Scoring and Prioritization Schema'
    number: "19.8"
    description: Create incident scoring and prioritization schema based on known or potential impact to your organization. Utilize score to define frequency of status updates and escalation procedures.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "3"
    dependencies:
    - '19.1: Document Incident Response Procedures'
    inputs:
    - name: Enterprise incident management policy
    operations:
    - name: 'Examine the enterprise incident management policy for the following properties:'
    - name: "\tIncident scoring and prioritization schema based on known or potential impact"
    - name: "\tProcedure relying on this schema is used to determine status update frequency during incident handling"
    - name: "\tProcedure relying on this schema is used to determine escalation paths during incident handling"
    measures:
    - M1 = (Boolean) 1 if an incident scoring and prioritization schema is present in the policy; 0 otherwise
    - M2 = (Boolean) 1 if status update procedure relies on aforementioned schema; 0 otherwise
    - M3 = (Boolean) 1 if escalation procedure relies on aforementioned schema; 0 otherwise
    metrics:
    - name: Scoring/Prioritization
      metric: ' Does the incident management policy include a scoring/prioritization schema, and are status update frequency and escalation paths reliant upon that schema?'
      calculation: :code:`M1 AND M2 AND M3`
- name: 'CIS Control 20: Penetration Tests and Red Team Exercises'
  number: "20"
  description: |-
    Test the overall strength of an organization’s defense (the technology, the processes, and the
    people) by simulating the objectives and actions of an attacker.
  why: |-
    Attackers often exploit the gap between good defensive designs and intentions and
    implementation or maintenance. Examples include: the time window between announcement of
    a vulnerability, the availability of a vendor patch, and actual installation on every machine. Other
    examples include: well-intentioned policies that have no enforcement mechanism (especially
    those intended to restrict risky human actions); failure to apply good configurations to machines
    that come on and off of the network; and failure to understand the interaction among multiple
    defensive tools, or with normal system operations that have security implications.

    A successful defensive posture requires a comprehensive program of effective policies and
    governance, strong technical defenses, and appropriate action by people. In a complex
    environment where technology is constantly evolving, and new attacker tradecraft appears
    regularly, organizations should periodically test their defenses to identify gaps and to assess their
    readiness by conducting penetration testing.

    Penetration testing starts with the identification and assessment of vulnerabilities that can be
    identified in the enterprise. Next, tests are designed and executed to demonstrate specifically
    how an adversary can either subvert the organization’s security goals (e.g., the protection of
    specific Intellectual Property) or achieve specific adversarial objectives (e.g., establishment of
    a covert Command and Control infrastructure). The results provide deeper insight, through
    demonstration, into the business risks of various vulnerabilities.

    Red Team exercises take a comprehensive approach at the full spectrum of organization policies,
    processes, and defenses in order to improve organizational readiness, improve training for
    defensive practitioners, and inspect current performance levels. Independent Red Teams can
    provide valuable and objective insights about the existence of vulnerabilities and the efficacy
    of defenses and mitigating controls already in place and even of those planned for future
    implementation.
  subcontrols:
  - name: '20.1: Establish a Penetration Testing Program'
    number: "20.1"
    description: Establish a program for penetration tests that includes a full scope of blended attacks, such as wireless, client-based, and web application attacks.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '* None'
    inputs:
    - name: A Penetration Testing Program document
    operations:
    - name: Determine whether the Penetration Testing Program document exists. If the document exists, set M1 equal to 1. If it does not exist, set M1 equal to 0 and skip the remaining operations.
    - name: Manually review the Penetration Testing Program document to determine if it addresses a full scope of blended attacks (including wireless, client-based, and web application). If the document adequately addresses a full scope of attacks, set M2 equal to 1. If it does not, set M2 equal to 0.
    measures:
    - M1 = Boolean value indicating if the Penetration Testing Program document exists; 1 if it exists, 0 otherwise
    - M2 = Boolean value indicating if the Penetration Testing Program document adequately addresses a full scope of attacks; 1 if it does, 0 otherwise
    metrics:
    - name: Coverage
      metric: ' Does a penetration testing program document exist and adequately address a full scope of attacks?'
      calculation: :code:`
  - name: '20.2: Conduct Regular External and Internal Penetration Tests'
    number: "20.2"
    description: Conduct regular external and internal penetration tests to identify vulnerabilities and attack vectors that can be used to exploit enterprise systems successfully.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '20.1: Establish a Penetration Testing Program'
    inputs:
    - name: Penetration Testing Report for most recent external penetration test
    - name: Penetration Testing Report for most recent internal penetration test
    - name: Penetration Testing Program document
    operations:
    - name: 'Examine the Penetration Testing Reports (Inputs 1 and 2) to determine the dates that the most recent penetration tests of each type (external and internal) occurred. Examine the Penetration Testing Program document (Input 3) to determine how frequently the organization is required to conduct external and internal penetration tests, and use those required time frames to determine:'
    - name: "\tif the most recent external penetration test was within the required time frame (M1)"
    - name: "\tif the most recent internal penetration test was within the required time frame (M2)"
    - name: Manually review the Penetration Testing Reports to confirm that they contain any discovered vulnerabilities and attack vectors that can be used to successfully exploit the organization's systems (M3); or, if none were successful, verify that the documentation describes those that were attempted but were unsuccessful.
    measures:
    - M1 = Boolean value indicating if the most recent external penetration test was within the required time frame; 1 if so, 0 otherwise
    - M2 = Boolean value indicating if the most recent internal penetration test was within the required time frame; 1 if so, 0 otherwise
    - M3 = Boolean value indicating if the Penetration Testing Reports contain discovered vulnerabilities and attack vectors that were successful against the organization's systems; 1 if so, 0 otherwise
    metrics:
    - name: Penetration Testing Reports
      metric: ' Are both internal and external penetration tests conducted regularly?'
      calculation: :code:`M1 AND M2`
    - name: Vulnerability Discovery
      metric: ' Do penetration testing reports document discovered vulnerabilities?'
      calculation: :code:`M3`
  - name: '20.3: Perform Periodic Red Team Exercises'
    number: "20.3"
    description: Perform periodic Red Team exercises to test organizational readiness to identify and stop attacks or to respond quickly and effectively.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "3"
    dependencies:
    - '20.1: Establish a Penetration Testing Program'
    inputs:
    - name: Enterprise penetration test policy
    operations:
    - name: 'Examine the enterprise penetration test policy for the following properties:'
    - name: "\tRed team exercises are specified to occur periodically"
    - name: Note the periodicity of expected red team exercises
    - name: Interview security operations personnel to determine the last time a red team exercise was performed
    measures:
    - M1 = (Boolean) 1 if the enterprise penetration testing policy contains periodicity for red team exercises; 0 otherwise
    - M2 = Time of last red team exercise
    - M3 = Current time
    - M3 = Current time - maximum period between red team exercises
    - M4 = (Boolean) 1 if the time of last red team exercise is greater than or equal to M3; 0 otherwise
    metrics:
    - name: Red Team Exercises
      metric: ' Are periodic Red Team exercises required by the enterprise''s penetration testing policy?'
      calculation: :code:`M1`
    - name: Frequency
      metric: ' Was the last Red Team exercise performed within the appropriate time period?'
      calculation: :code:`M4`
  - name: '20.4: Include Tests for Presence of Unprotected System Information and Artifacts'
    number: "20.4"
    description: Include tests for the presence of unprotected system information and artifacts that would be useful to attackers, including network diagrams, configuration files, older penetration test reports, emails or documents containing passwords or other information critical to system operation.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '20.1: Establish a Penetration Testing Program'
    inputs:
    - name: Penetration Testing Program document
    operations:
    - name: 'Manually review the Penetration Testing Program document (Input 1) to determine if it requires tests to discover the following unprotected system information:'
    - name: "\tNetwork diagrams (M1)"
    - name: "\tConfiguration files (M2)"
    - name: "\tPenetration test reports (M3)"
    - name: "\tEmails or documents containing passwords or other information critical to system operation (M4)"
    measures:
    - M1 = Boolean value indicating if the Penetration Testing Program document requires tests to discover unprotected network diagrams; 1 if so, 0 otherwise
    - M2 = Boolean value indicating if the Penetration Testing Program document requires tests to discover unprotected configuration files; 1 if so, 0 otherwise
    - M3 = Boolean value indicating if the Penetration Testing Program document requires tests to discover unprotected penetration test reports; 1 if so, 0 otherwise
    - M4 = Boolean value indicating if the Penetration Testing Program document requires tests to discover unprotected emails or documents containing passwords or other critical system information; 1 if so, 0 otherwise
    metrics:
    - name: Coverage
      metric: ' Does the Penetration Testing Program Includes Tests for the Presence of Unprotected System Information and Artifacts?'
      calculation: :code:`(M1 + M2 + M3 + M4) / 4`
  - name: '20.5: Create a Test Bed for Elements Not Typically Tested in Production'
    number: "20.5"
    description: Create a test bed that mimics a production environment for specific penetration tests and Red Team attacks against elements that are not typically tested in production, such as attacks against supervisory control and data acquisition and other control systems.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '20.1: Establish a Penetration Testing Program'
    inputs:
    - name: List of penetration tests and Red Team attacks and associated elements that are not typically tested in production (i.e. SCADA systems)
    - name: Description of test bed(s) that have been setup to mimic these production environments
    operations:
    - name: For each penetration test and Red Team attack in Input 1, manually review the Inputs to see that there is at least one appropriate test bed in Input 2 to cover that test or attack.
    - name: "\tThose tests/attacks that have at least one matching test bed will be included in list M1"
    - name: "\tThose tests/attacks that do not have at least one matching test bed will be included in list M2"
    measures:
    - M1 = List of penetration tests and Red Team attacks that have at least one matching test bed
    - M2 = List of penetration tests and Red Team attacks that do not have at least one matching test bed
    - M3 = Count of tests/attacks that do have a matching test bed (count of M1)
    - M4 = Total count of tests/attacks in Input 1
    metrics:
    - name: Coverage
      metric: ' The ratio of tests/attacks not typically tested in production that have a matching test bed'
      calculation: :code:`M3 / M4`
  - name: '20.6: Use Vulnerability Scanning and Penetration Testing Tools in Concert'
    number: "20.6"
    description: Use vulnerability scanning and penetration testing tools in concert. The results of vulnerability scanning assessments should be used as a starting point to guide and focus penetration testing efforts.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '20.1: Establish a Penetration Testing Program'
    inputs:
    - name: Penetration Testing Program document
    operations:
    - name: Manually review the Penetration Testing Program document (Input 1) to verify that it instructs the organization to use vulnerability scan results to inform penetration testing efforts. The presence or absence of this instruction becomes M1.
    measures:
    - M1 = Boolean value indicating if the Penetration Testing Program document includes instructions for using vulnerability scan results to inform penetration testing efforts; 1 if instructions are included, 0 otherwise.
    metrics:
    - name: Presence
      metric: ' Presence or absence of instructions to use vulnerability scan results to inform penetration testing efforts'
      calculation: :code:`M1`
  - name: '20.7: Ensure Results From Penetration Test Are Documented Using Open, Machine-Readable Standards'
    number: "20.7"
    description: Wherever possible, ensure that Red Team results are documented using open, machine-readable standards (e.g., SCAP). Devise a scoring method for determining the results of Red Team exercises so that results can be compared over time.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "3"
    dependencies:
    - '20.1: Establish a Penetration Testing Program'
    inputs:
    - name: Enterprise red team policy
    - name: Latest red team result documentation
    operations:
    - name: 'Examine the enterprise red team policy for the following properties:'
    - name: "\tRed team documentation is machine-readable"
    - name: "\tRed team documentation is based on open specification"
    - name: "\tRed team results must be scored to support ongoing comparison"
    - name: Examine the latest red team results documentation to verify
    - name: "\tDocumentation is machine-readable"
    - name: "\tDocumentation is based on open specification"
    - name: "\tCurrent score was compared to previous score"
    measures:
    - M1 = (Boolean) 1 if the Policy demands machine-readable red team results documentation; 0 otherwise
    - M2 = (Boolean) 1 if the Policy demands open specification for machine-readable results; 0 otherwise
    - M3 = (Boolean) 1 if the Policy demands results to be scored to support ongoing comparison; 0 otherwise
    - M4 = (Boolean) 1 if the Last red team results are machine-readable; 0 otherwise
    - M5 = (Boolean) 1 if the Last red team results are based on an open specification; 0 otherwise
    - M6 = (Boolean) 1 if the Last red team results includes current and previous score for comparison.  In the event the current score is the result of the enterprise's first red team exercise, this can be set to 1; 0 otherwise
    metrics:
    - name: Policy Conformance
      metric: ' Is the enterprise''s Red Team policy specified to produce results using open, machine readable standards, and is scoring designed to facilitate ongoing comparison?'
      calculation: :code:`M1 AND M2 AND M3`
    - name: Operational Conformance
      metric: ' Is the enterprise''s Red Team policy being practiced operationally?'
      calculation: :code:`M4 AND M5 AND M6`
  - name: '20.8: Control and Monitor Accounts Associated With Penetration Testing'
    number: "20.8"
    description: Any user or system accounts used to perform penetration testing should be controlled and monitored to make sure they are only being used for legitimate purposes, and are removed or restored to normal function after testing is over.
    header:
      assetType: N/A
      securityFunction: N/A
      implementationGroups:
      - "2"
      - "3"
    dependencies:
    - '16.6: Maintain an Inventory of Accounts'
    - '20.1: Establish a Penetration Testing Program'
    inputs:
    - name: The historical inventory of user and system accounts (prior to input 3)
    - name: The current inventory of user and system accounts (after input 4)
    - name: The timestamp for the beginning of the most recent penetration testing period
    - name: The timestamp for the ending of the most recent penetration testing period
    operations:
    - name: Enumerate historical user and system accounts (Input 1) and note any privileges specifically assigned for penetration testing (M1)
    - name: Enumerate the current user and system accounts and privileges for those accounts determined in Operation 1
    measures:
    - M1 = The list of historical user and system accounts authorized for use in penetration testing
    - M2 = Count of historical user and system accounts authorized for use in penetration testing (count of M1)
    - M3 = The list of current user and system accounts that were authorized for use in penetration testing
    - M4 = Count of current user and system accounts that were authorized for use in penetration testing (count of M3)
    - M5 = The list of current user and system accounts with penetration testing privileges still assigned
    - M6 = Count of current user and system accounts with penetration testing privileges still assigned (count of M5)
    metrics:
    - name: Privileged Accounts Remain
      metric: ' If M5 > 0, then privileged user accounts remain following the penetration testing period.'
      calculation: :code:`M5 > 0`

